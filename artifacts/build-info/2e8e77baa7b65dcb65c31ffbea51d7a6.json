{"id":"2e8e77baa7b65dcb65c31ffbea51d7a6","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/Nftmarketplace.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.25;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\nerror PriceNotMet(address nftAddress, uint256 tokenId, uint256 price);\r\nerror ItemNotForSale(address nftAddress, uint256 tokenId);\r\nerror NotListed(address nftAddress, uint256 tokenId);\r\nerror AlreadyListed(address nftAddress, uint256 tokenId);\r\nerror NoProceeds();\r\nerror NotOwner();\r\nerror NotApprovedForMarketplace();\r\nerror PriceMustBeAboveZero();\r\n\r\ncontract NftMarketplace is ReentrancyGuard {\r\n\r\n  struct Listing {\r\n\t\tuint256 price;\r\n\t\taddress seller;\r\n\t}\r\n\tevent ItemListed (\r\n\t\taddress indexed seller,\r\n\t\taddress indexed nftAddress,\r\n\t\tuint256 indexed tokenId,\r\n\t\tuint256 price\r\n\t);\r\n\tevent ItemCanceled(\r\n\t\taddress indexed seller,\r\n\t\taddress indexed nftAddress,\r\n\t\tuint256 indexed tokenId\r\n\t);\r\n\tevent ItemBought(\r\n\t\taddress indexed buyer,\r\n\t\taddress indexed nftAddress,\r\n\t\tuint256 indexed toeknId,\r\n\t\tuint256 price\r\n\t);\r\n\r\n\tmapping(address => mapping(uint256 => Listing)) private s_listings;\r\n\tmapping(address => uint256) private s_proceeds;\r\n\r\n\tmodifier notListed(\r\n\t\taddress nftAddress,\r\n\t\tuint256 tokenId,\r\n\t\taddress owner\r\n\t) {\r\n\t\tListing memory listing = s_listings[nftAddress][tokenId];\r\n\t\tif(listing.price > 0) {\r\n\t\t\trevert AlreadyListed(nftAddress, tokenId);\r\n\t\t}\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier isOwner(\r\n\t\taddress nftAddress,\r\n\t\tuint256 tokenId,\r\n\t\taddress spender\r\n\t){\r\n\t\tIERC721 nft = IERC721(nftAddress);\r\n\t\taddress owner = nft.ownerOf(tokenId);\r\n\t\tif(spender != owner) {\r\n\t\t\trevert NotOwner();\r\n\t\t}\r\n\t\t_;\r\n\t}\r\n\r\n\tfunction listItem(\r\n\t\t\taddress nftAddress,\r\n\t\t\tuint256 tokenId,\r\n\t\t\tuint256 price\r\n\t)\r\n\t\texternal \r\n\t\tnotListed(nftAddress, tokenId, msg.sender)\r\n\t\tisOwner(nftAddress, tokenId, msg.sender)\r\n\t{\r\n\t\tif(price <= 0) {\r\n\t\t\t\trevert PriceMustBeAboveZero();\r\n\t\t}\r\n\t\tIERC721 nft = IERC721(nftAddress);\r\n\t\tif(nft.getApproved(tokenId) != address(this)) {\r\n\t\t\t\trevert NotApprovedForMarketplace();\r\n\t\t}\r\n\t\ts_listings[nftAddress][tokenId] = Listing(price, msg.sender);\r\n\t\temit ItemListed(msg.sender, nftAddress, tokenId, price);\r\n\t}\r\n\r\n\tmodifier isListed(address nftAddress, uint256 tokenId) {\r\n\t\tListing memory listing = s_listings[nftAddress][tokenId];\r\n\t\tif(listing.price <= 0) {\r\n\t\t\trevert NotListed(nftAddress, tokenId);\r\n\t\t}\r\n\t\t_;\r\n\t}\r\n\t\r\n\tfunction cancelListing(address nftAddress, uint256 tokenId)\r\n\t\texternal\r\n\t\tisOwner(nftAddress, tokenId, msg.sender)\r\n\t\tisListed(nftAddress, tokenId)\r\n\t{\r\n\t\tdelete (s_listings[nftAddress][tokenId]);\r\n\t\temit ItemCanceled(msg.sender, nftAddress, tokenId);\r\n\t}\r\n\t\r\n\tfunction buyItem(address nftAddress, uint256 tokenId)\r\n\t\texternal\r\n\t\tpayable\r\n\t\tisListed(nftAddress, tokenId)\r\n\t\tnonReentrant\r\n\t{\r\n\t\tListing memory listedItem = s_listings[nftAddress][tokenId];\r\n\t\tif(msg.value < listedItem.price) {\r\n\t\t\trevert PriceNotMet(nftAddress, tokenId, listedItem.price);\r\n\t\t} \r\n\t\ts_proceeds[listedItem.seller] += msg.value;\r\n\t\tdelete(s_listings[nftAddress][tokenId]);\r\n\t\tIERC721(nftAddress).safeTransferFrom(listedItem.seller, msg.sender, tokenId);\r\n\t\temit ItemBought(msg.sender, nftAddress, tokenId, listedItem.price);\r\n\t}\r\n\tfunction updateListing(\r\n\t\taddress nftAddress,\r\n\t\tuint256 tokenId,\r\n\t\tuint256 newPrice\r\n\t)\r\n\t\texternal\r\n\t\tisListed(nftAddress, tokenId)\r\n\t{\r\n\t\tif(newPrice == 0) {\r\n\t\t\trevert PriceMustBeAboveZero();\r\n\t\t}\r\n\t\ts_listings[nftAddress][tokenId].price = newPrice;\r\n\t\temit ItemListed(msg.sender, nftAddress, tokenId, newPrice);\r\n\t}\r\n\r\n\tfunction withdrawProceeds() external {\r\n\t\tuint256 proceeds = s_proceeds[msg.sender];\r\n\t\tif(proceeds <= 0){\r\n\t\t\trevert NoProceeds();\r\n\t\t}\r\n\t\ts_proceeds[msg.sender] = 0;\r\n\r\n\t\t(bool success,) = payable(msg.sender).call{value:proceeds}(\"\");\r\n\t\trequire(success, \"Transfer failed\");\r\n\t}\r\n\tfunction getListing(address nftAddress, uint256 tokenId)\r\n\t\texternal\r\n\t\tview\r\n\t\treturns (Listing memory)\r\n\t{\r\n\t\t\treturn s_listings[nftAddress][tokenId];\r\n\t}\r\n\tfunction getProceeds(address seller) external view returns (uint256) {\r\n\t\treturn s_proceeds[seller];\r\n\t}\r\n}"},"contracts/test/BasicNft.sol":{"content":"// SPDX-License-Indentifier: MIT\r\npragma solidity ^0.8.25;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\n\r\ncontract BasicNft is ERC721 {\r\n\tstring public constant TOKEN_URI = \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\";\r\n\tuint256 private s_tokenCounter;\r\n\r\n\tevent DogMinted(uint256 indexed tokenId);\r\n\t\r\n  constructor() ERC721(\"Dogie\", \"DOG\") {\r\n  \ts_tokenCounter = 0;\r\n  }\r\n\r\n\tfunction mintNft() public {\r\n\t\t_safeMint(msg.sender, s_tokenCounter);\r\n\t\temit DogMinted(s_tokenCounter);\r\n\t\ts_tokenCounter = s_tokenCounter + 1;\r\n\t}\r\n\r\n\tfunction tokenURI(uint256 tokenId) public view override returns (string memory) {\r\n\t\trequire(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\r\n\t\treturn TOKEN_URI;\r\n\t}\r\n\r\n\tfunction getTokenCounter() public view returns (uint256) {\r\n\t\treturn s_tokenCounter;\r\n\t}\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/test/BasicNft.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/test/BasicNft.sol","start":-1},"type":"Warning"}],"sources":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[64]},"id":65,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"137:750:0","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":64,"linearizedBaseContracts":[64],"name":"ReentrancyGuard","nameLocation":"906:15:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:0","nodeType":"VariableDeclaration","scope":64,"src":"1676:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":8,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:0","nodeType":"VariableDeclaration","scope":64,"src":"1723:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:0","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":10,"mutability":"mutable","name":"_status","nameLocation":"1783:7:0","nodeType":"VariableDeclaration","scope":64,"src":"1767:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":17,"nodeType":"Block","src":"1811:39:0","statements":[{"expression":{"id":15,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":13,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"1821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":14,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"1831:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":16,"nodeType":"ExpressionStatement","src":"1821:22:0"}]},"id":18,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"1808:2:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1811:0:0"},"scope":64,"src":"1797:53:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":28,"nodeType":"Block","src":"2251:79:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":21,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2261:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":23,"nodeType":"ExpressionStatement","src":"2261:21:0"},{"id":24,"nodeType":"PlaceholderStatement","src":"2292:1:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":25,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2303:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"2303:20:0"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"1856:366:0","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":29,"name":"nonReentrant","nameLocation":"2236:12:0","nodeType":"ModifierDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"2248:2:0"},"src":"2227:103:0","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"2375:248:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":33,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2468:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":34,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2479:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":36,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":32,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2460:63:0"},{"expression":{"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":40,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2608:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":42,"nodeType":"ExpressionStatement","src":"2598:18:0"}]},"id":44,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[],"src":"2364:2:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"2375:0:0"},"scope":64,"src":"2336:287:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":51,"nodeType":"Block","src":"2667:171:0","statements":[{"expression":{"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":47,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2809:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":48,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"2819:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":50,"nodeType":"ExpressionStatement","src":"2809:22:0"}]},"id":52,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2656:2:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"2667:0:0"},"scope":64,"src":"2629:209:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":62,"nodeType":"Block","src":"3081:43:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"3098:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":59,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3109:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":57,"id":61,"nodeType":"Return","src":"3091:26:0"}]},"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2844:168:0","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":63,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[],"src":"3049:2:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"3075:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:0"},"scope":64,"src":"3017:107:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":65,"src":"888:2238:0","usedErrors":[],"usedEvents":[]}],"src":"112:3015:0"},"id":0},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1482],"Context":[1512],"ERC165":[1765],"ERC721":[991],"IERC165":[1777],"IERC721":[1107],"IERC721Metadata":[1152],"IERC721Receiver":[1125],"Math":[2643],"SignedMath":[2748],"Strings":[1741]},"id":992,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":66,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":67,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1108,"src":"132:23:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":68,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1126,"src":"156:31:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":69,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1153,"src":"188:42:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":70,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1483,"src":"231:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":71,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1513,"src":"265:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":72,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1742,"src":"299:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":73,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1766,"src":"333:46:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":75,"name":"Context","nameLocations":["647:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1512,"src":"647:7:1"},"id":76,"nodeType":"InheritanceSpecifier","src":"647:7:1"},{"baseName":{"id":77,"name":"ERC165","nameLocations":["656:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1765,"src":"656:6:1"},"id":78,"nodeType":"InheritanceSpecifier","src":"656:6:1"},{"baseName":{"id":79,"name":"IERC721","nameLocations":["664:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1107,"src":"664:7:1"},"id":80,"nodeType":"InheritanceSpecifier","src":"664:7:1"},{"baseName":{"id":81,"name":"IERC721Metadata","nameLocations":["673:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"673:15:1"},"id":82,"nodeType":"InheritanceSpecifier","src":"673:15:1"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"381:246:1","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":991,"linearizedBaseContracts":[991,1152,1107,1765,1777,1512],"name":"ERC721","nameLocation":"637:6:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":85,"libraryName":{"id":83,"name":"Address","nameLocations":["701:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1482,"src":"701:7:1"},"nodeType":"UsingForDirective","src":"695:26:1","typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":88,"libraryName":{"id":86,"name":"Strings","nameLocations":["732:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1741,"src":"732:7:1"},"nodeType":"UsingForDirective","src":"726:26:1","typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":90,"mutability":"mutable","name":"_name","nameLocation":"791:5:1","nodeType":"VariableDeclaration","scope":991,"src":"776:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":89,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":92,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:1","nodeType":"VariableDeclaration","scope":991,"src":"823:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":91,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":96,"mutability":"mutable","name":"_owners","nameLocation":"934:7:1","nodeType":"VariableDeclaration","scope":991,"src":"898:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":95,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":93,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":100,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:1","nodeType":"VariableDeclaration","scope":991,"src":"992:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":99,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":104,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:1","nodeType":"VariableDeclaration","scope":991,"src":"1093:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":103,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":102,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":110,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:1","nodeType":"VariableDeclaration","scope":991,"src":"1199:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":109,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":108,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":107,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":126,"nodeType":"Block","src":"1446:57:1","statements":[{"expression":{"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":118,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"1456:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":119,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"1464:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":121,"nodeType":"ExpressionStatement","src":"1456:13:1"},{"expression":{"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":122,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"1479:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":123,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"1489:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":125,"nodeType":"ExpressionStatement","src":"1479:17:1"}]},"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"1277:108:1","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":127,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"name_","nameLocation":"1416:5:1","nodeType":"VariableDeclaration","scope":127,"src":"1402:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":112,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:1","nodeType":"VariableDeclaration","scope":127,"src":"1423:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":114,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:1"},"returnParameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"1446:0:1"},"scope":991,"src":"1390:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1764,1776],"body":{"id":157,"nodeType":"Block","src":"1678:192:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":138,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1707:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":140,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"1727:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1107_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1107_$","typeString":"type(contract IERC721)"}],"id":139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1107","typeString":"type(contract IERC721)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1736:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1763:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":146,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"1783:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1152_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1152_$","typeString":"type(contract IERC721Metadata)"}],"id":145,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1152","typeString":"type(contract IERC721Metadata)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1800:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":153,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1851:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":151,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$991_$","typeString":"type(contract super ERC721)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1833:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1764,"src":"1827:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":137,"id":156,"nodeType":"Return","src":"1688:175:1"}]},"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"1509:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":158,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:1","nodeType":"FunctionDefinition","overrides":{"id":134,"nodeType":"OverrideSpecifier","overrides":[{"id":132,"name":"ERC165","nameLocations":["1646:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1765,"src":"1646:6:1"},{"id":133,"name":"IERC165","nameLocations":["1654:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1777,"src":"1654:7:1"}],"src":"1637:25:1"},"parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:1","nodeType":"VariableDeclaration","scope":158,"src":"1597:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":129,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:1"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"1672:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":135,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:1"},"scope":991,"src":"1570:300:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1032],"body":{"id":181,"nodeType":"Block","src":"2010:123:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2028:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:1","typeDescriptions":{}}},"id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2037:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":167,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":176,"nodeType":"ExpressionStatement","src":"2020:73:1"},{"expression":{"baseExpression":{"id":177,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"2110:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":179,"indexExpression":{"id":178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2120:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":166,"id":180,"nodeType":"Return","src":"2103:23:1"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1876:48:1","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":182,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:1","nodeType":"FunctionDefinition","overrides":{"id":163,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:1"},"parameters":{"id":162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"owner","nameLocation":"1956:5:1","nodeType":"VariableDeclaration","scope":182,"src":"1948:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:1"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":182,"src":"2001:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:1"},"scope":991,"src":"1929:204:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1040],"body":{"id":209,"nodeType":"Block","src":"2271:138:1","statements":[{"assignments":[192],"declarations":[{"constant":false,"id":192,"mutability":"mutable","name":"owner","nameLocation":"2289:5:1","nodeType":"VariableDeclaration","scope":209,"src":"2281:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":196,"initialValue":{"arguments":[{"id":194,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"2306:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":193,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"2297:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2297:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":198,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2332:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:1","typeDescriptions":{}}},"id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2341:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"2324:56:1"},{"expression":{"id":207,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2397:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":190,"id":208,"nodeType":"Return","src":"2390:12:1"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"2139:46:1","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":210,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:1","nodeType":"FunctionDefinition","overrides":{"id":187,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:1"},"parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:1","nodeType":"VariableDeclaration","scope":210,"src":"2207:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:1"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":210,"src":"2262:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:1"},"scope":991,"src":"2190:219:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1137],"body":{"id":219,"nodeType":"Block","src":"2540:29:1","statements":[{"expression":{"id":217,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"2557:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":216,"id":218,"nodeType":"Return","src":"2550:12:1"}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"2415:51:1","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":220,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:1","nodeType":"FunctionDefinition","overrides":{"id":213,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:1"},"parameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"2484:2:1"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"2525:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":214,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:1"},"scope":991,"src":"2471:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1143],"body":{"id":229,"nodeType":"Block","src":"2704:31:1","statements":[{"expression":{"id":227,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"2721:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":226,"id":228,"nodeType":"Return","src":"2714:14:1"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2575:53:1","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":230,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:1","nodeType":"FunctionDefinition","overrides":{"id":223,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:1"},"parameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"2648:2:1"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":230,"src":"2689:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":224,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:1"},"scope":991,"src":"2633:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1151],"body":{"id":268,"nodeType":"Block","src":"2889:188:1","statements":[{"expression":{"arguments":[{"id":240,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"2914:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":239,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2899:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2899:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":242,"nodeType":"ExpressionStatement","src":"2899:23:1"},{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:1","nodeType":"VariableDeclaration","scope":268,"src":"2933:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":243,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":247,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"2957:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2957:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:1"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":250,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"2990:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":248,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:1","typeDescriptions":{}}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2984:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2999:6:1","memberName":"length","nodeType":"MemberAccess","src":"2984:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:1","trueExpression":{"arguments":[{"arguments":[{"id":259,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"3036:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":233,"src":"3045:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3053:8:1","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1571,"src":"3045:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":257,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3023:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":255,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:1","typeDescriptions":{}}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":238,"id":267,"nodeType":"Return","src":"2977:93:1"}]},"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"2741:55:1","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:1","nodeType":"FunctionDefinition","overrides":{"id":235,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:1"},"parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:1","nodeType":"VariableDeclaration","scope":269,"src":"2819:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:1"},"returnParameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"2874:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":236,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:1"},"scope":991,"src":"2801:276:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":277,"nodeType":"Block","src":"3385:26:1","statements":[{"expression":{"hexValue":"","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":274,"id":276,"nodeType":"Return","src":"3395:9:1"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"3083:231:1","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":278,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:1","nodeType":"FunctionDefinition","parameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"3336:2:1"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3370:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":272,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:1"},"scope":991,"src":"3319:92:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1080],"body":{"id":320,"nodeType":"Block","src":"3538:336:1","statements":[{"assignments":[288],"declarations":[{"constant":false,"id":288,"mutability":"mutable","name":"owner","nameLocation":"3556:5:1","nodeType":"VariableDeclaration","scope":320,"src":"3548:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":293,"initialValue":{"arguments":[{"id":291,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3579:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":289,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"3564:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3571:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"3564:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":295,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3605:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":296,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3611:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":294,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3597:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"ExpressionStatement","src":"3597:57:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":302,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"3686:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":304,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3702:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":307,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"3728:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":308,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"3735:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":306,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3711:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3665:170:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"ExpressionStatement","src":"3665:170:1"},{"expression":{"arguments":[{"id":316,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3855:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":317,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3859:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":315,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"3846:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":319,"nodeType":"ExpressionStatement","src":"3846:21:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3417:46:1","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":321,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:1","nodeType":"FunctionDefinition","overrides":{"id":285,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:1"},"parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"to","nameLocation":"3493:2:1","nodeType":"VariableDeclaration","scope":321,"src":"3485:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:1","nodeType":"VariableDeclaration","scope":321,"src":"3497:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:1"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"3538:0:1"},"scope":991,"src":"3468:406:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1096],"body":{"id":338,"nodeType":"Block","src":"4020:82:1","statements":[{"expression":{"arguments":[{"id":331,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"4045:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":330,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4030:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"4030:23:1"},{"expression":{"baseExpression":{"id":334,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"4071:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":336,"indexExpression":{"id":335,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"4087:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":329,"id":337,"nodeType":"Return","src":"4064:31:1"}]},"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"3880:50:1","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":339,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:1","nodeType":"FunctionDefinition","overrides":{"id":326,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:1"},"parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:1","nodeType":"VariableDeclaration","scope":339,"src":"3956:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:1"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":339,"src":"4011:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:1"},"scope":991,"src":"3935:167:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1088],"body":{"id":355,"nodeType":"Block","src":"4253:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":349,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4282:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":351,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"4296:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":352,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4306:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":348,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"4263:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"4263:52:1"}]},"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"4108:56:1","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":356,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:1","nodeType":"FunctionDefinition","overrides":{"id":346,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:1"},"parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"operator","nameLocation":"4204:8:1","nodeType":"VariableDeclaration","scope":356,"src":"4196:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"approved","nameLocation":"4219:8:1","nodeType":"VariableDeclaration","scope":356,"src":"4214:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:1"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"4253:0:1"},"scope":991,"src":"4169:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1106],"body":{"id":373,"nodeType":"Block","src":"4491:59:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":367,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4508:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":369,"indexExpression":{"id":368,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"4527:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":371,"indexExpression":{"id":370,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4534:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":366,"id":372,"nodeType":"Return","src":"4501:42:1"}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"4328:55:1","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":374,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:1","nodeType":"FunctionDefinition","overrides":{"id":363,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:1"},"parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"owner","nameLocation":"4422:5:1","nodeType":"VariableDeclaration","scope":374,"src":"4414:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"operator","nameLocation":"4437:8:1","nodeType":"VariableDeclaration","scope":374,"src":"4429:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:1"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":374,"src":"4485:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":364,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:1"},"scope":991,"src":"4388:162:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1072],"body":{"id":400,"nodeType":"Block","src":"4701:207:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":387,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"4790:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":389,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4804:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":386,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4771:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":385,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4763:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"ExpressionStatement","src":"4763:99:1"},{"expression":{"arguments":[{"id":395,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"4883:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":396,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4889:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":397,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":394,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"4873:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"ExpressionStatement","src":"4873:28:1"}]},"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"4556:51:1","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":401,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:1","nodeType":"FunctionDefinition","overrides":{"id":383,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:1"},"parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"from","nameLocation":"4642:4:1","nodeType":"VariableDeclaration","scope":401,"src":"4634:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"to","nameLocation":"4656:2:1","nodeType":"VariableDeclaration","scope":401,"src":"4648:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"tokenId","nameLocation":"4668:7:1","nodeType":"VariableDeclaration","scope":401,"src":"4660:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:1"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"4701:0:1"},"scope":991,"src":"4612:296:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1062],"body":{"id":419,"nodeType":"Block","src":"5067:56:1","statements":[{"expression":{"arguments":[{"id":413,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"5094:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5100:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5104:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":412,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[420,450],"referencedDeclaration":450,"src":"5077:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5077:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":418,"nodeType":"ExpressionStatement","src":"5077:39:1"}]},"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"4914:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":420,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4983:16:1","nodeType":"FunctionDefinition","overrides":{"id":410,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:1"},"parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"from","nameLocation":"5008:4:1","nodeType":"VariableDeclaration","scope":420,"src":"5000:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"to","nameLocation":"5022:2:1","nodeType":"VariableDeclaration","scope":420,"src":"5014:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"tokenId","nameLocation":"5034:7:1","nodeType":"VariableDeclaration","scope":420,"src":"5026:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:1"},"returnParameters":{"id":411,"nodeType":"ParameterList","parameters":[],"src":"5067:0:1"},"scope":991,"src":"4974:149:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1052],"body":{"id":449,"nodeType":"Block","src":"5301:164:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":435,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"5338:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":437,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"5352:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":434,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5319:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5311:99:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"5311:99:1"},{"expression":{"arguments":[{"id":443,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"5434:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"5440:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":445,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"5444:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":446,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"5453:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":442,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"5420:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"ExpressionStatement","src":"5420:38:1"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"5129:55:1","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5198:16:1","nodeType":"FunctionDefinition","overrides":{"id":431,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:1"},"parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"from","nameLocation":"5223:4:1","nodeType":"VariableDeclaration","scope":450,"src":"5215:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"to","nameLocation":"5237:2:1","nodeType":"VariableDeclaration","scope":450,"src":"5229:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"tokenId","nameLocation":"5249:7:1","nodeType":"VariableDeclaration","scope":450,"src":"5241:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"data","nameLocation":"5271:4:1","nodeType":"VariableDeclaration","scope":450,"src":"5258:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":428,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"5301:0:1"},"scope":991,"src":"5189:276:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":478,"nodeType":"Block","src":"6428:165:1","statements":[{"expression":{"arguments":[{"id":463,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"6448:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":464,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"6454:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"6458:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":462,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"6438:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"6438:28:1"},{"expression":{"arguments":[{"arguments":[{"id":470,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"6507:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":471,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"6513:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"6517:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":473,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6526:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":469,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"6484:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6484:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":468,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:110:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":477,"nodeType":"ExpressionStatement","src":"6476:110:1"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"5471:850:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":479,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6335:13:1","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"6357:4:1","nodeType":"VariableDeclaration","scope":479,"src":"6349:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"6371:2:1","nodeType":"VariableDeclaration","scope":479,"src":"6363:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"tokenId","nameLocation":"6383:7:1","nodeType":"VariableDeclaration","scope":479,"src":"6375:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"data","nameLocation":"6405:4:1","nodeType":"VariableDeclaration","scope":479,"src":"6392:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":458,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:1"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"6428:0:1"},"scope":991,"src":"6326:267:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":491,"nodeType":"Block","src":"6777:40:1","statements":[{"expression":{"baseExpression":{"id":487,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"6794:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":489,"indexExpression":{"id":488,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"6802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":486,"id":490,"nodeType":"Return","src":"6787:23:1"}]},"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"6599:98:1","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":492,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6711:8:1","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"tokenId","nameLocation":"6728:7:1","nodeType":"VariableDeclaration","scope":492,"src":"6720:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:1"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"6768:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:1"},"scope":991,"src":"6702:115:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"7191:55:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":501,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7217:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":500,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"7208:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7208:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:1","typeDescriptions":{}}},"id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7229:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":508,"nodeType":"Return","src":"7201:38:1"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"6823:292:1","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7129:7:1","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"tokenId","nameLocation":"7145:7:1","nodeType":"VariableDeclaration","scope":510,"src":"7137:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:1"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":510,"src":"7185:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:1"},"scope":991,"src":"7120:126:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":543,"nodeType":"Block","src":"7503:162:1","statements":[{"assignments":[521],"declarations":[{"constant":false,"id":521,"mutability":"mutable","name":"owner","nameLocation":"7521:5:1","nodeType":"VariableDeclaration","scope":543,"src":"7513:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":526,"initialValue":{"arguments":[{"id":524,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"7544:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":522,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"7529:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7536:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"7529:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7529:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:1"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":527,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7570:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":528,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"7581:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":531,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"7607:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":532,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7614:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"7590:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":536,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"7638:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":535,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"7626:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7626:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":538,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7650:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":519,"id":542,"nodeType":"Return","src":"7562:96:1"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"7252:147:1","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":544,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7413:18:1","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"spender","nameLocation":"7440:7:1","nodeType":"VariableDeclaration","scope":544,"src":"7432:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"tokenId","nameLocation":"7457:7:1","nodeType":"VariableDeclaration","scope":544,"src":"7449:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:1"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":544,"src":"7497:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":517,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:1"},"scope":991,"src":"7404:261:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":558,"nodeType":"Block","src":"8060:43:1","statements":[{"expression":{"arguments":[{"id":553,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"8080:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":554,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"8084:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":552,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[559,588],"referencedDeclaration":588,"src":"8070:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8070:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"8070:26:1"}]},"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"7671:319:1","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":559,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8004:9:1","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"to","nameLocation":"8022:2:1","nodeType":"VariableDeclaration","scope":559,"src":"8014:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"tokenId","nameLocation":"8034:7:1","nodeType":"VariableDeclaration","scope":559,"src":"8026:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:1"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[],"src":"8060:0:1"},"scope":991,"src":"7995:108:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"8408:195:1","statements":[{"expression":{"arguments":[{"id":570,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8424:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":571,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"8428:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":569,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"8418:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8418:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":573,"nodeType":"ExpressionStatement","src":"8418:18:1"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8490:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":580,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"8502:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"8506:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":582,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"8515:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":575,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"8467:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8467:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":574,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8446:150:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"8446:150:1"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"8109:210:1","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8333:9:1","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"to","nameLocation":"8351:2:1","nodeType":"VariableDeclaration","scope":588,"src":"8343:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"tokenId","nameLocation":"8363:7:1","nodeType":"VariableDeclaration","scope":588,"src":"8355:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"data","nameLocation":"8385:4:1","nodeType":"VariableDeclaration","scope":588,"src":"8372:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":565,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:1"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"8408:0:1"},"scope":991,"src":"8324:279:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":664,"nodeType":"Block","src":"8986:859:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9004:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:1","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9010:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":605,"nodeType":"ExpressionStatement","src":"8996:61:1"},{"expression":{"arguments":[{"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:1","subExpression":{"arguments":[{"id":608,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9084:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":607,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"9076:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9076:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"9067:58:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:1","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":619,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9169:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9173:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":614,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"9136:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9136:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":623,"nodeType":"ExpressionStatement","src":"9136:48:1"},{"expression":{"arguments":[{"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:1","subExpression":{"arguments":[{"id":626,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9288:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":625,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"9280:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9280:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":624,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9271:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"ExpressionStatement","src":"9271:58:1"},{"id":638,"nodeType":"UncheckedBlock","src":"9340:360:1","statements":[{"expression":{"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":632,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"9671:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":634,"indexExpression":{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9681:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":637,"nodeType":"ExpressionStatement","src":"9671:18:1"}]},{"expression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":639,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"9710:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":641,"indexExpression":{"id":640,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9718:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":642,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9729:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":644,"nodeType":"ExpressionStatement","src":"9710:21:1"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:1","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9756:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9768:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9772:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":645,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"9747:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9747:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"EmitStatement","src":"9742:38:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:1","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9811:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"9823:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":660,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9827:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":654,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"9791:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9791:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"9791:47:1"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"8609:311:1","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":665,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8934:5:1","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"to","nameLocation":"8948:2:1","nodeType":"VariableDeclaration","scope":665,"src":"8940:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"tokenId","nameLocation":"8960:7:1","nodeType":"VariableDeclaration","scope":665,"src":"8952:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:1"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[],"src":"8986:0:1"},"scope":991,"src":"8925:920:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":731,"nodeType":"Block","src":"10220:713:1","statements":[{"assignments":[672],"declarations":[{"constant":false,"id":672,"mutability":"mutable","name":"owner","nameLocation":"10238:5:1","nodeType":"VariableDeclaration","scope":731,"src":"10230:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":671,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":677,"initialValue":{"arguments":[{"id":675,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10261:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":673,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"10246:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10253:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"10246:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10246:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:1"},{"expression":{"arguments":[{"id":679,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10301:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:1","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10308:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":678,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"10280:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10280:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":687,"nodeType":"ExpressionStatement","src":"10280:51:1"},{"expression":{"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":688,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10433:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10456:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":689,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"10441:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10448:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"10441:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":694,"nodeType":"ExpressionStatement","src":"10433:31:1"},{"expression":{"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:1","subExpression":{"baseExpression":{"id":695,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"10509:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":697,"indexExpression":{"id":696,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10525:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"10502:31:1"},{"id":706,"nodeType":"UncheckedBlock","src":"10544:237:1","statements":[{"expression":{"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"10749:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":702,"indexExpression":{"id":701,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10759:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":705,"nodeType":"ExpressionStatement","src":"10749:21:1"}]},{"expression":{"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:1","subExpression":{"baseExpression":{"id":707,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"10797:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":709,"indexExpression":{"id":708,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10805:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"ExpressionStatement","src":"10790:23:1"},{"eventCall":{"arguments":[{"id":713,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10838:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:1","typeDescriptions":{}}},"id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10845:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10857:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":712,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"10829:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10829:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":720,"nodeType":"EmitStatement","src":"10824:41:1"},{"expression":{"arguments":[{"id":722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10896:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:1","typeDescriptions":{}}},"id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10903:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":727,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"10915:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":721,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"10876:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10876:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"ExpressionStatement","src":"10876:50:1"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"9851:315:1","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":732,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10180:5:1","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"tokenId","nameLocation":"10194:7:1","nodeType":"VariableDeclaration","scope":732,"src":"10186:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:1"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"10220:0:1"},"scope":991,"src":"10171:762:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":816,"nodeType":"Block","src":"11336:1124:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":745,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"11369:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":743,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11354:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11361:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"11354:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11354:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":747,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"11381:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11346:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":751,"nodeType":"ExpressionStatement","src":"11346:81:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":753,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"11445:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:1","typeDescriptions":{}}},"id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11451:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"ExpressionStatement","src":"11437:65:1"},{"expression":{"arguments":[{"id":763,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"11534:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"11540:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"11544:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":762,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"11513:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11513:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"11513:42:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":772,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"11670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":770,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"11655:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11662:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"11655:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":774,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"11682:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":769,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11647:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"11647:81:1"},{"expression":{"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:1","subExpression":{"baseExpression":{"id":779,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"11797:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":781,"indexExpression":{"id":780,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"11813:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"ExpressionStatement","src":"11790:31:1"},{"id":796,"nodeType":"UncheckedBlock","src":"11832:496:1","statements":[{"expression":{"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":784,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"12265:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":786,"indexExpression":{"id":785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"12275:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ExpressionStatement","src":"12265:20:1"},{"expression":{"id":794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":790,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"12299:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":792,"indexExpression":{"id":791,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"12309:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":795,"nodeType":"ExpressionStatement","src":"12299:18:1"}]},{"expression":{"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":797,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"12337:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":799,"indexExpression":{"id":798,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"12345:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":800,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"12356:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":802,"nodeType":"ExpressionStatement","src":"12337:21:1"},{"eventCall":{"arguments":[{"id":804,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"12383:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"12389:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"12393:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":803,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"12374:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12374:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"EmitStatement","src":"12369:32:1"},{"expression":{"arguments":[{"id":810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"12432:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"12438:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":812,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"12442:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":809,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"12412:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12412:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":815,"nodeType":"ExpressionStatement","src":"12412:41:1"}]},"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"10939:313:1","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":817,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11266:9:1","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"from","nameLocation":"11284:4:1","nodeType":"VariableDeclaration","scope":817,"src":"11276:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"to","nameLocation":"11298:2:1","nodeType":"VariableDeclaration","scope":817,"src":"11290:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"tokenId","nameLocation":"11310:7:1","nodeType":"VariableDeclaration","scope":817,"src":"11302:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:1"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[],"src":"11336:0:1"},"scope":991,"src":"11257:1203:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":840,"nodeType":"Block","src":"12636:107:1","statements":[{"expression":{"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":825,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"12646:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":827,"indexExpression":{"id":826,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"12662:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":828,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"12673:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":830,"nodeType":"ExpressionStatement","src":"12646:29:1"},{"eventCall":{"arguments":[{"arguments":[{"id":834,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"12714:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":832,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"12699:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$991_$","typeString":"type(contract ERC721)"}},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12706:7:1","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":210,"src":"12699:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12699:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"12724:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":837,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"12728:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":831,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"12690:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12690:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"EmitStatement","src":"12685:51:1"}]},"documentation":{"id":818,"nodeType":"StructuredDocumentation","src":"12466:101:1","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":841,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12581:8:1","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"to","nameLocation":"12598:2:1","nodeType":"VariableDeclaration","scope":841,"src":"12590:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"tokenId","nameLocation":"12610:7:1","nodeType":"VariableDeclaration","scope":841,"src":"12602:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:1"},"returnParameters":{"id":824,"nodeType":"ParameterList","parameters":[],"src":"12636:0:1"},"scope":991,"src":"12572:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":872,"nodeType":"Block","src":"12972:184:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":852,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"12990:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":853,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"12999:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12982:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":857,"nodeType":"ExpressionStatement","src":"12982:55:1"},{"expression":{"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":858,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"13047:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":861,"indexExpression":{"id":859,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"13066:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":862,"indexExpression":{"id":860,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"13073:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":863,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"13085:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":865,"nodeType":"ExpressionStatement","src":"13047:46:1"},{"eventCall":{"arguments":[{"id":867,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"13123:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"13130:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"13140:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":866,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"13108:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13108:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"EmitStatement","src":"13103:46:1"}]},"documentation":{"id":842,"nodeType":"StructuredDocumentation","src":"12749:125:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":873,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12888:18:1","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":844,"mutability":"mutable","name":"owner","nameLocation":"12915:5:1","nodeType":"VariableDeclaration","scope":873,"src":"12907:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"operator","nameLocation":"12930:8:1","nodeType":"VariableDeclaration","scope":873,"src":"12922:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"approved","nameLocation":"12945:8:1","nodeType":"VariableDeclaration","scope":873,"src":"12940:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":847,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:1"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"12972:0:1"},"scope":991,"src":"12879:277:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":886,"nodeType":"Block","src":"13303:70:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"13329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":880,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"13321:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13321:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13313:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":885,"nodeType":"ExpressionStatement","src":"13313:53:1"}]},"documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"13162:73:1","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":887,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13249:14:1","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"tokenId","nameLocation":"13272:7:1","nodeType":"VariableDeclaration","scope":887,"src":"13264:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:1"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"13303:0:1"},"scope":991,"src":"13240:133:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":948,"nodeType":"Block","src":"14080:676:1","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"14094:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14097:10:1","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1170,"src":"14094:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14094:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":946,"nodeType":"Block","src":"14714:36:1","statements":[{"expression":{"hexValue":"74727565","id":944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":900,"id":945,"nodeType":"Return","src":"14728:11:1"}]},"id":947,"nodeType":"IfStatement","src":"14090:660:1","trueBody":{"id":943,"nodeType":"Block","src":"14111:597:1","statements":[{"clauses":[{"block":{"id":923,"nodeType":"Block","src":"14225:91:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"14250:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":918,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"14260:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1125_$","typeString":"type(contract IERC721Receiver)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14276:16:1","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"14260:32:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14293:8:1","memberName":"selector","nodeType":"MemberAccess","src":"14260:41:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":900,"id":922,"nodeType":"Return","src":"14243:58:1"}]},"errorName":"","id":924,"nodeType":"TryCatchClause","parameters":{"id":916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"retval","nameLocation":"14217:6:1","nodeType":"VariableDeclaration","scope":924,"src":"14210:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":914,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:1"},"src":"14201:115:1"},{"block":{"id":940,"nodeType":"Block","src":"14345:353:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":928,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"14367:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14374:6:1","memberName":"length","nodeType":"MemberAccess","src":"14367:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":938,"nodeType":"Block","src":"14494:190:1","statements":[{"AST":{"nativeSrc":"14580:86:1","nodeType":"YulBlock","src":"14580:86:1","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14617:2:1","nodeType":"YulLiteral","src":"14617:2:1","type":"","value":"32"},{"name":"reason","nativeSrc":"14621:6:1","nodeType":"YulIdentifier","src":"14621:6:1"}],"functionName":{"name":"add","nativeSrc":"14613:3:1","nodeType":"YulIdentifier","src":"14613:3:1"},"nativeSrc":"14613:15:1","nodeType":"YulFunctionCall","src":"14613:15:1"},{"arguments":[{"name":"reason","nativeSrc":"14636:6:1","nodeType":"YulIdentifier","src":"14636:6:1"}],"functionName":{"name":"mload","nativeSrc":"14630:5:1","nodeType":"YulIdentifier","src":"14630:5:1"},"nativeSrc":"14630:13:1","nodeType":"YulFunctionCall","src":"14630:13:1"}],"functionName":{"name":"revert","nativeSrc":"14606:6:1","nodeType":"YulIdentifier","src":"14606:6:1"},"nativeSrc":"14606:38:1","nodeType":"YulFunctionCall","src":"14606:38:1"},"nativeSrc":"14606:38:1","nodeType":"YulExpressionStatement","src":"14606:38:1"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":926,"isOffset":false,"isSlot":false,"src":"14621:6:1","valueSize":1},{"declaration":926,"isOffset":false,"isSlot":false,"src":"14636:6:1","valueSize":1}],"id":937,"nodeType":"InlineAssembly","src":"14571:95:1"}]},"id":939,"nodeType":"IfStatement","src":"14363:321:1","trueBody":{"id":936,"nodeType":"Block","src":"14387:101:1","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":932,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14409:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"ExpressionStatement","src":"14409:60:1"}]}}]},"errorName":"","id":941,"nodeType":"TryCatchClause","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"reason","nameLocation":"14337:6:1","nodeType":"VariableDeclaration","scope":941,"src":"14324:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":925,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:1"},"src":"14317:381:1"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":908,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"14166:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14166:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"14180:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"14186:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":912,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"14195:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":905,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"14145:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":904,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"14129:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1125_$","typeString":"type(contract IERC721Receiver)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1125","typeString":"contract IERC721Receiver"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14149:16:1","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1124,"src":"14129:36:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:71:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":942,"nodeType":"TryStatement","src":"14125:573:1"}]}}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"13379:541:1","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13934:22:1","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"from","nameLocation":"13974:4:1","nodeType":"VariableDeclaration","scope":949,"src":"13966:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"to","nameLocation":"13996:2:1","nodeType":"VariableDeclaration","scope":949,"src":"13988:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"tokenId","nameLocation":"14016:7:1","nodeType":"VariableDeclaration","scope":949,"src":"14008:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"data","nameLocation":"14046:4:1","nodeType":"VariableDeclaration","scope":949,"src":"14033:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":895,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:1"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":949,"src":"14074:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:1"},"scope":991,"src":"13925:831:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":961,"nodeType":"Block","src":"15586:2:1","statements":[]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"14762:705:1","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15481:20:1","nodeType":"FunctionDefinition","parameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"from","nameLocation":"15510:4:1","nodeType":"VariableDeclaration","scope":962,"src":"15502:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":951,"name":"address","nodeType":"ElementaryTypeName","src":"15502:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"to","nameLocation":"15524:2:1","nodeType":"VariableDeclaration","scope":962,"src":"15516:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":953,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":956,"mutability":"mutable","name":"firstTokenId","nameLocation":"15536:12:1","nodeType":"VariableDeclaration","scope":962,"src":"15528:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"15528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"batchSize","nameLocation":"15558:9:1","nodeType":"VariableDeclaration","scope":962,"src":"15550:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:67:1"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"15586:0:1"},"scope":991,"src":"15472:116:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":974,"nodeType":"Block","src":"16407:2:1","statements":[]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"15594:695:1","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":975,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16303:19:1","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"from","nameLocation":"16331:4:1","nodeType":"VariableDeclaration","scope":975,"src":"16323:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"16323:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"to","nameLocation":"16345:2:1","nodeType":"VariableDeclaration","scope":975,"src":"16337:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"16337:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"firstTokenId","nameLocation":"16357:12:1","nodeType":"VariableDeclaration","scope":975,"src":"16349:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"batchSize","nameLocation":"16379:9:1","nodeType":"VariableDeclaration","scope":975,"src":"16371:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16322:67:1"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"16407:0:1"},"scope":991,"src":"16294:115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":989,"nodeType":"Block","src":"16958:45:1","statements":[{"expression":{"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":983,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"16968:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":985,"indexExpression":{"id":984,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"16978:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16968:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":986,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"16990:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16968:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"nodeType":"ExpressionStatement","src":"16968:28:1"}]},"documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"16415:409:1","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":990,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"16891:24:1","nodeType":"FunctionDefinition","parameters":{"id":981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"account","nameLocation":"16924:7:1","nodeType":"VariableDeclaration","scope":990,"src":"16916:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"16916:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"amount","nameLocation":"16941:6:1","nodeType":"VariableDeclaration","scope":990,"src":"16933:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16915:33:1"},"returnParameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"16958:0:1"},"scope":991,"src":"16882:121:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":992,"src":"628:16377:1","usedErrors":[],"usedEvents":[1006,1015,1024]}],"src":"107:16899:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1777],"IERC721":[1107]},"id":1108,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":993,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1108,"sourceUnit":1778,"src":"133:47:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":996,"name":"IERC165","nameLocations":["271:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1777,"src":"271:7:2"},"id":997,"nodeType":"InheritanceSpecifier","src":"271:7:2"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"182:67:2","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1107,"linearizedBaseContracts":[1107,1777],"name":"IERC721","nameLocation":"260:7:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"285:88:2","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1006,"name":"Transfer","nameLocation":"384:8:2","nodeType":"EventDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:2","nodeType":"VariableDeclaration","scope":1006,"src":"393:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:2","nodeType":"VariableDeclaration","scope":1006,"src":"415:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:2","nodeType":"VariableDeclaration","scope":1006,"src":"435:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:2"},"src":"378:82:2"},{"anonymous":false,"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"466:94:2","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1015,"name":"Approval","nameLocation":"571:8:2","nodeType":"EventDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:2","nodeType":"VariableDeclaration","scope":1015,"src":"580:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:2","nodeType":"VariableDeclaration","scope":1015,"src":"603:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:2","nodeType":"VariableDeclaration","scope":1015,"src":"629:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:2"},"src":"565:89:2"},{"anonymous":false,"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"660:117:2","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1024,"name":"ApprovalForAll","nameLocation":"788:14:2","nodeType":"EventDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:2","nodeType":"VariableDeclaration","scope":1024,"src":"803:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:2","nodeType":"VariableDeclaration","scope":1024,"src":"826:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1022,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:2","nodeType":"VariableDeclaration","scope":1024,"src":"852:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1021,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:2"},"src":"782:85:2"},{"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"873:76:2","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1032,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:2","nodeType":"FunctionDefinition","parameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"owner","nameLocation":"981:5:2","nodeType":"VariableDeclaration","scope":1032,"src":"973:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:2"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"balance","nameLocation":"1019:7:2","nodeType":"VariableDeclaration","scope":1032,"src":"1011:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:2"},"scope":1107,"src":"954:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"1034:131:2","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1040,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:2","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:2","nodeType":"VariableDeclaration","scope":1040,"src":"1187:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:2"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"owner","nameLocation":"1235:5:2","nodeType":"VariableDeclaration","scope":1040,"src":"1227:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:2"},"scope":1107,"src":"1170:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1041,"nodeType":"StructuredDocumentation","src":"1248:556:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1052,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:2","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"from","nameLocation":"1843:4:2","nodeType":"VariableDeclaration","scope":1052,"src":"1835:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"to","nameLocation":"1857:2:2","nodeType":"VariableDeclaration","scope":1052,"src":"1849:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:2","nodeType":"VariableDeclaration","scope":1052,"src":"1861:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"data","nameLocation":"1893:4:2","nodeType":"VariableDeclaration","scope":1052,"src":"1878:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1048,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:2"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"1907:0:2"},"scope":1107,"src":"1809:99:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"1914:687:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1062,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:2","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"from","nameLocation":"2640:4:2","nodeType":"VariableDeclaration","scope":1062,"src":"2632:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"to","nameLocation":"2654:2:2","nodeType":"VariableDeclaration","scope":1062,"src":"2646:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:2","nodeType":"VariableDeclaration","scope":1062,"src":"2658:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:2"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"2683:0:2"},"scope":1107,"src":"2606:78:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1063,"nodeType":"StructuredDocumentation","src":"2690:732:2","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1072,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:2","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"from","nameLocation":"3457:4:2","nodeType":"VariableDeclaration","scope":1072,"src":"3449:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"to","nameLocation":"3471:2:2","nodeType":"VariableDeclaration","scope":1072,"src":"3463:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:2","nodeType":"VariableDeclaration","scope":1072,"src":"3475:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1068,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:2"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"3500:0:2"},"scope":1107,"src":"3427:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"3507:452:2","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1080,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:2","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"to","nameLocation":"3989:2:2","nodeType":"VariableDeclaration","scope":1080,"src":"3981:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:2","nodeType":"VariableDeclaration","scope":1080,"src":"3993:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:2"},"returnParameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"4018:0:2"},"scope":1107,"src":"3964:55:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"4025:309:2","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1088,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:2","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"operator","nameLocation":"4374:8:2","nodeType":"VariableDeclaration","scope":1088,"src":"4366:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"approved","nameLocation":"4389:8:2","nodeType":"VariableDeclaration","scope":1088,"src":"4384:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1084,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:2"},"returnParameters":{"id":1087,"nodeType":"ParameterList","parameters":[],"src":"4407:0:2"},"scope":1107,"src":"4339:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"4414:139:2","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1096,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:2","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:2","nodeType":"VariableDeclaration","scope":1096,"src":"4579:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:2"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"operator","nameLocation":"4627:8:2","nodeType":"VariableDeclaration","scope":1096,"src":"4619:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:2"},"scope":1107,"src":"4558:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1097,"nodeType":"StructuredDocumentation","src":"4643:138:2","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1106,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:2","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"owner","nameLocation":"4820:5:2","nodeType":"VariableDeclaration","scope":1106,"src":"4812:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"operator","nameLocation":"4835:8:2","nodeType":"VariableDeclaration","scope":1106,"src":"4827:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:2"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1106,"src":"4868:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1103,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:2"},"scope":1107,"src":"4786:88:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1108,"src":"250:4626:2","usedErrors":[],"usedEvents":[1006,1015,1024]}],"src":"108:4769:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1125]},"id":1126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1109,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"141:152:3","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1125,"linearizedBaseContracts":[1125],"name":"IERC721Receiver","nameLocation":"304:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"326:493:3","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1124,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:3","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"operator","nameLocation":"867:8:3","nodeType":"VariableDeclaration","scope":1124,"src":"859:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"from","nameLocation":"893:4:3","nodeType":"VariableDeclaration","scope":1124,"src":"885:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:3","nodeType":"VariableDeclaration","scope":1124,"src":"907:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"data","nameLocation":"947:4:3","nodeType":"VariableDeclaration","scope":1124,"src":"932:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1118,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:3"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1124,"src":"976:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1121,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:3"},"scope":1125,"src":"824:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1126,"src":"294:692:3","usedErrors":[],"usedEvents":[]}],"src":"116:871:3"},"id":3},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[1777],"IERC721":[1107],"IERC721Metadata":[1152]},"id":1153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1127,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1128,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1153,"sourceUnit":1108,"src":"137:24:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1130,"name":"IERC721","nameLocations":["326:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1107,"src":"326:7:4"},"id":1131,"nodeType":"InheritanceSpecifier","src":"326:7:4"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"163:133:4","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1152,"linearizedBaseContracts":[1152,1107,1777],"name":"IERC721Metadata","nameLocation":"307:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1132,"nodeType":"StructuredDocumentation","src":"340:58:4","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1137,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:4","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[],"src":"416:2:4"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1137,"src":"442:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1134,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:4"},"scope":1152,"src":"403:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"463:60:4","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:4","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[],"src":"543:2:4"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"569:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1140,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:4"},"scope":1152,"src":"528:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"590:90:4","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1151,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:4","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:4","nodeType":"VariableDeclaration","scope":1151,"src":"703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:4"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"743:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1148,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:4"},"scope":1152,"src":"685:73:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1153,"src":"297:463:4","usedErrors":[],"usedEvents":[1006,1015,1024]}],"src":"112:649:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1482]},"id":1483,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1154,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"126:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1482,"linearizedBaseContracts":[1482],"name":"Address","nameLocation":"202:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1169,"nodeType":"Block","src":"1478:254:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"1702:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:5","memberName":"code","nodeType":"MemberAccess","src":"1702:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:5","memberName":"length","nodeType":"MemberAccess","src":"1702:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1162,"id":1168,"nodeType":"Return","src":"1695:30:5"}]},"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"216:1191:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1170,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:5","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"account","nameLocation":"1440:7:5","nodeType":"VariableDeclaration","scope":1170,"src":"1432:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:5"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1170,"src":"1472:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1160,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:5"},"scope":1482,"src":"1412:320:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1203,"nodeType":"Block","src":"2718:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1181,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1482","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1482","typeString":"library Address"}],"id":1180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:5","typeDescriptions":{}}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:5","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1184,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2761:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"ExpressionStatement","src":"2728:73:5"},{"assignments":[1190,null],"declarations":[{"constant":false,"id":1190,"mutability":"mutable","name":"success","nameLocation":"2818:7:5","nodeType":"VariableDeclaration","scope":1203,"src":"2813:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1189,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1197,"initialValue":{"arguments":[{"hexValue":"","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1191,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"2831:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:5","memberName":"call","nodeType":"MemberAccess","src":"2831:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1193,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"2853:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:5"},{"expression":{"arguments":[{"id":1199,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"2882:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1202,"nodeType":"ExpressionStatement","src":"2874:78:5"}]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"1738:904:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:5","nodeType":"FunctionDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:5","nodeType":"VariableDeclaration","scope":1204,"src":"2666:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1175,"mutability":"mutable","name":"amount","nameLocation":"2701:6:5","nodeType":"VariableDeclaration","scope":1204,"src":"2693:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:5"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[],"src":"2718:0:5"},"scope":1482,"src":"2647:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1221,"nodeType":"Block","src":"3790:96:5","statements":[{"expression":{"arguments":[{"id":1215,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"3829:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1216,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3837:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1214,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1262,1306],"referencedDeclaration":1306,"src":"3807:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1213,"id":1220,"nodeType":"Return","src":"3800:79:5"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"2965:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1222,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:5","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"target","nameLocation":"3731:6:5","nodeType":"VariableDeclaration","scope":1222,"src":"3723:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"data","nameLocation":"3752:4:5","nodeType":"VariableDeclaration","scope":1222,"src":"3739:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1208,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:5"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1222,"src":"3776:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1211,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:5"},"scope":1482,"src":"3701:185:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1241,"nodeType":"Block","src":"4255:76:5","statements":[{"expression":{"arguments":[{"id":1235,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"4294:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1236,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"4302:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1238,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"4311:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1234,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1262,1306],"referencedDeclaration":1306,"src":"4272:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1233,"id":1240,"nodeType":"Return","src":"4265:59:5"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"3892:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1242,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:5","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"target","nameLocation":"4147:6:5","nodeType":"VariableDeclaration","scope":1242,"src":"4139:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"data","nameLocation":"4176:4:5","nodeType":"VariableDeclaration","scope":1242,"src":"4163:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1226,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:5","nodeType":"VariableDeclaration","scope":1242,"src":"4190:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1228,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:5"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1242,"src":"4241:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1231,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:5"},"scope":1482,"src":"4108:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1261,"nodeType":"Block","src":"4806:111:5","statements":[{"expression":{"arguments":[{"id":1255,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"4845:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1256,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"4853:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"4859:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1254,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1262,1306],"referencedDeclaration":1306,"src":"4823:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1253,"id":1260,"nodeType":"Return","src":"4816:94:5"}]},"documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"4337:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1262,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:5","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"target","nameLocation":"4732:6:5","nodeType":"VariableDeclaration","scope":1262,"src":"4724:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"data","nameLocation":"4753:4:5","nodeType":"VariableDeclaration","scope":1262,"src":"4740:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1246,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"4767:5:5","nodeType":"VariableDeclaration","scope":1262,"src":"4759:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:5"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"4792:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1251,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:5"},"scope":1482,"src":"4693:224:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1305,"nodeType":"Block","src":"5344:267:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1279,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1482","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1482","typeString":"library Address"}],"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:5","typeDescriptions":{}}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:5","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5387:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1286,"nodeType":"ExpressionStatement","src":"5354:81:5"},{"assignments":[1288,1290],"declarations":[{"constant":false,"id":1288,"mutability":"mutable","name":"success","nameLocation":"5451:7:5","nodeType":"VariableDeclaration","scope":1305,"src":"5446:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1287,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:5","nodeType":"VariableDeclaration","scope":1305,"src":"5460:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1289,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1297,"initialValue":{"arguments":[{"id":1295,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"5513:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1291,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5487:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:5","memberName":"call","nodeType":"MemberAccess","src":"5487:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"5506:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:5"},{"expression":{"arguments":[{"id":1299,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"5562:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1300,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"5570:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1301,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"5579:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1302,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5591:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1298,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"5535:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1275,"id":1304,"nodeType":"Return","src":"5528:76:5"}]},"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"4923:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:5","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"target","nameLocation":"5213:6:5","nodeType":"VariableDeclaration","scope":1306,"src":"5205:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"data","nameLocation":"5242:4:5","nodeType":"VariableDeclaration","scope":1306,"src":"5229:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1266,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"value","nameLocation":"5264:5:5","nodeType":"VariableDeclaration","scope":1306,"src":"5256:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:5","nodeType":"VariableDeclaration","scope":1306,"src":"5279:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1270,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:5"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"5330:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1273,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:5"},"scope":1482,"src":"5165:446:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1322,"nodeType":"Block","src":"5888:97:5","statements":[{"expression":{"arguments":[{"id":1317,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5924:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1318,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"5932:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1316,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1323,1352],"referencedDeclaration":1352,"src":"5905:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1315,"id":1321,"nodeType":"Return","src":"5898:80:5"}]},"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"5617:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1323,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:5","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"target","nameLocation":"5824:6:5","nodeType":"VariableDeclaration","scope":1323,"src":"5816:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"data","nameLocation":"5845:4:5","nodeType":"VariableDeclaration","scope":1323,"src":"5832:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1310,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:5"},"returnParameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1323,"src":"5874:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1313,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:5"},"scope":1482,"src":"5788:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1351,"nodeType":"Block","src":"6327:168:5","statements":[{"assignments":[1336,1338],"declarations":[{"constant":false,"id":1336,"mutability":"mutable","name":"success","nameLocation":"6343:7:5","nodeType":"VariableDeclaration","scope":1351,"src":"6338:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1335,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:5","nodeType":"VariableDeclaration","scope":1351,"src":"6352:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1337,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1343,"initialValue":{"arguments":[{"id":1341,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"6397:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1339,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6379:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:5","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:5"},{"expression":{"arguments":[{"id":1345,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"6446:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1346,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"6454:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1347,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"6463:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1348,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6475:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1344,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"6419:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1334,"id":1350,"nodeType":"Return","src":"6412:76:5"}]},"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"5991:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1352,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:5","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"target","nameLocation":"6214:6:5","nodeType":"VariableDeclaration","scope":1352,"src":"6206:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"data","nameLocation":"6243:4:5","nodeType":"VariableDeclaration","scope":1352,"src":"6230:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1327,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:5","nodeType":"VariableDeclaration","scope":1352,"src":"6257:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1329,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:5"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1352,"src":"6313:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:5"},"scope":1482,"src":"6169:326:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1368,"nodeType":"Block","src":"6771:101:5","statements":[{"expression":{"arguments":[{"id":1363,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"6809:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1364,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"6817:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1362,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1369,1398],"referencedDeclaration":1398,"src":"6788:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1361,"id":1367,"nodeType":"Return","src":"6781:84:5"}]},"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"6501:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1369,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:5","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"target","nameLocation":"6712:6:5","nodeType":"VariableDeclaration","scope":1369,"src":"6704:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"data","nameLocation":"6733:4:5","nodeType":"VariableDeclaration","scope":1369,"src":"6720:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1356,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:5"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1369,"src":"6757:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:5"},"scope":1482,"src":"6674:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1397,"nodeType":"Block","src":"7213:170:5","statements":[{"assignments":[1382,1384],"declarations":[{"constant":false,"id":1382,"mutability":"mutable","name":"success","nameLocation":"7229:7:5","nodeType":"VariableDeclaration","scope":1397,"src":"7224:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1381,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:5","nodeType":"VariableDeclaration","scope":1397,"src":"7238:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1383,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1389,"initialValue":{"arguments":[{"id":1387,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"7285:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1385,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"7265:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:5","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:5"},{"expression":{"arguments":[{"id":1391,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"7334:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1392,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"7342:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1393,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7351:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1394,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"7363:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1390,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"7307:26:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1380,"id":1396,"nodeType":"Return","src":"7300:76:5"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"6878:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1398,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:5","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"target","nameLocation":"7105:6:5","nodeType":"VariableDeclaration","scope":1398,"src":"7097:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1371,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"data","nameLocation":"7134:4:5","nodeType":"VariableDeclaration","scope":1398,"src":"7121:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1373,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:5","nodeType":"VariableDeclaration","scope":1398,"src":"7148:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1375,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:5"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1398,"src":"7199:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1378,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:5"},"scope":1482,"src":"7058:325:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1436,"nodeType":"Block","src":"7865:434:5","statements":[{"condition":{"id":1412,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"7879:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1434,"nodeType":"Block","src":"8235:58:5","statements":[{"expression":{"arguments":[{"id":1430,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"8257:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1431,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"8269:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1429,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"8249:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"ExpressionStatement","src":"8249:33:5"}]},"id":1435,"nodeType":"IfStatement","src":"7875:418:5","trueBody":{"id":1428,"nodeType":"Block","src":"7888:341:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1413,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"7906:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:5","memberName":"length","nodeType":"MemberAccess","src":"7906:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1425,"nodeType":"IfStatement","src":"7902:286:5","trueBody":{"id":1424,"nodeType":"Block","src":"7930:258:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1419,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"8132:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1418,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"8121:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"ExpressionStatement","src":"8113:60:5"}]}},{"expression":{"id":1426,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"8208:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1411,"id":1427,"nodeType":"Return","src":"8201:17:5"}]}}]},"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"7389:277:5","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:5","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"target","nameLocation":"7724:6:5","nodeType":"VariableDeclaration","scope":1437,"src":"7716:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"success","nameLocation":"7745:7:5","nodeType":"VariableDeclaration","scope":1437,"src":"7740:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1402,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:5","nodeType":"VariableDeclaration","scope":1437,"src":"7762:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1404,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:5","nodeType":"VariableDeclaration","scope":1437,"src":"7795:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1406,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:5"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1437,"src":"7851:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1409,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:5"},"scope":1482,"src":"7671:628:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1460,"nodeType":"Block","src":"8680:135:5","statements":[{"condition":{"id":1449,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"8694:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1458,"nodeType":"Block","src":"8751:58:5","statements":[{"expression":{"arguments":[{"id":1454,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"8773:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1455,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"8785:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1453,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"8765:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1457,"nodeType":"ExpressionStatement","src":"8765:33:5"}]},"id":1459,"nodeType":"IfStatement","src":"8690:119:5","trueBody":{"id":1452,"nodeType":"Block","src":"8703:42:5","statements":[{"expression":{"id":1450,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"8724:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1448,"id":1451,"nodeType":"Return","src":"8717:17:5"}]}}]},"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"8305:210:5","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:5","nodeType":"FunctionDefinition","parameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"success","nameLocation":"8560:7:5","nodeType":"VariableDeclaration","scope":1461,"src":"8555:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1439,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:5","nodeType":"VariableDeclaration","scope":1461,"src":"8577:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1441,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1444,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:5","nodeType":"VariableDeclaration","scope":1461,"src":"8610:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1443,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:5"},"returnParameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1461,"src":"8666:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1446,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:5"},"scope":1482,"src":"8520:295:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1480,"nodeType":"Block","src":"8904:457:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1468,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"8980:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:5","memberName":"length","nodeType":"MemberAccess","src":"8980:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1478,"nodeType":"Block","src":"9310:45:5","statements":[{"expression":{"arguments":[{"id":1475,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"9331:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1474,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1477,"nodeType":"ExpressionStatement","src":"9324:20:5"}]},"id":1479,"nodeType":"IfStatement","src":"8976:379:5","trueBody":{"id":1473,"nodeType":"Block","src":"9003:301:5","statements":[{"AST":{"nativeSrc":"9161:133:5","nodeType":"YulBlock","src":"9161:133:5","statements":[{"nativeSrc":"9179:40:5","nodeType":"YulVariableDeclaration","src":"9179:40:5","value":{"arguments":[{"name":"returndata","nativeSrc":"9208:10:5","nodeType":"YulIdentifier","src":"9208:10:5"}],"functionName":{"name":"mload","nativeSrc":"9202:5:5","nodeType":"YulIdentifier","src":"9202:5:5"},"nativeSrc":"9202:17:5","nodeType":"YulFunctionCall","src":"9202:17:5"},"variables":[{"name":"returndata_size","nativeSrc":"9183:15:5","nodeType":"YulTypedName","src":"9183:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9247:2:5","nodeType":"YulLiteral","src":"9247:2:5","type":"","value":"32"},{"name":"returndata","nativeSrc":"9251:10:5","nodeType":"YulIdentifier","src":"9251:10:5"}],"functionName":{"name":"add","nativeSrc":"9243:3:5","nodeType":"YulIdentifier","src":"9243:3:5"},"nativeSrc":"9243:19:5","nodeType":"YulFunctionCall","src":"9243:19:5"},{"name":"returndata_size","nativeSrc":"9264:15:5","nodeType":"YulIdentifier","src":"9264:15:5"}],"functionName":{"name":"revert","nativeSrc":"9236:6:5","nodeType":"YulIdentifier","src":"9236:6:5"},"nativeSrc":"9236:44:5","nodeType":"YulFunctionCall","src":"9236:44:5"},"nativeSrc":"9236:44:5","nodeType":"YulExpressionStatement","src":"9236:44:5"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1463,"isOffset":false,"isSlot":false,"src":"9208:10:5","valueSize":1},{"declaration":1463,"isOffset":false,"isSlot":false,"src":"9251:10:5","valueSize":1}],"id":1472,"nodeType":"InlineAssembly","src":"9152:142:5"}]}}]},"id":1481,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:5","nodeType":"FunctionDefinition","parameters":{"id":1466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:5","nodeType":"VariableDeclaration","scope":1481,"src":"8838:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1462,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:5","nodeType":"VariableDeclaration","scope":1481,"src":"8863:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1464,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:5"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"8904:0:5"},"scope":1482,"src":"8821:540:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1483,"src":"194:9169:5","usedErrors":[],"usedEvents":[]}],"src":"101:9263:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1512]},"id":1513,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1484,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"126:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1512,"linearizedBaseContracts":[1512],"name":"Context","nameLocation":"641:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1493,"nodeType":"Block","src":"717:34:6","statements":[{"expression":{"expression":{"id":1490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:6","memberName":"sender","nodeType":"MemberAccess","src":"734:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1489,"id":1492,"nodeType":"Return","src":"727:17:6"}]},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:6","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[],"src":"674:2:6"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1494,"src":"708:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:6"},"scope":1512,"src":"655:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1502,"nodeType":"Block","src":"824:32:6","statements":[{"expression":{"expression":{"id":1499,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:6","memberName":"data","nodeType":"MemberAccess","src":"841:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1498,"id":1501,"nodeType":"Return","src":"834:15:6"}]},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:6","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[],"src":"774:2:6"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"808:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1496,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:6"},"scope":1512,"src":"757:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1510,"nodeType":"Block","src":"934:25:6","statements":[{"expression":{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1507,"id":1509,"nodeType":"Return","src":"944:8:6"}]},"id":1511,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:6","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[],"src":"891:2:6"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"925:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:6"},"scope":1512,"src":"862:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1513,"src":"623:338:6","usedErrors":[],"usedEvents":[]}],"src":"101:861:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2643],"SignedMath":[2748],"Strings":[1741]},"id":1742,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1514,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1742,"sourceUnit":2644,"src":"126:25:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1742,"sourceUnit":2749,"src":"152:31:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"185:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":1741,"linearizedBaseContracts":[1741],"name":"Strings","nameLocation":"228:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1520,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:7","nodeType":"VariableDeclaration","scope":1741,"src":"242:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1518,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1523,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:7","nodeType":"VariableDeclaration","scope":1741,"src":"302:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1521,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1570,"nodeType":"Block","src":"518:625:7","statements":[{"id":1569,"nodeType":"UncheckedBlock","src":"528:609:7","statements":[{"assignments":[1532],"declarations":[{"constant":false,"id":1532,"mutability":"mutable","name":"length","nameLocation":"560:6:7","nodeType":"VariableDeclaration","scope":1569,"src":"552:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1539,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"580:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1533,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"569:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2643_$","typeString":"type(library Math)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:7","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2480,"src":"569:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:7"},{"assignments":[1541],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"buffer","nameLocation":"618:6:7","nodeType":"VariableDeclaration","scope":1569,"src":"604:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1540,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1546,"initialValue":{"arguments":[{"id":1544,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"638:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1542,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:7"},{"assignments":[1548],"declarations":[{"constant":false,"id":1548,"mutability":"mutable","name":"ptr","nameLocation":"667:3:7","nodeType":"VariableDeclaration","scope":1569,"src":"659:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1549,"nodeType":"VariableDeclarationStatement","src":"659:11:7"},{"AST":{"nativeSrc":"740:67:7","nodeType":"YulBlock","src":"740:67:7","statements":[{"nativeSrc":"758:35:7","nodeType":"YulAssignment","src":"758:35:7","value":{"arguments":[{"name":"buffer","nativeSrc":"769:6:7","nodeType":"YulIdentifier","src":"769:6:7"},{"arguments":[{"kind":"number","nativeSrc":"781:2:7","nodeType":"YulLiteral","src":"781:2:7","type":"","value":"32"},{"name":"length","nativeSrc":"785:6:7","nodeType":"YulIdentifier","src":"785:6:7"}],"functionName":{"name":"add","nativeSrc":"777:3:7","nodeType":"YulIdentifier","src":"777:3:7"},"nativeSrc":"777:15:7","nodeType":"YulFunctionCall","src":"777:15:7"}],"functionName":{"name":"add","nativeSrc":"765:3:7","nodeType":"YulIdentifier","src":"765:3:7"},"nativeSrc":"765:28:7","nodeType":"YulFunctionCall","src":"765:28:7"},"variableNames":[{"name":"ptr","nativeSrc":"758:3:7","nodeType":"YulIdentifier","src":"758:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1541,"isOffset":false,"isSlot":false,"src":"769:6:7","valueSize":1},{"declaration":1532,"isOffset":false,"isSlot":false,"src":"785:6:7","valueSize":1},{"declaration":1548,"isOffset":false,"isSlot":false,"src":"758:3:7","valueSize":1}],"id":1550,"nodeType":"InlineAssembly","src":"731:76:7"},{"body":{"id":1565,"nodeType":"Block","src":"833:267:7","statements":[{"expression":{"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:7","subExpression":{"id":1552,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"851:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1554,"nodeType":"ExpressionStatement","src":"851:5:7"},{"AST":{"nativeSrc":"934:84:7","nodeType":"YulBlock","src":"934:84:7","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"964:3:7","nodeType":"YulIdentifier","src":"964:3:7"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"978:5:7","nodeType":"YulIdentifier","src":"978:5:7"},{"kind":"number","nativeSrc":"985:2:7","nodeType":"YulLiteral","src":"985:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"974:3:7","nodeType":"YulIdentifier","src":"974:3:7"},"nativeSrc":"974:14:7","nodeType":"YulFunctionCall","src":"974:14:7"},{"name":"_SYMBOLS","nativeSrc":"990:8:7","nodeType":"YulIdentifier","src":"990:8:7"}],"functionName":{"name":"byte","nativeSrc":"969:4:7","nodeType":"YulIdentifier","src":"969:4:7"},"nativeSrc":"969:30:7","nodeType":"YulFunctionCall","src":"969:30:7"}],"functionName":{"name":"mstore8","nativeSrc":"956:7:7","nodeType":"YulIdentifier","src":"956:7:7"},"nativeSrc":"956:44:7","nodeType":"YulFunctionCall","src":"956:44:7"},"nativeSrc":"956:44:7","nodeType":"YulExpressionStatement","src":"956:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1520,"isOffset":false,"isSlot":false,"src":"990:8:7","valueSize":1},{"declaration":1548,"isOffset":false,"isSlot":false,"src":"964:3:7","valueSize":1},{"declaration":1526,"isOffset":false,"isSlot":false,"src":"978:5:7","valueSize":1}],"id":1555,"nodeType":"InlineAssembly","src":"925:93:7"},{"expression":{"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1035:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1559,"nodeType":"ExpressionStatement","src":"1035:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1068:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1564,"nodeType":"IfStatement","src":"1064:21:7","trueBody":{"id":1563,"nodeType":"Break","src":"1080:5:7"}}]},"condition":{"hexValue":"74727565","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1566,"nodeType":"WhileStatement","src":"820:280:7"},{"expression":{"id":1567,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"1120:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1530,"id":1568,"nodeType":"Return","src":"1113:13:7"}]}]},"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"352:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1571,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:7","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"value","nameLocation":"473:5:7","nodeType":"VariableDeclaration","scope":1571,"src":"465:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:7"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1571,"src":"503:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1528,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:7"},"scope":1741,"src":"447:696:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1598,"nodeType":"Block","src":"1313:103:7","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1354:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:7","trueExpression":{"hexValue":"2d","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1400:5:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1590,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"1385:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2748_$","typeString":"type(library SignedMath)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:7","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2747,"src":"1385:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1589,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1571,1599],"referencedDeclaration":1571,"src":"1376:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1581,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1579,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:7","typeDescriptions":{}}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1578,"id":1597,"nodeType":"Return","src":"1323:86:7"}]},"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"1149:89:7","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:7","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"value","nameLocation":"1268:5:7","nodeType":"VariableDeclaration","scope":1599,"src":"1261:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1573,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:7"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1599,"src":"1298:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1576,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:7"},"scope":1741,"src":"1243:173:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1618,"nodeType":"Block","src":"1595:100:7","statements":[{"id":1617,"nodeType":"UncheckedBlock","src":"1605:84:7","statements":[{"expression":{"arguments":[{"id":1608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"1648:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"1667:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1609,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"1655:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2643_$","typeString":"type(library Math)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:7","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2603,"src":"1655:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1607,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1619,1695,1715],"referencedDeclaration":1695,"src":"1636:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1606,"id":1616,"nodeType":"Return","src":"1629:49:7"}]}]},"documentation":{"id":1600,"nodeType":"StructuredDocumentation","src":"1422:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1619,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:7","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"value","nameLocation":"1550:5:7","nodeType":"VariableDeclaration","scope":1619,"src":"1542:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:7"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1619,"src":"1580:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1604,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:7"},"scope":1741,"src":"1521:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1694,"nodeType":"Block","src":"1908:347:7","statements":[{"assignments":[1630],"declarations":[{"constant":false,"id":1630,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:7","nodeType":"VariableDeclaration","scope":1694,"src":"1918:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1629,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1639,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1634,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"1954:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1631,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:7"},{"expression":{"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1640,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1975:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1642,"indexExpression":{"hexValue":"30","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1645,"nodeType":"ExpressionStatement","src":"1975:15:7"},{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1646,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2000:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1648,"indexExpression":{"hexValue":"31","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1651,"nodeType":"ExpressionStatement","src":"2000:15:7"},{"body":{"id":1680,"nodeType":"Block","src":"2070:83:7","statements":[{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1666,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2084:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1668,"indexExpression":{"id":1667,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"2091:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1669,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"2096:8:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1673,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2105:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1675,"nodeType":"ExpressionStatement","src":"2084:33:7"},{"expression":{"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2131:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1679,"nodeType":"ExpressionStatement","src":"2131:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"2058:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1681,"initializationExpression":{"assignments":[1653],"declarations":[{"constant":false,"id":1653,"mutability":"mutable","name":"i","nameLocation":"2038:1:7","nodeType":"VariableDeclaration","scope":1681,"src":"2030:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1659,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1655,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"2046:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:7"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:7","subExpression":{"id":1663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"2067:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1665,"nodeType":"ExpressionStatement","src":"2065:3:7"},"nodeType":"ForStatement","src":"2025:128:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2170:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1688,"nodeType":"ExpressionStatement","src":"2162:55:7"},{"expression":{"arguments":[{"id":1691,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2241:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1689,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:7","typeDescriptions":{}}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1628,"id":1693,"nodeType":"Return","src":"2227:21:7"}]},"documentation":{"id":1620,"nodeType":"StructuredDocumentation","src":"1701:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1695,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:7","nodeType":"FunctionDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"value","nameLocation":"1847:5:7","nodeType":"VariableDeclaration","scope":1695,"src":"1839:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"length","nameLocation":"1862:6:7","nodeType":"VariableDeclaration","scope":1695,"src":"1854:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:7"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1695,"src":"1893:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1626,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:7"},"scope":1741,"src":"1818:437:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1714,"nodeType":"Block","src":"2480:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1708,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"2525:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1706,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:7","typeDescriptions":{}}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:7","typeDescriptions":{}}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1711,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"2533:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1703,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1619,1695,1715],"referencedDeclaration":1695,"src":"2497:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1702,"id":1713,"nodeType":"Return","src":"2490:59:7"}]},"documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"2261:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:7","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"addr","nameLocation":"2436:4:7","nodeType":"VariableDeclaration","scope":1715,"src":"2428:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:7"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"2465:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1700,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:7"},"scope":1741,"src":"2407:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1739,"nodeType":"Block","src":"2711:66:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1728,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"2744:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1726,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:7","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1725,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1734,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"2767:1:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1732,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:7","typeDescriptions":{}}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1731,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1724,"id":1738,"nodeType":"Return","src":"2721:49:7"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"2562:66:7","text":" @dev Returns true if the two strings are equal."},"id":1740,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:7","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"a","nameLocation":"2662:1:7","nodeType":"VariableDeclaration","scope":1740,"src":"2648:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1717,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"b","nameLocation":"2679:1:7","nodeType":"VariableDeclaration","scope":1740,"src":"2665:15:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1719,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:7"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1740,"src":"2705:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1722,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:7"},"scope":1741,"src":"2633:144:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1742,"src":"220:2559:7","usedErrors":[],"usedEvents":[]}],"src":"101:2679:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1765],"IERC165":[1777]},"id":1766,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1743,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1744,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1766,"sourceUnit":1778,"src":"124:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1746,"name":"IERC165","nameLocations":["754:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1777,"src":"754:7:8"},"id":1747,"nodeType":"InheritanceSpecifier","src":"754:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"149:576:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1765,"linearizedBaseContracts":[1765,1777],"name":"ERC165","nameLocation":"744:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1776],"body":{"id":1763,"nodeType":"Block","src":"920:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1756,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"937:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1758,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1777_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1777_$","typeString":"type(contract IERC165)"}],"id":1757,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1777","typeString":"type(contract IERC165)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1755,"id":1762,"nodeType":"Return","src":"930:47:8"}]},"documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"768:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1764,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:8","nodeType":"FunctionDefinition","overrides":{"id":1752,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:8"},"parameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:8","nodeType":"VariableDeclaration","scope":1764,"src":"856:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1749,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:8"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1764,"src":"914:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1753,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:8"},"scope":1765,"src":"829:155:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1766,"src":"726:260:8","usedErrors":[],"usedEvents":[]}],"src":"99:888:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1777]},"id":1778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1767,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"125:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1777,"linearizedBaseContracts":[1777],"name":"IERC165","nameLocation":"415:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"429:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1776,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:9","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:9","nodeType":"VariableDeclaration","scope":1776,"src":"801:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1770,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:9"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1776,"src":"844:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:9"},"scope":1777,"src":"774:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1778,"src":"405:447:9","usedErrors":[],"usedEvents":[]}],"src":"100:753:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2643]},"id":2644,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"128:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2643,"linearizedBaseContracts":[2643],"name":"Math","nameLocation":"210:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1784,"members":[{"id":1781,"name":"Down","nameLocation":"245:4:10","nodeType":"EnumValue","src":"245:4:10"},{"id":1782,"name":"Up","nameLocation":"287:2:10","nodeType":"EnumValue","src":"287:2:10"},{"id":1783,"name":"Zero","nameLocation":"318:4:10","nodeType":"EnumValue","src":"318:4:10"}],"name":"Rounding","nameLocation":"226:8:10","nodeType":"EnumDefinition","src":"221:122:10"},{"body":{"id":1801,"nodeType":"Block","src":"480:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"497:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1795,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"501:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1798,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"509:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:10","trueExpression":{"id":1797,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"505:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1793,"id":1800,"nodeType":"Return","src":"490:20:10"}]},"documentation":{"id":1785,"nodeType":"StructuredDocumentation","src":"349:59:10","text":" @dev Returns the largest of two numbers."},"id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:10","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"a","nameLocation":"434:1:10","nodeType":"VariableDeclaration","scope":1802,"src":"426:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"b","nameLocation":"445:1:10","nodeType":"VariableDeclaration","scope":1802,"src":"437:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:10"},"returnParameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1802,"src":"471:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1791,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:10"},"scope":2643,"src":"413:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1819,"nodeType":"Block","src":"655:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"672:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1813,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"676:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1816,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"684:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:10","trueExpression":{"id":1815,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"680:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1811,"id":1818,"nodeType":"Return","src":"665:20:10"}]},"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"523:60:10","text":" @dev Returns the smallest of two numbers."},"id":1820,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:10","nodeType":"FunctionDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"a","nameLocation":"609:1:10","nodeType":"VariableDeclaration","scope":1820,"src":"601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"b","nameLocation":"620:1:10","nodeType":"VariableDeclaration","scope":1820,"src":"612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:10"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1820,"src":"646:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:10"},"scope":2643,"src":"588:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1842,"nodeType":"Block","src":"876:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"931:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"935:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"941:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1835,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"945:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1829,"id":1841,"nodeType":"Return","src":"923:28:10"}]},"documentation":{"id":1821,"nodeType":"StructuredDocumentation","src":"698:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1843,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:10","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1823,"mutability":"mutable","name":"a","nameLocation":"830:1:10","nodeType":"VariableDeclaration","scope":1843,"src":"822:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"b","nameLocation":"841:1:10","nodeType":"VariableDeclaration","scope":1843,"src":"833:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:10"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1843,"src":"867:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:10"},"scope":2643,"src":"805:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1867,"nodeType":"Block","src":"1228:123:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"1316:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"1330:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1861,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"1339:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:10","trueExpression":{"hexValue":"30","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1852,"id":1866,"nodeType":"Return","src":"1309:35:10"}]},"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"964:188:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1868,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:10","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"a","nameLocation":"1182:1:10","nodeType":"VariableDeclaration","scope":1868,"src":"1174:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"b","nameLocation":"1193:1:10","nodeType":"VariableDeclaration","scope":1868,"src":"1185:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:10"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1868,"src":"1219:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:10"},"scope":2643,"src":"1157:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1990,"nodeType":"Block","src":"1765:4115:10","statements":[{"id":1989,"nodeType":"UncheckedBlock","src":"1775:4099:10","statements":[{"assignments":[1881],"declarations":[{"constant":false,"id":1881,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:10","nodeType":"VariableDeclaration","scope":1989,"src":"2096:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1880,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1882,"nodeType":"VariableDeclarationStatement","src":"2096:13:10"},{"assignments":[1884],"declarations":[{"constant":false,"id":1884,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:10","nodeType":"VariableDeclaration","scope":1989,"src":"2168:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1885,"nodeType":"VariableDeclarationStatement","src":"2168:13:10"},{"AST":{"nativeSrc":"2248:157:10","nodeType":"YulBlock","src":"2248:157:10","statements":[{"nativeSrc":"2266:30:10","nodeType":"YulVariableDeclaration","src":"2266:30:10","value":{"arguments":[{"name":"x","nativeSrc":"2283:1:10","nodeType":"YulIdentifier","src":"2283:1:10"},{"name":"y","nativeSrc":"2286:1:10","nodeType":"YulIdentifier","src":"2286:1:10"},{"arguments":[{"kind":"number","nativeSrc":"2293:1:10","nodeType":"YulLiteral","src":"2293:1:10","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2289:3:10","nodeType":"YulIdentifier","src":"2289:3:10"},"nativeSrc":"2289:6:10","nodeType":"YulFunctionCall","src":"2289:6:10"}],"functionName":{"name":"mulmod","nativeSrc":"2276:6:10","nodeType":"YulIdentifier","src":"2276:6:10"},"nativeSrc":"2276:20:10","nodeType":"YulFunctionCall","src":"2276:20:10"},"variables":[{"name":"mm","nativeSrc":"2270:2:10","nodeType":"YulTypedName","src":"2270:2:10","type":""}]},{"nativeSrc":"2313:18:10","nodeType":"YulAssignment","src":"2313:18:10","value":{"arguments":[{"name":"x","nativeSrc":"2326:1:10","nodeType":"YulIdentifier","src":"2326:1:10"},{"name":"y","nativeSrc":"2329:1:10","nodeType":"YulIdentifier","src":"2329:1:10"}],"functionName":{"name":"mul","nativeSrc":"2322:3:10","nodeType":"YulIdentifier","src":"2322:3:10"},"nativeSrc":"2322:9:10","nodeType":"YulFunctionCall","src":"2322:9:10"},"variableNames":[{"name":"prod0","nativeSrc":"2313:5:10","nodeType":"YulIdentifier","src":"2313:5:10"}]},{"nativeSrc":"2348:43:10","nodeType":"YulAssignment","src":"2348:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"2365:2:10","nodeType":"YulIdentifier","src":"2365:2:10"},{"name":"prod0","nativeSrc":"2369:5:10","nodeType":"YulIdentifier","src":"2369:5:10"}],"functionName":{"name":"sub","nativeSrc":"2361:3:10","nodeType":"YulIdentifier","src":"2361:3:10"},"nativeSrc":"2361:14:10","nodeType":"YulFunctionCall","src":"2361:14:10"},{"arguments":[{"name":"mm","nativeSrc":"2380:2:10","nodeType":"YulIdentifier","src":"2380:2:10"},{"name":"prod0","nativeSrc":"2384:5:10","nodeType":"YulIdentifier","src":"2384:5:10"}],"functionName":{"name":"lt","nativeSrc":"2377:2:10","nodeType":"YulIdentifier","src":"2377:2:10"},"nativeSrc":"2377:13:10","nodeType":"YulFunctionCall","src":"2377:13:10"}],"functionName":{"name":"sub","nativeSrc":"2357:3:10","nodeType":"YulIdentifier","src":"2357:3:10"},"nativeSrc":"2357:34:10","nodeType":"YulFunctionCall","src":"2357:34:10"},"variableNames":[{"name":"prod1","nativeSrc":"2348:5:10","nodeType":"YulIdentifier","src":"2348:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1881,"isOffset":false,"isSlot":false,"src":"2313:5:10","valueSize":1},{"declaration":1881,"isOffset":false,"isSlot":false,"src":"2369:5:10","valueSize":1},{"declaration":1881,"isOffset":false,"isSlot":false,"src":"2384:5:10","valueSize":1},{"declaration":1884,"isOffset":false,"isSlot":false,"src":"2348:5:10","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"2283:1:10","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"2326:1:10","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"2286:1:10","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"2329:1:10","valueSize":1}],"id":1886,"nodeType":"InlineAssembly","src":"2239:166:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1887,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"2486:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1895,"nodeType":"IfStatement","src":"2482:368:10","trueBody":{"id":1894,"nodeType":"Block","src":"2498:352:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"2816:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1891,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2824:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1879,"id":1893,"nodeType":"Return","src":"2809:26:10"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1897,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2960:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1898,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"2974:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1902,"nodeType":"ExpressionStatement","src":"2952:53:10"},{"assignments":[1904],"declarations":[{"constant":false,"id":1904,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:10","nodeType":"VariableDeclaration","scope":1989,"src":"3261:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1905,"nodeType":"VariableDeclarationStatement","src":"3261:17:10"},{"AST":{"nativeSrc":"3301:291:10","nodeType":"YulBlock","src":"3301:291:10","statements":[{"nativeSrc":"3370:38:10","nodeType":"YulAssignment","src":"3370:38:10","value":{"arguments":[{"name":"x","nativeSrc":"3390:1:10","nodeType":"YulIdentifier","src":"3390:1:10"},{"name":"y","nativeSrc":"3393:1:10","nodeType":"YulIdentifier","src":"3393:1:10"},{"name":"denominator","nativeSrc":"3396:11:10","nodeType":"YulIdentifier","src":"3396:11:10"}],"functionName":{"name":"mulmod","nativeSrc":"3383:6:10","nodeType":"YulIdentifier","src":"3383:6:10"},"nativeSrc":"3383:25:10","nodeType":"YulFunctionCall","src":"3383:25:10"},"variableNames":[{"name":"remainder","nativeSrc":"3370:9:10","nodeType":"YulIdentifier","src":"3370:9:10"}]},{"nativeSrc":"3490:41:10","nodeType":"YulAssignment","src":"3490:41:10","value":{"arguments":[{"name":"prod1","nativeSrc":"3503:5:10","nodeType":"YulIdentifier","src":"3503:5:10"},{"arguments":[{"name":"remainder","nativeSrc":"3513:9:10","nodeType":"YulIdentifier","src":"3513:9:10"},{"name":"prod0","nativeSrc":"3524:5:10","nodeType":"YulIdentifier","src":"3524:5:10"}],"functionName":{"name":"gt","nativeSrc":"3510:2:10","nodeType":"YulIdentifier","src":"3510:2:10"},"nativeSrc":"3510:20:10","nodeType":"YulFunctionCall","src":"3510:20:10"}],"functionName":{"name":"sub","nativeSrc":"3499:3:10","nodeType":"YulIdentifier","src":"3499:3:10"},"nativeSrc":"3499:32:10","nodeType":"YulFunctionCall","src":"3499:32:10"},"variableNames":[{"name":"prod1","nativeSrc":"3490:5:10","nodeType":"YulIdentifier","src":"3490:5:10"}]},{"nativeSrc":"3548:30:10","nodeType":"YulAssignment","src":"3548:30:10","value":{"arguments":[{"name":"prod0","nativeSrc":"3561:5:10","nodeType":"YulIdentifier","src":"3561:5:10"},{"name":"remainder","nativeSrc":"3568:9:10","nodeType":"YulIdentifier","src":"3568:9:10"}],"functionName":{"name":"sub","nativeSrc":"3557:3:10","nodeType":"YulIdentifier","src":"3557:3:10"},"nativeSrc":"3557:21:10","nodeType":"YulFunctionCall","src":"3557:21:10"},"variableNames":[{"name":"prod0","nativeSrc":"3548:5:10","nodeType":"YulIdentifier","src":"3548:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1875,"isOffset":false,"isSlot":false,"src":"3396:11:10","valueSize":1},{"declaration":1881,"isOffset":false,"isSlot":false,"src":"3524:5:10","valueSize":1},{"declaration":1881,"isOffset":false,"isSlot":false,"src":"3548:5:10","valueSize":1},{"declaration":1881,"isOffset":false,"isSlot":false,"src":"3561:5:10","valueSize":1},{"declaration":1884,"isOffset":false,"isSlot":false,"src":"3490:5:10","valueSize":1},{"declaration":1884,"isOffset":false,"isSlot":false,"src":"3503:5:10","valueSize":1},{"declaration":1904,"isOffset":false,"isSlot":false,"src":"3370:9:10","valueSize":1},{"declaration":1904,"isOffset":false,"isSlot":false,"src":"3513:9:10","valueSize":1},{"declaration":1904,"isOffset":false,"isSlot":false,"src":"3568:9:10","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"3390:1:10","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"3393:1:10","valueSize":1}],"id":1906,"nodeType":"InlineAssembly","src":"3292:300:10"},{"assignments":[1908],"declarations":[{"constant":false,"id":1908,"mutability":"mutable","name":"twos","nameLocation":"3907:4:10","nodeType":"VariableDeclaration","scope":1989,"src":"3899:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1916,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1909,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"3914:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:10","subExpression":{"id":1910,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"3930:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:10"},{"AST":{"nativeSrc":"3969:362:10","nodeType":"YulBlock","src":"3969:362:10","statements":[{"nativeSrc":"4034:37:10","nodeType":"YulAssignment","src":"4034:37:10","value":{"arguments":[{"name":"denominator","nativeSrc":"4053:11:10","nodeType":"YulIdentifier","src":"4053:11:10"},{"name":"twos","nativeSrc":"4066:4:10","nodeType":"YulIdentifier","src":"4066:4:10"}],"functionName":{"name":"div","nativeSrc":"4049:3:10","nodeType":"YulIdentifier","src":"4049:3:10"},"nativeSrc":"4049:22:10","nodeType":"YulFunctionCall","src":"4049:22:10"},"variableNames":[{"name":"denominator","nativeSrc":"4034:11:10","nodeType":"YulIdentifier","src":"4034:11:10"}]},{"nativeSrc":"4138:25:10","nodeType":"YulAssignment","src":"4138:25:10","value":{"arguments":[{"name":"prod0","nativeSrc":"4151:5:10","nodeType":"YulIdentifier","src":"4151:5:10"},{"name":"twos","nativeSrc":"4158:4:10","nodeType":"YulIdentifier","src":"4158:4:10"}],"functionName":{"name":"div","nativeSrc":"4147:3:10","nodeType":"YulIdentifier","src":"4147:3:10"},"nativeSrc":"4147:16:10","nodeType":"YulFunctionCall","src":"4147:16:10"},"variableNames":[{"name":"prod0","nativeSrc":"4138:5:10","nodeType":"YulIdentifier","src":"4138:5:10"}]},{"nativeSrc":"4278:39:10","nodeType":"YulAssignment","src":"4278:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4298:1:10","nodeType":"YulLiteral","src":"4298:1:10","type":"","value":"0"},{"name":"twos","nativeSrc":"4301:4:10","nodeType":"YulIdentifier","src":"4301:4:10"}],"functionName":{"name":"sub","nativeSrc":"4294:3:10","nodeType":"YulIdentifier","src":"4294:3:10"},"nativeSrc":"4294:12:10","nodeType":"YulFunctionCall","src":"4294:12:10"},{"name":"twos","nativeSrc":"4308:4:10","nodeType":"YulIdentifier","src":"4308:4:10"}],"functionName":{"name":"div","nativeSrc":"4290:3:10","nodeType":"YulIdentifier","src":"4290:3:10"},"nativeSrc":"4290:23:10","nodeType":"YulFunctionCall","src":"4290:23:10"},{"kind":"number","nativeSrc":"4315:1:10","nodeType":"YulLiteral","src":"4315:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4286:3:10","nodeType":"YulIdentifier","src":"4286:3:10"},"nativeSrc":"4286:31:10","nodeType":"YulFunctionCall","src":"4286:31:10"},"variableNames":[{"name":"twos","nativeSrc":"4278:4:10","nodeType":"YulIdentifier","src":"4278:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1875,"isOffset":false,"isSlot":false,"src":"4034:11:10","valueSize":1},{"declaration":1875,"isOffset":false,"isSlot":false,"src":"4053:11:10","valueSize":1},{"declaration":1881,"isOffset":false,"isSlot":false,"src":"4138:5:10","valueSize":1},{"declaration":1881,"isOffset":false,"isSlot":false,"src":"4151:5:10","valueSize":1},{"declaration":1908,"isOffset":false,"isSlot":false,"src":"4066:4:10","valueSize":1},{"declaration":1908,"isOffset":false,"isSlot":false,"src":"4158:4:10","valueSize":1},{"declaration":1908,"isOffset":false,"isSlot":false,"src":"4278:4:10","valueSize":1},{"declaration":1908,"isOffset":false,"isSlot":false,"src":"4301:4:10","valueSize":1},{"declaration":1908,"isOffset":false,"isSlot":false,"src":"4308:4:10","valueSize":1}],"id":1917,"nodeType":"InlineAssembly","src":"3960:371:10"},{"expression":{"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1918,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"4397:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1919,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"4406:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1920,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"4414:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1923,"nodeType":"ExpressionStatement","src":"4397:21:10"},{"assignments":[1925],"declarations":[{"constant":false,"id":1925,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:10","nodeType":"VariableDeclaration","scope":1989,"src":"4736:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1932,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1927,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"4759:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:10"},{"expression":{"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1933,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"4992:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5007:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1936,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5021:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1940,"nodeType":"ExpressionStatement","src":"4992:36:10"},{"expression":{"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1941,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1943,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5076:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1944,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5090:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1948,"nodeType":"ExpressionStatement","src":"5061:36:10"},{"expression":{"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1949,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5131:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1951,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5146:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1952,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5160:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1956,"nodeType":"ExpressionStatement","src":"5131:36:10"},{"expression":{"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1957,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5201:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1959,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5216:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1960,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5230:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1964,"nodeType":"ExpressionStatement","src":"5201:36:10"},{"expression":{"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1965,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5271:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1967,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5286:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1968,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5300:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ExpressionStatement","src":"5271:36:10"},{"expression":{"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1973,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5357:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1976,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5371:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1980,"nodeType":"ExpressionStatement","src":"5342:36:10"},{"expression":{"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1981,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"5812:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1982,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"5821:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1983,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5829:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1986,"nodeType":"ExpressionStatement","src":"5812:24:10"},{"expression":{"id":1987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"5857:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1879,"id":1988,"nodeType":"Return","src":"5850:13:10"}]}]},"documentation":{"id":1869,"nodeType":"StructuredDocumentation","src":"1357:305:10","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1991,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:10","nodeType":"FunctionDefinition","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"x","nameLocation":"1691:1:10","nodeType":"VariableDeclaration","scope":1991,"src":"1683:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1873,"mutability":"mutable","name":"y","nameLocation":"1702:1:10","nodeType":"VariableDeclaration","scope":1991,"src":"1694:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1875,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:10","nodeType":"VariableDeclaration","scope":1991,"src":"1705:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:10"},"returnParameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"result","nameLocation":"1757:6:10","nodeType":"VariableDeclaration","scope":1991,"src":"1749:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:10"},"scope":2643,"src":"1667:4213:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2034,"nodeType":"Block","src":"6122:189:10","statements":[{"assignments":[2007],"declarations":[{"constant":false,"id":2007,"mutability":"mutable","name":"result","nameLocation":"6140:6:10","nodeType":"VariableDeclaration","scope":2034,"src":"6132:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2013,"initialValue":{"arguments":[{"id":2009,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"6156:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2010,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"6159:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2011,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"6162:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2008,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1991,2035],"referencedDeclaration":1991,"src":"6149:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"6188:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2015,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"6200:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1784_$","typeString":"type(enum Math.Rounding)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1782,"src":"6200:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"src":"6188:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2019,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"6222:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2020,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"6225:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2021,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"6228:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2018,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2031,"nodeType":"IfStatement","src":"6184:98:10","trueBody":{"id":2030,"nodeType":"Block","src":"6246:36:10","statements":[{"expression":{"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2026,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"6260:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2029,"nodeType":"ExpressionStatement","src":"6260:11:10"}]}},{"expression":{"id":2032,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"6298:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2005,"id":2033,"nodeType":"Return","src":"6291:13:10"}]},"documentation":{"id":1992,"nodeType":"StructuredDocumentation","src":"5886:121:10","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:10","nodeType":"FunctionDefinition","parameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"x","nameLocation":"6036:1:10","nodeType":"VariableDeclaration","scope":2035,"src":"6028:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1996,"mutability":"mutable","name":"y","nameLocation":"6047:1:10","nodeType":"VariableDeclaration","scope":2035,"src":"6039:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1998,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:10","nodeType":"VariableDeclaration","scope":2035,"src":"6050:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1997,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:10","nodeType":"VariableDeclaration","scope":2035,"src":"6071:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"},"typeName":{"id":2000,"nodeType":"UserDefinedTypeName","pathNode":{"id":1999,"name":"Rounding","nameLocations":["6071:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1784,"src":"6071:8:10"},"referencedDeclaration":1784,"src":"6071:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:10"},"returnParameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"6113:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:10"},"scope":2643,"src":"6012:299:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2146,"nodeType":"Block","src":"6587:1585:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"6601:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2049,"nodeType":"IfStatement","src":"6597:45:10","trueBody":{"id":2048,"nodeType":"Block","src":"6609:33:10","statements":[{"expression":{"hexValue":"30","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2042,"id":2047,"nodeType":"Return","src":"6623:8:10"}]}},{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"result","nameLocation":"7329:6:10","nodeType":"VariableDeclaration","scope":2146,"src":"7321:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2060,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2054,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7349:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2053,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2315,2351],"referencedDeclaration":2315,"src":"7344:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:10"},{"id":2145,"nodeType":"UncheckedBlock","src":"7758:408:10","statements":[{"expression":{"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2061,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7782:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7792:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7801:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7805:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2071,"nodeType":"ExpressionStatement","src":"7782:35:10"},{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7831:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7841:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7850:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7854:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2082,"nodeType":"ExpressionStatement","src":"7831:35:10"},{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7880:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7890:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7899:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2086,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7903:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ExpressionStatement","src":"7880:35:10"},{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7929:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7939:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7948:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7952:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ExpressionStatement","src":"7929:35:10"},{"expression":{"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7978:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7988:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7997:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8001:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2111,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2115,"nodeType":"ExpressionStatement","src":"7978:35:10"},{"expression":{"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8027:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8037:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2118,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"8046:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2119,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8050:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2126,"nodeType":"ExpressionStatement","src":"8027:35:10"},{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8076:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8086:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2129,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"8095:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8099:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2137,"nodeType":"ExpressionStatement","src":"8076:35:10"},{"expression":{"arguments":[{"id":2139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8136:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"8144:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2141,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"8148:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2138,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"8132:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2042,"id":2144,"nodeType":"Return","src":"8125:30:10"}]}]},"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"6317:208:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2147,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:10","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"a","nameLocation":"6552:1:10","nodeType":"VariableDeclaration","scope":2147,"src":"6544:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:10"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2147,"src":"6578:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:10"},"scope":2643,"src":"6530:1642:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"8348:161:10","statements":[{"id":2181,"nodeType":"UncheckedBlock","src":"8358:145:10","statements":[{"assignments":[2159],"declarations":[{"constant":false,"id":2159,"mutability":"mutable","name":"result","nameLocation":"8390:6:10","nodeType":"VariableDeclaration","scope":2181,"src":"8382:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2158,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2163,"initialValue":{"arguments":[{"id":2161,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"8404:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2160,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2147,2183],"referencedDeclaration":2147,"src":"8399:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2164,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8427:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2165,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"8437:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2166,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"8449:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1784_$","typeString":"type(enum Math.Rounding)"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1782,"src":"8449:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"src":"8437:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8464:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2170,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8473:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"8482:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:10","trueExpression":{"hexValue":"31","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2157,"id":2180,"nodeType":"Return","src":"8420:72:10"}]}]},"documentation":{"id":2148,"nodeType":"StructuredDocumentation","src":"8178:89:10","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:10","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"a","nameLocation":"8294:1:10","nodeType":"VariableDeclaration","scope":2183,"src":"8286:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:10","nodeType":"VariableDeclaration","scope":2183,"src":"8297:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"},"typeName":{"id":2152,"nodeType":"UserDefinedTypeName","pathNode":{"id":2151,"name":"Rounding","nameLocations":["8297:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1784,"src":"8297:8:10"},"referencedDeclaration":1784,"src":"8297:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:10"},"returnParameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2183,"src":"8339:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2155,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:10"},"scope":2643,"src":"8272:237:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2314,"nodeType":"Block","src":"8694:922:10","statements":[{"assignments":[2192],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"result","nameLocation":"8712:6:10","nodeType":"VariableDeclaration","scope":2314,"src":"8704:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2194,"initialValue":{"hexValue":"30","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:10"},{"id":2311,"nodeType":"UncheckedBlock","src":"8732:855:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"8760:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2209,"nodeType":"IfStatement","src":"8756:99:10","trueBody":{"id":2208,"nodeType":"Block","src":"8778:77:10","statements":[{"expression":{"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"8796:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2203,"nodeType":"ExpressionStatement","src":"8796:13:10"},{"expression":{"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"8827:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2207,"nodeType":"ExpressionStatement","src":"8827:13:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"8872:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2224,"nodeType":"IfStatement","src":"8868:96:10","trueBody":{"id":2223,"nodeType":"Block","src":"8889:75:10","statements":[{"expression":{"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"8907:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2218,"nodeType":"ExpressionStatement","src":"8907:12:10"},{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"8937:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"nodeType":"ExpressionStatement","src":"8937:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"8981:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2239,"nodeType":"IfStatement","src":"8977:96:10","trueBody":{"id":2238,"nodeType":"Block","src":"8998:75:10","statements":[{"expression":{"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9016:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2233,"nodeType":"ExpressionStatement","src":"9016:12:10"},{"expression":{"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"9046:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2237,"nodeType":"ExpressionStatement","src":"9046:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9090:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2254,"nodeType":"IfStatement","src":"9086:96:10","trueBody":{"id":2253,"nodeType":"Block","src":"9107:75:10","statements":[{"expression":{"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9125:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2248,"nodeType":"ExpressionStatement","src":"9125:12:10"},{"expression":{"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"9155:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2252,"nodeType":"ExpressionStatement","src":"9155:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9199:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2269,"nodeType":"IfStatement","src":"9195:93:10","trueBody":{"id":2268,"nodeType":"Block","src":"9215:73:10","statements":[{"expression":{"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9233:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2263,"nodeType":"ExpressionStatement","src":"9233:11:10"},{"expression":{"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"9262:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2267,"nodeType":"ExpressionStatement","src":"9262:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9305:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2284,"nodeType":"IfStatement","src":"9301:93:10","trueBody":{"id":2283,"nodeType":"Block","src":"9321:73:10","statements":[{"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9339:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2278,"nodeType":"ExpressionStatement","src":"9339:11:10"},{"expression":{"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2279,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"9368:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2282,"nodeType":"ExpressionStatement","src":"9368:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9411:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2299,"nodeType":"IfStatement","src":"9407:93:10","trueBody":{"id":2298,"nodeType":"Block","src":"9427:73:10","statements":[{"expression":{"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9445:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2293,"nodeType":"ExpressionStatement","src":"9445:11:10"},{"expression":{"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"9474:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2297,"nodeType":"ExpressionStatement","src":"9474:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9517:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2310,"nodeType":"IfStatement","src":"9513:64:10","trueBody":{"id":2309,"nodeType":"Block","src":"9533:44:10","statements":[{"expression":{"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"9551:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2308,"nodeType":"ExpressionStatement","src":"9551:11:10"}]}}]},{"expression":{"id":2312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"9603:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2190,"id":2313,"nodeType":"Return","src":"9596:13:10"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"8515:113:10","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2315,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:10","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"value","nameLocation":"8655:5:10","nodeType":"VariableDeclaration","scope":2315,"src":"8647:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:10"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2315,"src":"8685:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:10"},"scope":2643,"src":"8633:983:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2350,"nodeType":"Block","src":"9849:165:10","statements":[{"id":2349,"nodeType":"UncheckedBlock","src":"9859:149:10","statements":[{"assignments":[2327],"declarations":[{"constant":false,"id":2327,"mutability":"mutable","name":"result","nameLocation":"9891:6:10","nodeType":"VariableDeclaration","scope":2349,"src":"9883:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2326,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2331,"initialValue":{"arguments":[{"id":2329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"9905:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2328,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2315,2351],"referencedDeclaration":2315,"src":"9900:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"9932:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"9942:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2334,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"9954:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1784_$","typeString":"type(enum Math.Rounding)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1782,"src":"9954:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"src":"9942:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"9974:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"9983:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:10","trueExpression":{"hexValue":"31","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2325,"id":2348,"nodeType":"Return","src":"9925:72:10"}]}]},"documentation":{"id":2316,"nodeType":"StructuredDocumentation","src":"9622:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2351,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:10","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"value","nameLocation":"9791:5:10","nodeType":"VariableDeclaration","scope":2351,"src":"9783:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:10","nodeType":"VariableDeclaration","scope":2351,"src":"9798:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"},"typeName":{"id":2320,"nodeType":"UserDefinedTypeName","pathNode":{"id":2319,"name":"Rounding","nameLocations":["9798:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1784,"src":"9798:8:10"},"referencedDeclaration":1784,"src":"9798:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:10"},"returnParameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2351,"src":"9840:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:10"},"scope":2643,"src":"9769:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"10201:854:10","statements":[{"assignments":[2360],"declarations":[{"constant":false,"id":2360,"mutability":"mutable","name":"result","nameLocation":"10219:6:10","nodeType":"VariableDeclaration","scope":2479,"src":"10211:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2362,"initialValue":{"hexValue":"30","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:10"},{"id":2476,"nodeType":"UncheckedBlock","src":"10239:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10267:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2379,"nodeType":"IfStatement","src":"10263:103:10","trueBody":{"id":2378,"nodeType":"Block","src":"10286:80:10","statements":[{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10304:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2373,"nodeType":"ExpressionStatement","src":"10304:17:10"},{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"10339:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2377,"nodeType":"ExpressionStatement","src":"10339:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10383:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2396,"nodeType":"IfStatement","src":"10379:103:10","trueBody":{"id":2395,"nodeType":"Block","src":"10402:80:10","statements":[{"expression":{"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10420:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2390,"nodeType":"ExpressionStatement","src":"10420:17:10"},{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"10455:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2394,"nodeType":"ExpressionStatement","src":"10455:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10499:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2413,"nodeType":"IfStatement","src":"10495:103:10","trueBody":{"id":2412,"nodeType":"Block","src":"10518:80:10","statements":[{"expression":{"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10536:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2407,"nodeType":"ExpressionStatement","src":"10536:17:10"},{"expression":{"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"10571:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2411,"nodeType":"ExpressionStatement","src":"10571:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10615:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2430,"nodeType":"IfStatement","src":"10611:100:10","trueBody":{"id":2429,"nodeType":"Block","src":"10633:78:10","statements":[{"expression":{"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10651:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2424,"nodeType":"ExpressionStatement","src":"10651:16:10"},{"expression":{"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"10685:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2428,"nodeType":"ExpressionStatement","src":"10685:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10728:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2447,"nodeType":"IfStatement","src":"10724:100:10","trueBody":{"id":2446,"nodeType":"Block","src":"10746:78:10","statements":[{"expression":{"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10764:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2441,"nodeType":"ExpressionStatement","src":"10764:16:10"},{"expression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"10798:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2445,"nodeType":"ExpressionStatement","src":"10798:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10841:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2464,"nodeType":"IfStatement","src":"10837:100:10","trueBody":{"id":2463,"nodeType":"Block","src":"10859:78:10","statements":[{"expression":{"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10877:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2458,"nodeType":"ExpressionStatement","src":"10877:16:10"},{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"10911:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2462,"nodeType":"ExpressionStatement","src":"10911:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"10954:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"nodeType":"IfStatement","src":"10950:66:10","trueBody":{"id":2474,"nodeType":"Block","src":"10972:44:10","statements":[{"expression":{"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"10990:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2473,"nodeType":"ExpressionStatement","src":"10990:11:10"}]}}]},{"expression":{"id":2477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"11042:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2358,"id":2478,"nodeType":"Return","src":"11035:13:10"}]},"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"10020:114:10","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:10","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"value","nameLocation":"10162:5:10","nodeType":"VariableDeclaration","scope":2480,"src":"10154:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:10"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2480,"src":"10192:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:10"},"scope":2643,"src":"10139:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2515,"nodeType":"Block","src":"11290:167:10","statements":[{"id":2514,"nodeType":"UncheckedBlock","src":"11300:151:10","statements":[{"assignments":[2492],"declarations":[{"constant":false,"id":2492,"mutability":"mutable","name":"result","nameLocation":"11332:6:10","nodeType":"VariableDeclaration","scope":2514,"src":"11324:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2496,"initialValue":{"arguments":[{"id":2494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11347:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2493,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2480,2516],"referencedDeclaration":2480,"src":"11341:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"11374:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2498,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"11384:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2499,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"11396:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1784_$","typeString":"type(enum Math.Rounding)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1782,"src":"11396:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"src":"11384:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2503,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"11417:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"11426:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:10","trueExpression":{"hexValue":"31","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2490,"id":2513,"nodeType":"Return","src":"11367:73:10"}]}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"11061:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2516,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:10","nodeType":"FunctionDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"value","nameLocation":"11232:5:10","nodeType":"VariableDeclaration","scope":2516,"src":"11224:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2482,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:10","nodeType":"VariableDeclaration","scope":2516,"src":"11239:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"},"typeName":{"id":2485,"nodeType":"UserDefinedTypeName","pathNode":{"id":2484,"name":"Rounding","nameLocations":["11239:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1784,"src":"11239:8:10"},"referencedDeclaration":1784,"src":"11239:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:10"},"returnParameters":{"id":2490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2516,"src":"11281:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2488,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:10"},"scope":2643,"src":"11209:248:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2602,"nodeType":"Block","src":"11771:600:10","statements":[{"assignments":[2525],"declarations":[{"constant":false,"id":2525,"mutability":"mutable","name":"result","nameLocation":"11789:6:10","nodeType":"VariableDeclaration","scope":2602,"src":"11781:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2527,"initialValue":{"hexValue":"30","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:10"},{"id":2599,"nodeType":"UncheckedBlock","src":"11809:533:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"11837:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2542,"nodeType":"IfStatement","src":"11833:98:10","trueBody":{"id":2541,"nodeType":"Block","src":"11855:76:10","statements":[{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"11873:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2536,"nodeType":"ExpressionStatement","src":"11873:13:10"},{"expression":{"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"11904:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ExpressionStatement","src":"11904:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"11948:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2557,"nodeType":"IfStatement","src":"11944:95:10","trueBody":{"id":2556,"nodeType":"Block","src":"11965:74:10","statements":[{"expression":{"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"11983:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2551,"nodeType":"ExpressionStatement","src":"11983:12:10"},{"expression":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"12013:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2555,"nodeType":"ExpressionStatement","src":"12013:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"12056:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2572,"nodeType":"IfStatement","src":"12052:95:10","trueBody":{"id":2571,"nodeType":"Block","src":"12073:74:10","statements":[{"expression":{"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"12091:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2566,"nodeType":"ExpressionStatement","src":"12091:12:10"},{"expression":{"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"12121:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2570,"nodeType":"ExpressionStatement","src":"12121:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"12164:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2587,"nodeType":"IfStatement","src":"12160:95:10","trueBody":{"id":2586,"nodeType":"Block","src":"12181:74:10","statements":[{"expression":{"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"12199:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2581,"nodeType":"ExpressionStatement","src":"12199:12:10"},{"expression":{"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"12229:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2585,"nodeType":"ExpressionStatement","src":"12229:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"12272:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2598,"nodeType":"IfStatement","src":"12268:64:10","trueBody":{"id":2597,"nodeType":"Block","src":"12288:44:10","statements":[{"expression":{"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2593,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"12306:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2596,"nodeType":"ExpressionStatement","src":"12306:11:10"}]}}]},{"expression":{"id":2600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"12358:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2523,"id":2601,"nodeType":"Return","src":"12351:13:10"}]},"documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"11463:240:10","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:10","nodeType":"FunctionDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"value","nameLocation":"11732:5:10","nodeType":"VariableDeclaration","scope":2603,"src":"11724:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2518,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:10"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2603,"src":"11762:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:10"},"scope":2643,"src":"11708:663:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2641,"nodeType":"Block","src":"12608:174:10","statements":[{"id":2640,"nodeType":"UncheckedBlock","src":"12618:158:10","statements":[{"assignments":[2615],"declarations":[{"constant":false,"id":2615,"mutability":"mutable","name":"result","nameLocation":"12650:6:10","nodeType":"VariableDeclaration","scope":2640,"src":"12642:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2614,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2619,"initialValue":{"arguments":[{"id":2617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"12666:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2616,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2603,2642],"referencedDeclaration":2603,"src":"12659:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"12693:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2621,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"12703:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2622,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"12715:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1784_$","typeString":"type(enum Math.Rounding)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:10","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1782,"src":"12715:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"src":"12703:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"12736:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"12751:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:10","trueExpression":{"hexValue":"31","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2613,"id":2639,"nodeType":"Return","src":"12686:79:10"}]}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"12377:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:10","nodeType":"FunctionDefinition","parameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"value","nameLocation":"12550:5:10","nodeType":"VariableDeclaration","scope":2642,"src":"12542:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2605,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:10","nodeType":"VariableDeclaration","scope":2642,"src":"12557:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"},"typeName":{"id":2608,"nodeType":"UserDefinedTypeName","pathNode":{"id":2607,"name":"Rounding","nameLocations":["12557:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":1784,"src":"12557:8:10"},"referencedDeclaration":1784,"src":"12557:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1784","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:10"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2642,"src":"12599:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:10"},"scope":2643,"src":"12526:256:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2644,"src":"202:12582:10","usedErrors":[],"usedEvents":[]}],"src":"103:12682:10"},"id":10},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2748]},"id":2749,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2645,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"134:80:11","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2748,"linearizedBaseContracts":[2748],"name":"SignedMath","nameLocation":"223:10:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2663,"nodeType":"Block","src":"375:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"392:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2657,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"396:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2660,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"404:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:11","trueExpression":{"id":2659,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"400:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2655,"id":2662,"nodeType":"Return","src":"385:20:11"}]},"documentation":{"id":2647,"nodeType":"StructuredDocumentation","src":"240:66:11","text":" @dev Returns the largest of two signed numbers."},"id":2664,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:11","nodeType":"FunctionDefinition","parameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"a","nameLocation":"331:1:11","nodeType":"VariableDeclaration","scope":2664,"src":"324:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2648,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2651,"mutability":"mutable","name":"b","nameLocation":"341:1:11","nodeType":"VariableDeclaration","scope":2664,"src":"334:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2650,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:11"},"returnParameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2664,"src":"367:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2653,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:11"},"scope":2748,"src":"311:101:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2681,"nodeType":"Block","src":"554:37:11","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2674,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"571:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2675,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"575:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2678,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"583:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:11","trueExpression":{"id":2677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"579:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2673,"id":2680,"nodeType":"Return","src":"564:20:11"}]},"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"418:67:11","text":" @dev Returns the smallest of two signed numbers."},"id":2682,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:11","nodeType":"FunctionDefinition","parameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"a","nameLocation":"510:1:11","nodeType":"VariableDeclaration","scope":2682,"src":"503:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2666,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"b","nameLocation":"520:1:11","nodeType":"VariableDeclaration","scope":2682,"src":"513:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2668,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:11"},"returnParameters":{"id":2673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2682,"src":"546:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2671,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:11"},"scope":2748,"src":"490:101:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2725,"nodeType":"Block","src":"796:162:11","statements":[{"assignments":[2693],"declarations":[{"constant":false,"id":2693,"mutability":"mutable","name":"x","nameLocation":"865:1:11","nodeType":"VariableDeclaration","scope":2725,"src":"858:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2692,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2706,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"870:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2695,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"874:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2698,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"881:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2699,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"885:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:11"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"910:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2712,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"930:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:11","typeDescriptions":{}}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2708,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:11","typeDescriptions":{}}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"944:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2718,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"948:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2691,"id":2724,"nodeType":"Return","src":"903:48:11"}]},"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"597:126:11","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2726,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:11","nodeType":"FunctionDefinition","parameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"a","nameLocation":"752:1:11","nodeType":"VariableDeclaration","scope":2726,"src":"745:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2684,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"b","nameLocation":"762:1:11","nodeType":"VariableDeclaration","scope":2726,"src":"755:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2686,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:11"},"returnParameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2726,"src":"788:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2689,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:11"},"scope":2748,"src":"728:230:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"1102:158:11","statements":[{"id":2745,"nodeType":"UncheckedBlock","src":"1112:142:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2736,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1227:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:11","subExpression":{"id":2740,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1241:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:11","trueExpression":{"id":2739,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"1236:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:11","typeDescriptions":{}}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2733,"id":2744,"nodeType":"Return","src":"1212:31:11"}]}]},"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"964:78:11","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2747,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:11","nodeType":"FunctionDefinition","parameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2729,"mutability":"mutable","name":"n","nameLocation":"1067:1:11","nodeType":"VariableDeclaration","scope":2747,"src":"1060:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2728,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:11"},"returnParameters":{"id":2733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2747,"src":"1093:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:11"},"scope":2748,"src":"1047:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2749,"src":"215:1047:11","usedErrors":[],"usedEvents":[]}],"src":"109:1154:11"},"id":11},"contracts/Nftmarketplace.sol":{"ast":{"absolutePath":"contracts/Nftmarketplace.sol","exportedSymbols":{"AlreadyListed":[2779],"IERC165":[1777],"IERC721":[1107],"ItemNotForSale":[2767],"NftMarketplace":[3213],"NoProceeds":[2781],"NotApprovedForMarketplace":[2785],"NotListed":[2773],"NotOwner":[2783],"PriceMustBeAboveZero":[2787],"PriceNotMet":[2761],"ReentrancyGuard":[64]},"id":3214,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2750,"literals":["solidity","^","0.8",".25"],"nodeType":"PragmaDirective","src":"33:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2751,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3214,"sourceUnit":1108,"src":"61:58:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":2752,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3214,"sourceUnit":65,"src":"121:62:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":2753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3214,"sourceUnit":65,"src":"187:62:12","symbolAliases":[],"unitAlias":""},{"errorSelector":"7c934565","id":2761,"name":"PriceNotMet","nameLocation":"259:11:12","nodeType":"ErrorDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"nftAddress","nameLocation":"279:10:12","nodeType":"VariableDeclaration","scope":2761,"src":"271:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2754,"name":"address","nodeType":"ElementaryTypeName","src":"271:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"tokenId","nameLocation":"299:7:12","nodeType":"VariableDeclaration","scope":2761,"src":"291:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"291:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"price","nameLocation":"316:5:12","nodeType":"VariableDeclaration","scope":2761,"src":"308:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"308:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"270:52:12"},"src":"253:70:12"},{"errorSelector":"c5d002b3","id":2767,"name":"ItemNotForSale","nameLocation":"331:14:12","nodeType":"ErrorDefinition","parameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2763,"mutability":"mutable","name":"nftAddress","nameLocation":"354:10:12","nodeType":"VariableDeclaration","scope":2767,"src":"346:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2762,"name":"address","nodeType":"ElementaryTypeName","src":"346:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2765,"mutability":"mutable","name":"tokenId","nameLocation":"374:7:12","nodeType":"VariableDeclaration","scope":2767,"src":"366:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"366:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"345:37:12"},"src":"325:58:12"},{"errorSelector":"6831488c","id":2773,"name":"NotListed","nameLocation":"391:9:12","nodeType":"ErrorDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"nftAddress","nameLocation":"409:10:12","nodeType":"VariableDeclaration","scope":2773,"src":"401:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2768,"name":"address","nodeType":"ElementaryTypeName","src":"401:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2771,"mutability":"mutable","name":"tokenId","nameLocation":"429:7:12","nodeType":"VariableDeclaration","scope":2773,"src":"421:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2770,"name":"uint256","nodeType":"ElementaryTypeName","src":"421:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"400:37:12"},"src":"385:53:12"},{"errorSelector":"4a5568d5","id":2779,"name":"AlreadyListed","nameLocation":"446:13:12","nodeType":"ErrorDefinition","parameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"nftAddress","nameLocation":"468:10:12","nodeType":"VariableDeclaration","scope":2779,"src":"460:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2774,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"tokenId","nameLocation":"488:7:12","nodeType":"VariableDeclaration","scope":2779,"src":"480:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2776,"name":"uint256","nodeType":"ElementaryTypeName","src":"480:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"459:37:12"},"src":"440:57:12"},{"errorSelector":"c4d8fa87","id":2781,"name":"NoProceeds","nameLocation":"505:10:12","nodeType":"ErrorDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[],"src":"515:2:12"},"src":"499:19:12"},{"errorSelector":"30cd7471","id":2783,"name":"NotOwner","nameLocation":"526:8:12","nodeType":"ErrorDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[],"src":"534:2:12"},"src":"520:17:12"},{"errorSelector":"4be3a2c5","id":2785,"name":"NotApprovedForMarketplace","nameLocation":"545:25:12","nodeType":"ErrorDefinition","parameters":{"id":2784,"nodeType":"ParameterList","parameters":[],"src":"570:2:12"},"src":"539:34:12"},{"errorSelector":"e1abbfc5","id":2787,"name":"PriceMustBeAboveZero","nameLocation":"581:20:12","nodeType":"ErrorDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[],"src":"601:2:12"},"src":"575:29:12"},{"abstract":false,"baseContracts":[{"baseName":{"id":2788,"name":"ReentrancyGuard","nameLocations":["635:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":64,"src":"635:15:12"},"id":2789,"nodeType":"InheritanceSpecifier","src":"635:15:12"}],"canonicalName":"NftMarketplace","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3213,"linearizedBaseContracts":[3213,64],"name":"NftMarketplace","nameLocation":"617:14:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"NftMarketplace.Listing","id":2794,"members":[{"constant":false,"id":2791,"mutability":"mutable","name":"price","nameLocation":"686:5:12","nodeType":"VariableDeclaration","scope":2794,"src":"678:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"seller","nameLocation":"704:6:12","nodeType":"VariableDeclaration","scope":2794,"src":"696:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Listing","nameLocation":"665:7:12","nodeType":"StructDefinition","scope":3213,"src":"658:57:12","visibility":"public"},{"anonymous":false,"eventSelector":"d547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de4","id":2804,"name":"ItemListed","nameLocation":"724:10:12","nodeType":"EventDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"756:6:12","nodeType":"VariableDeclaration","scope":2804,"src":"740:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2798,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"783:10:12","nodeType":"VariableDeclaration","scope":2804,"src":"767:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2797,"name":"address","nodeType":"ElementaryTypeName","src":"767:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2800,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"814:7:12","nodeType":"VariableDeclaration","scope":2804,"src":"798:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"798:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2802,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"834:5:12","nodeType":"VariableDeclaration","scope":2804,"src":"826:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"735:108:12"},"src":"718:126:12"},{"anonymous":false,"eventSelector":"9ba1a3cb55ce8d63d072a886f94d2a744f50cddf82128e897d0661f5ec623158","id":2812,"name":"ItemCanceled","nameLocation":"853:12:12","nodeType":"EventDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"886:6:12","nodeType":"VariableDeclaration","scope":2812,"src":"870:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2805,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2808,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"913:10:12","nodeType":"VariableDeclaration","scope":2812,"src":"897:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"897:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2810,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"944:7:12","nodeType":"VariableDeclaration","scope":2812,"src":"928:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"865:90:12"},"src":"847:109:12"},{"anonymous":false,"eventSelector":"263223b1dd81e51054a4e6f791d45a4a1ddb4aadcd93a2dfd892615c3fdac187","id":2822,"name":"ItemBought","nameLocation":"965:10:12","nodeType":"EventDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"996:5:12","nodeType":"VariableDeclaration","scope":2822,"src":"980:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2813,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2816,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"1022:10:12","nodeType":"VariableDeclaration","scope":2822,"src":"1006:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2818,"indexed":true,"mutability":"mutable","name":"toeknId","nameLocation":"1053:7:12","nodeType":"VariableDeclaration","scope":2822,"src":"1037:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1037:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2820,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1073:5:12","nodeType":"VariableDeclaration","scope":2822,"src":"1065:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"1065:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"975:107:12"},"src":"959:124:12"},{"constant":false,"id":2829,"mutability":"mutable","name":"s_listings","nameLocation":"1144:10:12","nodeType":"VariableDeclaration","scope":3213,"src":"1088:66:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))"},"typeName":{"id":2828,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"1096:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1088:47:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2827,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1107:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2826,"nodeType":"UserDefinedTypeName","pathNode":{"id":2825,"name":"Listing","nameLocations":["1126:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"1126:7:12"},"referencedDeclaration":2794,"src":"1126:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage_ptr","typeString":"struct NftMarketplace.Listing"}}}},"visibility":"private"},{"constant":false,"id":2833,"mutability":"mutable","name":"s_proceeds","nameLocation":"1194:10:12","nodeType":"VariableDeclaration","scope":3213,"src":"1158:46:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2832,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2830,"name":"address","nodeType":"ElementaryTypeName","src":"1166:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1158:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1177:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2862,"nodeType":"Block","src":"1294:151:12","statements":[{"assignments":[2843],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"listing","nameLocation":"1314:7:12","nodeType":"VariableDeclaration","scope":2862,"src":"1299:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":2842,"nodeType":"UserDefinedTypeName","pathNode":{"id":2841,"name":"Listing","nameLocations":["1299:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"1299:7:12"},"referencedDeclaration":2794,"src":"1299:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"id":2849,"initialValue":{"baseExpression":{"baseExpression":{"id":2844,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"1324:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":2846,"indexExpression":{"id":2845,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"1335:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1324:22:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":2848,"indexExpression":{"id":2847,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1347:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1324:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1299:56:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2850,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"1363:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":2851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1371:5:12","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"1363:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1379:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1363:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2860,"nodeType":"IfStatement","src":"1360:75:12","trueBody":{"id":2859,"nodeType":"Block","src":"1382:53:12","statements":[{"errorCall":{"arguments":[{"id":2855,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"1409:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2856,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"1421:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2854,"name":"AlreadyListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"1395:13:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1395:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2858,"nodeType":"RevertStatement","src":"1388:41:12"}]}},{"id":2861,"nodeType":"PlaceholderStatement","src":"1439:1:12"}]},"id":2863,"name":"notListed","nameLocation":"1219:9:12","nodeType":"ModifierDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"nftAddress","nameLocation":"1241:10:12","nodeType":"VariableDeclaration","scope":2863,"src":"1233:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2834,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2837,"mutability":"mutable","name":"tokenId","nameLocation":"1264:7:12","nodeType":"VariableDeclaration","scope":2863,"src":"1256:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2839,"mutability":"mutable","name":"owner","nameLocation":"1284:5:12","nodeType":"VariableDeclaration","scope":2863,"src":"1276:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2838,"name":"address","nodeType":"ElementaryTypeName","src":"1276:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1228:65:12"},"src":"1210:235:12","virtual":false,"visibility":"internal"},{"body":{"id":2894,"nodeType":"Block","src":"1534:144:12","statements":[{"assignments":[2873],"declarations":[{"constant":false,"id":2873,"mutability":"mutable","name":"nft","nameLocation":"1547:3:12","nodeType":"VariableDeclaration","scope":2894,"src":"1539:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1107","typeString":"contract IERC721"},"typeName":{"id":2872,"nodeType":"UserDefinedTypeName","pathNode":{"id":2871,"name":"IERC721","nameLocations":["1539:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1107,"src":"1539:7:12"},"referencedDeclaration":1107,"src":"1539:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1107","typeString":"contract IERC721"}},"visibility":"internal"}],"id":2877,"initialValue":{"arguments":[{"id":2875,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"1561:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2874,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"1553:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1107_$","typeString":"type(contract IERC721)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1553:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1107","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"1539:33:12"},{"assignments":[2879],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"owner","nameLocation":"1585:5:12","nodeType":"VariableDeclaration","scope":2894,"src":"1577:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2878,"name":"address","nodeType":"ElementaryTypeName","src":"1577:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2884,"initialValue":{"arguments":[{"id":2882,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"1605:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2880,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"1593:3:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1107","typeString":"contract IERC721"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1597:7:12","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1040,"src":"1593:11:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1593:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1577:36:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"1621:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2886,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"1632:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1621:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2892,"nodeType":"IfStatement","src":"1618:50:12","trueBody":{"id":2891,"nodeType":"Block","src":"1639:29:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2888,"name":"NotOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"1652:8:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1652:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2890,"nodeType":"RevertStatement","src":"1645:17:12"}]}},{"id":2893,"nodeType":"PlaceholderStatement","src":"1672:1:12"}]},"id":2895,"name":"isOwner","nameLocation":"1460:7:12","nodeType":"ModifierDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"nftAddress","nameLocation":"1480:10:12","nodeType":"VariableDeclaration","scope":2895,"src":"1472:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2867,"mutability":"mutable","name":"tokenId","nameLocation":"1503:7:12","nodeType":"VariableDeclaration","scope":2895,"src":"1495:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1495:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2869,"mutability":"mutable","name":"spender","nameLocation":"1523:7:12","nodeType":"VariableDeclaration","scope":2895,"src":"1515:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2868,"name":"address","nodeType":"ElementaryTypeName","src":"1515:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1467:67:12"},"src":"1451:227:12","virtual":false,"visibility":"internal"},{"body":{"id":2965,"nodeType":"Block","src":"1874:326:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2916,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1882:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1882:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2923,"nodeType":"IfStatement","src":"1879:57:12","trueBody":{"id":2922,"nodeType":"Block","src":"1894:42:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2919,"name":"PriceMustBeAboveZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"1908:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1908:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2921,"nodeType":"RevertStatement","src":"1901:29:12"}]}},{"assignments":[2926],"declarations":[{"constant":false,"id":2926,"mutability":"mutable","name":"nft","nameLocation":"1948:3:12","nodeType":"VariableDeclaration","scope":2965,"src":"1940:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1107","typeString":"contract IERC721"},"typeName":{"id":2925,"nodeType":"UserDefinedTypeName","pathNode":{"id":2924,"name":"IERC721","nameLocations":["1940:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1107,"src":"1940:7:12"},"referencedDeclaration":1107,"src":"1940:7:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1107","typeString":"contract IERC721"}},"visibility":"internal"}],"id":2930,"initialValue":{"arguments":[{"id":2928,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"1962:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2927,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"1954:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1107_$","typeString":"type(contract IERC721)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1954:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1107","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"1940:33:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2933,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"1997:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2931,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"1981:3:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1107","typeString":"contract IERC721"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1985:11:12","memberName":"getApproved","nodeType":"MemberAccess","referencedDeclaration":1096,"src":"1981:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":2937,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2017:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_NftMarketplace_$3213","typeString":"contract NftMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NftMarketplace_$3213","typeString":"contract NftMarketplace"}],"id":2936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2009:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:12","typeDescriptions":{}}},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2009:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1981:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2944,"nodeType":"IfStatement","src":"1978:93:12","trueBody":{"id":2943,"nodeType":"Block","src":"2024:47:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2940,"name":"NotApprovedForMarketplace","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"2038:25:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2038:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2942,"nodeType":"RevertStatement","src":"2031:34:12"}]}},{"expression":{"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2945,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"2075:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":2948,"indexExpression":{"id":2946,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"2086:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2075:22:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":2949,"indexExpression":{"id":2947,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"2098:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2075:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2951,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2117:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2124:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2128:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2124:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2950,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"2109:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Listing_$2794_storage_ptr_$","typeString":"type(struct NftMarketplace.Listing storage pointer)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2109:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"src":"2075:60:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"id":2956,"nodeType":"ExpressionStatement","src":"2075:60:12"},{"eventCall":{"arguments":[{"expression":{"id":2958,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2156:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2160:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2156:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2960,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"2168:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2961,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"2180:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2962,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"2189:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2957,"name":"ItemListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"2145:10:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2964,"nodeType":"EmitStatement","src":"2140:55:12"}]},"functionSelector":"89bfd38f","id":2966,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2904,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"1795:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2905,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"1807:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1816:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1820:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1816:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2908,"kind":"modifierInvocation","modifierName":{"id":2903,"name":"notListed","nameLocations":["1785:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2863,"src":"1785:9:12"},"nodeType":"ModifierInvocation","src":"1785:42:12"},{"arguments":[{"id":2910,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"1839:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"1851:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2912,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1860:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1864:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1860:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2914,"kind":"modifierInvocation","modifierName":{"id":2909,"name":"isOwner","nameLocations":["1831:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"1831:7:12"},"nodeType":"ModifierInvocation","src":"1831:40:12"}],"name":"listItem","nameLocation":"1692:8:12","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"nftAddress","nameLocation":"1714:10:12","nodeType":"VariableDeclaration","scope":2966,"src":"1706:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"tokenId","nameLocation":"1738:7:12","nodeType":"VariableDeclaration","scope":2966,"src":"1730:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"price","nameLocation":"1759:5:12","nodeType":"VariableDeclaration","scope":2966,"src":"1751:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1700:68:12"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[],"src":"1874:0:12"},"scope":3213,"src":"1683:517:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2993,"nodeType":"Block","src":"2260:148:12","statements":[{"assignments":[2974],"declarations":[{"constant":false,"id":2974,"mutability":"mutable","name":"listing","nameLocation":"2280:7:12","nodeType":"VariableDeclaration","scope":2993,"src":"2265:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":2973,"nodeType":"UserDefinedTypeName","pathNode":{"id":2972,"name":"Listing","nameLocations":["2265:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"2265:7:12"},"referencedDeclaration":2794,"src":"2265:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"id":2980,"initialValue":{"baseExpression":{"baseExpression":{"id":2975,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"2290:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":2977,"indexExpression":{"id":2976,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"2301:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:22:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":2979,"indexExpression":{"id":2978,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"2313:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2265:56:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2981,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"2329:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":2982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2337:5:12","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"2329:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2346:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2329:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2991,"nodeType":"IfStatement","src":"2326:72:12","trueBody":{"id":2990,"nodeType":"Block","src":"2349:49:12","statements":[{"errorCall":{"arguments":[{"id":2986,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"2372:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2987,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"2384:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2985,"name":"NotListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"2362:9:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2989,"nodeType":"RevertStatement","src":"2355:37:12"}]}},{"id":2992,"nodeType":"PlaceholderStatement","src":"2402:1:12"}]},"id":2994,"name":"isListed","nameLocation":"2214:8:12","nodeType":"ModifierDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2968,"mutability":"mutable","name":"nftAddress","nameLocation":"2231:10:12","nodeType":"VariableDeclaration","scope":2994,"src":"2223:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"2223:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"tokenId","nameLocation":"2251:7:12","nodeType":"VariableDeclaration","scope":2994,"src":"2243:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"2243:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2222:37:12"},"src":"2205:203:12","virtual":false,"visibility":"internal"},{"body":{"id":3026,"nodeType":"Block","src":"2565:105:12","statements":[{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2570:40:12","subExpression":{"components":[{"baseExpression":{"baseExpression":{"id":3011,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"2578:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3013,"indexExpression":{"id":3012,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"2589:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2578:22:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3015,"indexExpression":{"id":3014,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"2601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2578:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}}],"id":3016,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"2577:33:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3018,"nodeType":"ExpressionStatement","src":"2570:40:12"},{"eventCall":{"arguments":[{"expression":{"id":3020,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2633:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2637:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2633:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3022,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"2645:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3023,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"2657:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3019,"name":"ItemCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"2620:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2620:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3025,"nodeType":"EmitStatement","src":"2615:50:12"}]},"functionSelector":"b2ddee06","id":3027,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3001,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"2497:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3002,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"2509:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3003,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2518:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2522:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2518:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3005,"kind":"modifierInvocation","modifierName":{"id":3000,"name":"isOwner","nameLocations":["2489:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2895,"src":"2489:7:12"},"nodeType":"ModifierInvocation","src":"2489:40:12"},{"arguments":[{"id":3007,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"2542:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"2554:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3009,"kind":"modifierInvocation","modifierName":{"id":3006,"name":"isListed","nameLocations":["2533:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2994,"src":"2533:8:12"},"nodeType":"ModifierInvocation","src":"2533:29:12"}],"name":"cancelListing","nameLocation":"2423:13:12","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"nftAddress","nameLocation":"2445:10:12","nodeType":"VariableDeclaration","scope":3027,"src":"2437:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"2437:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"tokenId","nameLocation":"2465:7:12","nodeType":"VariableDeclaration","scope":3027,"src":"2457:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"2457:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2436:37:12"},"returnParameters":{"id":3010,"nodeType":"ParameterList","parameters":[],"src":"2565:0:12"},"scope":3213,"src":"2414:256:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3099,"nodeType":"Block","src":"2804:419:12","statements":[{"assignments":[3042],"declarations":[{"constant":false,"id":3042,"mutability":"mutable","name":"listedItem","nameLocation":"2824:10:12","nodeType":"VariableDeclaration","scope":3099,"src":"2809:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":3041,"nodeType":"UserDefinedTypeName","pathNode":{"id":3040,"name":"Listing","nameLocations":["2809:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"2809:7:12"},"referencedDeclaration":2794,"src":"2809:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"id":3048,"initialValue":{"baseExpression":{"baseExpression":{"id":3043,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"2837:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3045,"indexExpression":{"id":3044,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"2848:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2837:22:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3047,"indexExpression":{"id":3046,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"2860:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2837:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2809:59:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3049,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2876:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2880:5:12","memberName":"value","nodeType":"MemberAccess","src":"2876:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3051,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"2888:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2899:5:12","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"2888:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2876:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3062,"nodeType":"IfStatement","src":"2873:102:12","trueBody":{"id":3061,"nodeType":"Block","src":"2906:69:12","statements":[{"errorCall":{"arguments":[{"id":3055,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"2931:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3056,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"2943:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3057,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"2952:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2963:5:12","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"2952:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3054,"name":"PriceNotMet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2919:11:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2919:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3060,"nodeType":"RevertStatement","src":"2912:57:12"}]}},{"expression":{"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3063,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"2980:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3066,"indexExpression":{"expression":{"id":3064,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"2991:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3002:6:12","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"2991:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2980:29:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3067,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3013:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3017:5:12","memberName":"value","nodeType":"MemberAccess","src":"3013:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2980:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3070,"nodeType":"ExpressionStatement","src":"2980:42:12"},{"expression":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3027:39:12","subExpression":{"components":[{"baseExpression":{"baseExpression":{"id":3071,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"3034:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3073,"indexExpression":{"id":3072,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"3045:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3034:22:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3075,"indexExpression":{"id":3074,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3057:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3034:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}}],"id":3076,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"3033:33:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3078,"nodeType":"ExpressionStatement","src":"3027:39:12"},{"expression":{"arguments":[{"expression":{"id":3083,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3108:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3084,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3119:6:12","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"3108:17:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3085,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3127:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3131:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3127:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3087,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3139:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3080,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"3079:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3079,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"3071:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1107_$","typeString":"type(contract IERC721)"}},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3071:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$1107","typeString":"contract IERC721"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3091:16:12","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1062,"src":"3071:36:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3071:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3089,"nodeType":"ExpressionStatement","src":"3071:76:12"},{"eventCall":{"arguments":[{"expression":{"id":3091,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3168:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3172:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3168:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3093,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"3180:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3094,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"3192:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3095,"name":"listedItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3201:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing memory"}},"id":3096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3212:5:12","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"3201:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3090,"name":"ItemBought","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"3157:10:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3157:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"EmitStatement","src":"3152:66:12"}]},"functionSelector":"9f37092a","id":3100,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3034,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"2765:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3035,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"2777:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3036,"kind":"modifierInvocation","modifierName":{"id":3033,"name":"isListed","nameLocations":["2756:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2994,"src":"2756:8:12"},"nodeType":"ModifierInvocation","src":"2756:29:12"},{"id":3038,"kind":"modifierInvocation","modifierName":{"id":3037,"name":"nonReentrant","nameLocations":["2789:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"2789:12:12"},"nodeType":"ModifierInvocation","src":"2789:12:12"}],"name":"buyItem","nameLocation":"2685:7:12","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"nftAddress","nameLocation":"2701:10:12","nodeType":"VariableDeclaration","scope":3100,"src":"2693:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3031,"mutability":"mutable","name":"tokenId","nameLocation":"2721:7:12","nodeType":"VariableDeclaration","scope":3100,"src":"2713:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"2713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2692:37:12"},"returnParameters":{"id":3039,"nodeType":"ParameterList","parameters":[],"src":"2804:0:12"},"scope":3213,"src":"2676:547:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3138,"nodeType":"Block","src":"3364:184:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3113,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3372:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3384:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3372:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3120,"nodeType":"IfStatement","src":"3369:59:12","trueBody":{"id":3119,"nodeType":"Block","src":"3387:41:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3116,"name":"PriceMustBeAboveZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"3400:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3400:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3118,"nodeType":"RevertStatement","src":"3393:29:12"}]}},{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":3121,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"3432:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3124,"indexExpression":{"id":3122,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"3443:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3432:22:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3125,"indexExpression":{"id":3123,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"3455:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3432:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"id":3126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3464:5:12","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"3432:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3127,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3472:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3432:48:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"nodeType":"ExpressionStatement","src":"3432:48:12"},{"eventCall":{"arguments":[{"expression":{"id":3131,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3501:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3505:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3501:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3133,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"3513:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3134,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"3525:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3135,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"3534:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3130,"name":"ItemListed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"3490:10:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3137,"nodeType":"EmitStatement","src":"3485:58:12"}]},"functionSelector":"f772adf1","id":3139,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3109,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"3341:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3110,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"3353:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3111,"kind":"modifierInvocation","modifierName":{"id":3108,"name":"isListed","nameLocations":["3332:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2994,"src":"3332:8:12"},"nodeType":"ModifierInvocation","src":"3332:29:12"}],"name":"updateListing","nameLocation":"3235:13:12","nodeType":"FunctionDefinition","parameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"nftAddress","nameLocation":"3261:10:12","nodeType":"VariableDeclaration","scope":3139,"src":"3253:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3101,"name":"address","nodeType":"ElementaryTypeName","src":"3253:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"tokenId","nameLocation":"3284:7:12","nodeType":"VariableDeclaration","scope":3139,"src":"3276:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"3276:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3106,"mutability":"mutable","name":"newPrice","nameLocation":"3304:8:12","nodeType":"VariableDeclaration","scope":3139,"src":"3296:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"3296:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3248:68:12"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[],"src":"3364:0:12"},"scope":3213,"src":"3226:322:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3182,"nodeType":"Block","src":"3590:243:12","statements":[{"assignments":[3143],"declarations":[{"constant":false,"id":3143,"mutability":"mutable","name":"proceeds","nameLocation":"3603:8:12","nodeType":"VariableDeclaration","scope":3182,"src":"3595:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3142,"name":"uint256","nodeType":"ElementaryTypeName","src":"3595:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3148,"initialValue":{"baseExpression":{"id":3144,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3614:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3147,"indexExpression":{"expression":{"id":3145,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3625:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3629:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3625:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3614:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3595:41:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3644:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3644:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3156,"nodeType":"IfStatement","src":"3641:48:12","trueBody":{"id":3155,"nodeType":"Block","src":"3658:31:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3152,"name":"NoProceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"3671:10:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3671:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3154,"nodeType":"RevertStatement","src":"3664:19:12"}]}},{"expression":{"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3157,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"3693:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3160,"indexExpression":{"expression":{"id":3158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3704:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3708:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3704:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3718:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3693:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3163,"nodeType":"ExpressionStatement","src":"3693:26:12"},{"assignments":[3165,null],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"success","nameLocation":"3732:7:12","nodeType":"VariableDeclaration","scope":3182,"src":"3727:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3164,"name":"bool","nodeType":"ElementaryTypeName","src":"3727:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3176,"initialValue":{"arguments":[{"hexValue":"","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3785:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3168,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3752:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3756:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3752:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3744:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3166,"name":"address","nodeType":"ElementaryTypeName","src":"3744:8:12","stateMutability":"payable","typeDescriptions":{}}},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3764:4:12","memberName":"call","nodeType":"MemberAccess","src":"3744:24:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3172,"name":"proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"3775:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3744:40:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3726:62:12"},{"expression":{"arguments":[{"id":3178,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"3801:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":3179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3810:17:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":3177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3793:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3181,"nodeType":"ExpressionStatement","src":"3793:35:12"}]},"functionSelector":"9038e693","id":3183,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawProceeds","nameLocation":"3562:16:12","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[],"src":"3578:2:12"},"returnParameters":{"id":3141,"nodeType":"ParameterList","parameters":[],"src":"3590:0:12"},"scope":3213,"src":"3553:280:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3199,"nodeType":"Block","src":"3943:49:12","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3193,"name":"s_listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"3956:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing storage ref))"}},"id":3195,"indexExpression":{"id":3194,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"3967:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3956:22:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$2794_storage_$","typeString":"mapping(uint256 => struct NftMarketplace.Listing storage ref)"}},"id":3197,"indexExpression":{"id":3196,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"3979:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3956:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage","typeString":"struct NftMarketplace.Listing storage ref"}},"functionReturnParameters":3192,"id":3198,"nodeType":"Return","src":"3949:38:12"}]},"functionSelector":"88700d1c","id":3200,"implemented":true,"kind":"function","modifiers":[],"name":"getListing","nameLocation":"3845:10:12","nodeType":"FunctionDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"nftAddress","nameLocation":"3864:10:12","nodeType":"VariableDeclaration","scope":3200,"src":"3856:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3184,"name":"address","nodeType":"ElementaryTypeName","src":"3856:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"tokenId","nameLocation":"3884:7:12","nodeType":"VariableDeclaration","scope":3200,"src":"3876:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"3876:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3855:37:12"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3200,"src":"3925:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_memory_ptr","typeString":"struct NftMarketplace.Listing"},"typeName":{"id":3190,"nodeType":"UserDefinedTypeName","pathNode":{"id":3189,"name":"Listing","nameLocations":["3925:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2794,"src":"3925:7:12"},"referencedDeclaration":2794,"src":"3925:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$2794_storage_ptr","typeString":"struct NftMarketplace.Listing"}},"visibility":"internal"}],"src":"3924:16:12"},"scope":3213,"src":"3836:156:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3211,"nodeType":"Block","src":"4064:35:12","statements":[{"expression":{"baseExpression":{"id":3207,"name":"s_proceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"4076:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3209,"indexExpression":{"id":3208,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"4087:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4076:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3206,"id":3210,"nodeType":"Return","src":"4069:25:12"}]},"functionSelector":"30cfeda9","id":3212,"implemented":true,"kind":"function","modifiers":[],"name":"getProceeds","nameLocation":"4004:11:12","nodeType":"FunctionDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"seller","nameLocation":"4024:6:12","nodeType":"VariableDeclaration","scope":3212,"src":"4016:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3201,"name":"address","nodeType":"ElementaryTypeName","src":"4016:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4015:16:12"},"returnParameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3212,"src":"4055:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4055:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4054:9:12"},"scope":3213,"src":"3995:104:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3214,"src":"608:3494:12","usedErrors":[2761,2773,2779,2781,2783,2785,2787],"usedEvents":[2804,2812,2822]}],"src":"33:4069:12"},"id":12},"contracts/test/BasicNft.sol":{"ast":{"absolutePath":"contracts/test/BasicNft.sol","exportedSymbols":{"Address":[1482],"BasicNft":[3286],"Context":[1512],"ERC165":[1765],"ERC721":[991],"IERC165":[1777],"IERC721":[1107],"IERC721Metadata":[1152],"IERC721Receiver":[1125],"Math":[2643],"SignedMath":[2748],"Strings":[1741]},"id":3287,"nodeType":"SourceUnit","nodes":[{"id":3215,"literals":["solidity","^","0.8",".25"],"nodeType":"PragmaDirective","src":"34:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":992,"src":"62:57:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3217,"name":"ERC721","nameLocations":["144:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":991,"src":"144:6:13"},"id":3218,"nodeType":"InheritanceSpecifier","src":"144:6:13"}],"canonicalName":"BasicNft","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3286,"linearizedBaseContracts":[3286,991,1152,1107,1765,1777,1512],"name":"BasicNft","nameLocation":"132:8:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"78ce9035","id":3221,"mutability":"constant","name":"TOKEN_URI","nameLocation":"178:9:13","nodeType":"VariableDeclaration","scope":3286,"src":"155:124:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3219,"name":"string","nodeType":"ElementaryTypeName","src":"155:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6e","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"190:89:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5eed4f63f16dc8435ed5e031f22f9553384324656005540ac9ece13d0969af8","typeString":"literal_string \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\""},"value":"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json"},"visibility":"public"},{"constant":false,"id":3223,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"299:14:13","nodeType":"VariableDeclaration","scope":3286,"src":"283:30:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"ef1da42f89c42f48befa143007e6f5efd84a2d1cc3dc97c5edd2d3373220f66d","id":3227,"name":"DogMinted","nameLocation":"325:9:13","nodeType":"EventDefinition","parameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3225,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"351:7:13","nodeType":"VariableDeclaration","scope":3227,"src":"335:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3224,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"334:25:13"},"src":"319:41:13"},{"body":{"id":3238,"nodeType":"Block","src":"404:30:13","statements":[{"expression":{"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3234,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"410:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"427:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"410:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3237,"nodeType":"ExpressionStatement","src":"410:18:13"}]},"id":3239,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"446f676965","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"388:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d21699003d762b953d66adecbe4f97c4791cae2f281f96a4beb7efcb7bbcf6","typeString":"literal_string \"Dogie\""},"value":"Dogie"},{"hexValue":"444f47","id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"397:5:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5b35d1f7dc7cf1448a70456de4980702e1fdae4e057d31003c0e1e4b3c4bde2","typeString":"literal_string \"DOG\""},"value":"DOG"}],"id":3232,"kind":"baseConstructorSpecifier","modifierName":{"id":3229,"name":"ERC721","nameLocations":["381:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":991,"src":"381:6:13"},"nodeType":"ModifierInvocation","src":"381:22:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[],"src":"378:2:13"},"returnParameters":{"id":3233,"nodeType":"ParameterList","parameters":[],"src":"404:0:13"},"scope":3286,"src":"367:67:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3258,"nodeType":"Block","src":"465:122:13","statements":[{"expression":{"arguments":[{"expression":{"id":3243,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"480:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"484:6:13","memberName":"sender","nodeType":"MemberAccess","src":"480:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3245,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"492:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3242,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[559,588],"referencedDeclaration":559,"src":"470:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"470:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3247,"nodeType":"ExpressionStatement","src":"470:37:13"},{"eventCall":{"arguments":[{"id":3249,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"527:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3248,"name":"DogMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"517:9:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"517:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3251,"nodeType":"EmitStatement","src":"512:30:13"},{"expression":{"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3252,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"547:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3253,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"564:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"581:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"564:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"547:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3257,"nodeType":"ExpressionStatement","src":"547:35:13"}]},"functionSelector":"c2229fea","id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"448:7:13","nodeType":"FunctionDefinition","parameters":{"id":3240,"nodeType":"ParameterList","parameters":[],"src":"455:2:13"},"returnParameters":{"id":3241,"nodeType":"ParameterList","parameters":[],"src":"465:0:13"},"scope":3286,"src":"439:148:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[269],"body":{"id":3276,"nodeType":"Block","src":"672:107:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":3269,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"693:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3268,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"685:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"685:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"703:49:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""},"value":"ERC721Metadata: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","typeString":"literal_string \"ERC721Metadata: URI query for nonexistent token\""}],"id":3267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"677:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"677:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3273,"nodeType":"ExpressionStatement","src":"677:76:13"},{"expression":{"id":3274,"name":"TOKEN_URI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"765:9:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3266,"id":3275,"nodeType":"Return","src":"758:16:13"}]},"functionSelector":"c87b56dd","id":3277,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"601:8:13","nodeType":"FunctionDefinition","overrides":{"id":3263,"nodeType":"OverrideSpecifier","overrides":[],"src":"639:8:13"},"parameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"tokenId","nameLocation":"618:7:13","nodeType":"VariableDeclaration","scope":3277,"src":"610:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"610:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"609:17:13"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3277,"src":"657:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3264,"name":"string","nodeType":"ElementaryTypeName","src":"657:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"656:15:13"},"scope":3286,"src":"592:187:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3284,"nodeType":"Block","src":"841:31:13","statements":[{"expression":{"id":3282,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"853:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3281,"id":3283,"nodeType":"Return","src":"846:21:13"}]},"functionSelector":"6e02007d","id":3285,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"793:15:13","nodeType":"FunctionDefinition","parameters":{"id":3278,"nodeType":"ParameterList","parameters":[],"src":"808:2:13"},"returnParameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3285,"src":"832:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"832:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"831:9:13"},"scope":3286,"src":"784:88:13","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3287,"src":"123:752:13","usedErrors":[],"usedEvents":[1006,1015,1024,3227]}],"src":"34:841:13"},"id":13}},"contracts":{"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_127":{"entryPoint":null,"id":127,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":350,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":462,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":232,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":89,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":259,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":689,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":582,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":986,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":821,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":951,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":841,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1127,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":308,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":710,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":640,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1099,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":183,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":831,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1069,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":593,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":136,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":875,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":104,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":119,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":726,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1056,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":927,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":739,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":885,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":922,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:8576:14","nodeType":"YulBlock","src":"0:8576:14","statements":[{"body":{"nativeSrc":"47:35:14","nodeType":"YulBlock","src":"47:35:14","statements":[{"nativeSrc":"57:19:14","nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:14","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:14","nodeType":"YulIdentifier","src":"67:5:14"},"nativeSrc":"67:9:14","nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:14","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:14","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:14","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nativeSrc":"177:28:14","nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:14","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:14","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:14","nodeType":"YulIdentifier","src":"187:6:14"},"nativeSrc":"187:12:14","nodeType":"YulFunctionCall","src":"187:12:14"},"nativeSrc":"187:12:14","nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:14","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nativeSrc":"300:28:14","nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:14","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:14","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:14","nodeType":"YulIdentifier","src":"310:6:14"},"nativeSrc":"310:12:14","nodeType":"YulFunctionCall","src":"310:12:14"},"nativeSrc":"310:12:14","nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:14","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nativeSrc":"423:28:14","nodeType":"YulBlock","src":"423:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:14","nodeType":"YulLiteral","src":"440:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:14","nodeType":"YulLiteral","src":"443:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:14","nodeType":"YulIdentifier","src":"433:6:14"},"nativeSrc":"433:12:14","nodeType":"YulFunctionCall","src":"433:12:14"},"nativeSrc":"433:12:14","nodeType":"YulExpressionStatement","src":"433:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"334:117:14","nodeType":"YulFunctionDefinition","src":"334:117:14"},{"body":{"nativeSrc":"546:28:14","nodeType":"YulBlock","src":"546:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"563:1:14","nodeType":"YulLiteral","src":"563:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"566:1:14","nodeType":"YulLiteral","src":"566:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"556:6:14","nodeType":"YulIdentifier","src":"556:6:14"},"nativeSrc":"556:12:14","nodeType":"YulFunctionCall","src":"556:12:14"},"nativeSrc":"556:12:14","nodeType":"YulExpressionStatement","src":"556:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"457:117:14","nodeType":"YulFunctionDefinition","src":"457:117:14"},{"body":{"nativeSrc":"628:54:14","nodeType":"YulBlock","src":"628:54:14","statements":[{"nativeSrc":"638:38:14","nodeType":"YulAssignment","src":"638:38:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"656:5:14","nodeType":"YulIdentifier","src":"656:5:14"},{"kind":"number","nativeSrc":"663:2:14","nodeType":"YulLiteral","src":"663:2:14","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"652:3:14","nodeType":"YulIdentifier","src":"652:3:14"},"nativeSrc":"652:14:14","nodeType":"YulFunctionCall","src":"652:14:14"},{"arguments":[{"kind":"number","nativeSrc":"672:2:14","nodeType":"YulLiteral","src":"672:2:14","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"668:3:14","nodeType":"YulIdentifier","src":"668:3:14"},"nativeSrc":"668:7:14","nodeType":"YulFunctionCall","src":"668:7:14"}],"functionName":{"name":"and","nativeSrc":"648:3:14","nodeType":"YulIdentifier","src":"648:3:14"},"nativeSrc":"648:28:14","nodeType":"YulFunctionCall","src":"648:28:14"},"variableNames":[{"name":"result","nativeSrc":"638:6:14","nodeType":"YulIdentifier","src":"638:6:14"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"580:102:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"611:5:14","nodeType":"YulTypedName","src":"611:5:14","type":""}],"returnVariables":[{"name":"result","nativeSrc":"621:6:14","nodeType":"YulTypedName","src":"621:6:14","type":""}],"src":"580:102:14"},{"body":{"nativeSrc":"716:152:14","nodeType":"YulBlock","src":"716:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"733:1:14","nodeType":"YulLiteral","src":"733:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"736:77:14","nodeType":"YulLiteral","src":"736:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"726:6:14","nodeType":"YulIdentifier","src":"726:6:14"},"nativeSrc":"726:88:14","nodeType":"YulFunctionCall","src":"726:88:14"},"nativeSrc":"726:88:14","nodeType":"YulExpressionStatement","src":"726:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"830:1:14","nodeType":"YulLiteral","src":"830:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"833:4:14","nodeType":"YulLiteral","src":"833:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"823:6:14","nodeType":"YulIdentifier","src":"823:6:14"},"nativeSrc":"823:15:14","nodeType":"YulFunctionCall","src":"823:15:14"},"nativeSrc":"823:15:14","nodeType":"YulExpressionStatement","src":"823:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"854:1:14","nodeType":"YulLiteral","src":"854:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"857:4:14","nodeType":"YulLiteral","src":"857:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"847:6:14","nodeType":"YulIdentifier","src":"847:6:14"},"nativeSrc":"847:15:14","nodeType":"YulFunctionCall","src":"847:15:14"},"nativeSrc":"847:15:14","nodeType":"YulExpressionStatement","src":"847:15:14"}]},"name":"panic_error_0x41","nativeSrc":"688:180:14","nodeType":"YulFunctionDefinition","src":"688:180:14"},{"body":{"nativeSrc":"917:238:14","nodeType":"YulBlock","src":"917:238:14","statements":[{"nativeSrc":"927:58:14","nodeType":"YulVariableDeclaration","src":"927:58:14","value":{"arguments":[{"name":"memPtr","nativeSrc":"949:6:14","nodeType":"YulIdentifier","src":"949:6:14"},{"arguments":[{"name":"size","nativeSrc":"979:4:14","nodeType":"YulIdentifier","src":"979:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"957:21:14","nodeType":"YulIdentifier","src":"957:21:14"},"nativeSrc":"957:27:14","nodeType":"YulFunctionCall","src":"957:27:14"}],"functionName":{"name":"add","nativeSrc":"945:3:14","nodeType":"YulIdentifier","src":"945:3:14"},"nativeSrc":"945:40:14","nodeType":"YulFunctionCall","src":"945:40:14"},"variables":[{"name":"newFreePtr","nativeSrc":"931:10:14","nodeType":"YulTypedName","src":"931:10:14","type":""}]},{"body":{"nativeSrc":"1096:22:14","nodeType":"YulBlock","src":"1096:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1098:16:14","nodeType":"YulIdentifier","src":"1098:16:14"},"nativeSrc":"1098:18:14","nodeType":"YulFunctionCall","src":"1098:18:14"},"nativeSrc":"1098:18:14","nodeType":"YulExpressionStatement","src":"1098:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1039:10:14","nodeType":"YulIdentifier","src":"1039:10:14"},{"kind":"number","nativeSrc":"1051:18:14","nodeType":"YulLiteral","src":"1051:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1036:2:14","nodeType":"YulIdentifier","src":"1036:2:14"},"nativeSrc":"1036:34:14","nodeType":"YulFunctionCall","src":"1036:34:14"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1075:10:14","nodeType":"YulIdentifier","src":"1075:10:14"},{"name":"memPtr","nativeSrc":"1087:6:14","nodeType":"YulIdentifier","src":"1087:6:14"}],"functionName":{"name":"lt","nativeSrc":"1072:2:14","nodeType":"YulIdentifier","src":"1072:2:14"},"nativeSrc":"1072:22:14","nodeType":"YulFunctionCall","src":"1072:22:14"}],"functionName":{"name":"or","nativeSrc":"1033:2:14","nodeType":"YulIdentifier","src":"1033:2:14"},"nativeSrc":"1033:62:14","nodeType":"YulFunctionCall","src":"1033:62:14"},"nativeSrc":"1030:88:14","nodeType":"YulIf","src":"1030:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1134:2:14","nodeType":"YulLiteral","src":"1134:2:14","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1138:10:14","nodeType":"YulIdentifier","src":"1138:10:14"}],"functionName":{"name":"mstore","nativeSrc":"1127:6:14","nodeType":"YulIdentifier","src":"1127:6:14"},"nativeSrc":"1127:22:14","nodeType":"YulFunctionCall","src":"1127:22:14"},"nativeSrc":"1127:22:14","nodeType":"YulExpressionStatement","src":"1127:22:14"}]},"name":"finalize_allocation","nativeSrc":"874:281:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"903:6:14","nodeType":"YulTypedName","src":"903:6:14","type":""},{"name":"size","nativeSrc":"911:4:14","nodeType":"YulTypedName","src":"911:4:14","type":""}],"src":"874:281:14"},{"body":{"nativeSrc":"1202:88:14","nodeType":"YulBlock","src":"1202:88:14","statements":[{"nativeSrc":"1212:30:14","nodeType":"YulAssignment","src":"1212:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1222:18:14","nodeType":"YulIdentifier","src":"1222:18:14"},"nativeSrc":"1222:20:14","nodeType":"YulFunctionCall","src":"1222:20:14"},"variableNames":[{"name":"memPtr","nativeSrc":"1212:6:14","nodeType":"YulIdentifier","src":"1212:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1271:6:14","nodeType":"YulIdentifier","src":"1271:6:14"},{"name":"size","nativeSrc":"1279:4:14","nodeType":"YulIdentifier","src":"1279:4:14"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1251:19:14","nodeType":"YulIdentifier","src":"1251:19:14"},"nativeSrc":"1251:33:14","nodeType":"YulFunctionCall","src":"1251:33:14"},"nativeSrc":"1251:33:14","nodeType":"YulExpressionStatement","src":"1251:33:14"}]},"name":"allocate_memory","nativeSrc":"1161:129:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1186:4:14","nodeType":"YulTypedName","src":"1186:4:14","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1195:6:14","nodeType":"YulTypedName","src":"1195:6:14","type":""}],"src":"1161:129:14"},{"body":{"nativeSrc":"1363:241:14","nodeType":"YulBlock","src":"1363:241:14","statements":[{"body":{"nativeSrc":"1468:22:14","nodeType":"YulBlock","src":"1468:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1470:16:14","nodeType":"YulIdentifier","src":"1470:16:14"},"nativeSrc":"1470:18:14","nodeType":"YulFunctionCall","src":"1470:18:14"},"nativeSrc":"1470:18:14","nodeType":"YulExpressionStatement","src":"1470:18:14"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1440:6:14","nodeType":"YulIdentifier","src":"1440:6:14"},{"kind":"number","nativeSrc":"1448:18:14","nodeType":"YulLiteral","src":"1448:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1437:2:14","nodeType":"YulIdentifier","src":"1437:2:14"},"nativeSrc":"1437:30:14","nodeType":"YulFunctionCall","src":"1437:30:14"},"nativeSrc":"1434:56:14","nodeType":"YulIf","src":"1434:56:14"},{"nativeSrc":"1500:37:14","nodeType":"YulAssignment","src":"1500:37:14","value":{"arguments":[{"name":"length","nativeSrc":"1530:6:14","nodeType":"YulIdentifier","src":"1530:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1508:21:14","nodeType":"YulIdentifier","src":"1508:21:14"},"nativeSrc":"1508:29:14","nodeType":"YulFunctionCall","src":"1508:29:14"},"variableNames":[{"name":"size","nativeSrc":"1500:4:14","nodeType":"YulIdentifier","src":"1500:4:14"}]},{"nativeSrc":"1574:23:14","nodeType":"YulAssignment","src":"1574:23:14","value":{"arguments":[{"name":"size","nativeSrc":"1586:4:14","nodeType":"YulIdentifier","src":"1586:4:14"},{"kind":"number","nativeSrc":"1592:4:14","nodeType":"YulLiteral","src":"1592:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1582:3:14","nodeType":"YulIdentifier","src":"1582:3:14"},"nativeSrc":"1582:15:14","nodeType":"YulFunctionCall","src":"1582:15:14"},"variableNames":[{"name":"size","nativeSrc":"1574:4:14","nodeType":"YulIdentifier","src":"1574:4:14"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1296:308:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1347:6:14","nodeType":"YulTypedName","src":"1347:6:14","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1358:4:14","nodeType":"YulTypedName","src":"1358:4:14","type":""}],"src":"1296:308:14"},{"body":{"nativeSrc":"1672:186:14","nodeType":"YulBlock","src":"1672:186:14","statements":[{"nativeSrc":"1683:10:14","nodeType":"YulVariableDeclaration","src":"1683:10:14","value":{"kind":"number","nativeSrc":"1692:1:14","nodeType":"YulLiteral","src":"1692:1:14","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1687:1:14","nodeType":"YulTypedName","src":"1687:1:14","type":""}]},{"body":{"nativeSrc":"1752:63:14","nodeType":"YulBlock","src":"1752:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1777:3:14","nodeType":"YulIdentifier","src":"1777:3:14"},{"name":"i","nativeSrc":"1782:1:14","nodeType":"YulIdentifier","src":"1782:1:14"}],"functionName":{"name":"add","nativeSrc":"1773:3:14","nodeType":"YulIdentifier","src":"1773:3:14"},"nativeSrc":"1773:11:14","nodeType":"YulFunctionCall","src":"1773:11:14"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1796:3:14","nodeType":"YulIdentifier","src":"1796:3:14"},{"name":"i","nativeSrc":"1801:1:14","nodeType":"YulIdentifier","src":"1801:1:14"}],"functionName":{"name":"add","nativeSrc":"1792:3:14","nodeType":"YulIdentifier","src":"1792:3:14"},"nativeSrc":"1792:11:14","nodeType":"YulFunctionCall","src":"1792:11:14"}],"functionName":{"name":"mload","nativeSrc":"1786:5:14","nodeType":"YulIdentifier","src":"1786:5:14"},"nativeSrc":"1786:18:14","nodeType":"YulFunctionCall","src":"1786:18:14"}],"functionName":{"name":"mstore","nativeSrc":"1766:6:14","nodeType":"YulIdentifier","src":"1766:6:14"},"nativeSrc":"1766:39:14","nodeType":"YulFunctionCall","src":"1766:39:14"},"nativeSrc":"1766:39:14","nodeType":"YulExpressionStatement","src":"1766:39:14"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1713:1:14","nodeType":"YulIdentifier","src":"1713:1:14"},{"name":"length","nativeSrc":"1716:6:14","nodeType":"YulIdentifier","src":"1716:6:14"}],"functionName":{"name":"lt","nativeSrc":"1710:2:14","nodeType":"YulIdentifier","src":"1710:2:14"},"nativeSrc":"1710:13:14","nodeType":"YulFunctionCall","src":"1710:13:14"},"nativeSrc":"1702:113:14","nodeType":"YulForLoop","post":{"nativeSrc":"1724:19:14","nodeType":"YulBlock","src":"1724:19:14","statements":[{"nativeSrc":"1726:15:14","nodeType":"YulAssignment","src":"1726:15:14","value":{"arguments":[{"name":"i","nativeSrc":"1735:1:14","nodeType":"YulIdentifier","src":"1735:1:14"},{"kind":"number","nativeSrc":"1738:2:14","nodeType":"YulLiteral","src":"1738:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1731:3:14","nodeType":"YulIdentifier","src":"1731:3:14"},"nativeSrc":"1731:10:14","nodeType":"YulFunctionCall","src":"1731:10:14"},"variableNames":[{"name":"i","nativeSrc":"1726:1:14","nodeType":"YulIdentifier","src":"1726:1:14"}]}]},"pre":{"nativeSrc":"1706:3:14","nodeType":"YulBlock","src":"1706:3:14","statements":[]},"src":"1702:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1835:3:14","nodeType":"YulIdentifier","src":"1835:3:14"},{"name":"length","nativeSrc":"1840:6:14","nodeType":"YulIdentifier","src":"1840:6:14"}],"functionName":{"name":"add","nativeSrc":"1831:3:14","nodeType":"YulIdentifier","src":"1831:3:14"},"nativeSrc":"1831:16:14","nodeType":"YulFunctionCall","src":"1831:16:14"},{"kind":"number","nativeSrc":"1849:1:14","nodeType":"YulLiteral","src":"1849:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1824:6:14","nodeType":"YulIdentifier","src":"1824:6:14"},"nativeSrc":"1824:27:14","nodeType":"YulFunctionCall","src":"1824:27:14"},"nativeSrc":"1824:27:14","nodeType":"YulExpressionStatement","src":"1824:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1610:248:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1654:3:14","nodeType":"YulTypedName","src":"1654:3:14","type":""},{"name":"dst","nativeSrc":"1659:3:14","nodeType":"YulTypedName","src":"1659:3:14","type":""},{"name":"length","nativeSrc":"1664:6:14","nodeType":"YulTypedName","src":"1664:6:14","type":""}],"src":"1610:248:14"},{"body":{"nativeSrc":"1959:339:14","nodeType":"YulBlock","src":"1959:339:14","statements":[{"nativeSrc":"1969:75:14","nodeType":"YulAssignment","src":"1969:75:14","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2036:6:14","nodeType":"YulIdentifier","src":"2036:6:14"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1994:41:14","nodeType":"YulIdentifier","src":"1994:41:14"},"nativeSrc":"1994:49:14","nodeType":"YulFunctionCall","src":"1994:49:14"}],"functionName":{"name":"allocate_memory","nativeSrc":"1978:15:14","nodeType":"YulIdentifier","src":"1978:15:14"},"nativeSrc":"1978:66:14","nodeType":"YulFunctionCall","src":"1978:66:14"},"variableNames":[{"name":"array","nativeSrc":"1969:5:14","nodeType":"YulIdentifier","src":"1969:5:14"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2060:5:14","nodeType":"YulIdentifier","src":"2060:5:14"},{"name":"length","nativeSrc":"2067:6:14","nodeType":"YulIdentifier","src":"2067:6:14"}],"functionName":{"name":"mstore","nativeSrc":"2053:6:14","nodeType":"YulIdentifier","src":"2053:6:14"},"nativeSrc":"2053:21:14","nodeType":"YulFunctionCall","src":"2053:21:14"},"nativeSrc":"2053:21:14","nodeType":"YulExpressionStatement","src":"2053:21:14"},{"nativeSrc":"2083:27:14","nodeType":"YulVariableDeclaration","src":"2083:27:14","value":{"arguments":[{"name":"array","nativeSrc":"2098:5:14","nodeType":"YulIdentifier","src":"2098:5:14"},{"kind":"number","nativeSrc":"2105:4:14","nodeType":"YulLiteral","src":"2105:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2094:3:14","nodeType":"YulIdentifier","src":"2094:3:14"},"nativeSrc":"2094:16:14","nodeType":"YulFunctionCall","src":"2094:16:14"},"variables":[{"name":"dst","nativeSrc":"2087:3:14","nodeType":"YulTypedName","src":"2087:3:14","type":""}]},{"body":{"nativeSrc":"2148:83:14","nodeType":"YulBlock","src":"2148:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2150:77:14","nodeType":"YulIdentifier","src":"2150:77:14"},"nativeSrc":"2150:79:14","nodeType":"YulFunctionCall","src":"2150:79:14"},"nativeSrc":"2150:79:14","nodeType":"YulExpressionStatement","src":"2150:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2129:3:14","nodeType":"YulIdentifier","src":"2129:3:14"},{"name":"length","nativeSrc":"2134:6:14","nodeType":"YulIdentifier","src":"2134:6:14"}],"functionName":{"name":"add","nativeSrc":"2125:3:14","nodeType":"YulIdentifier","src":"2125:3:14"},"nativeSrc":"2125:16:14","nodeType":"YulFunctionCall","src":"2125:16:14"},{"name":"end","nativeSrc":"2143:3:14","nodeType":"YulIdentifier","src":"2143:3:14"}],"functionName":{"name":"gt","nativeSrc":"2122:2:14","nodeType":"YulIdentifier","src":"2122:2:14"},"nativeSrc":"2122:25:14","nodeType":"YulFunctionCall","src":"2122:25:14"},"nativeSrc":"2119:112:14","nodeType":"YulIf","src":"2119:112:14"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2275:3:14","nodeType":"YulIdentifier","src":"2275:3:14"},{"name":"dst","nativeSrc":"2280:3:14","nodeType":"YulIdentifier","src":"2280:3:14"},{"name":"length","nativeSrc":"2285:6:14","nodeType":"YulIdentifier","src":"2285:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2240:34:14","nodeType":"YulIdentifier","src":"2240:34:14"},"nativeSrc":"2240:52:14","nodeType":"YulFunctionCall","src":"2240:52:14"},"nativeSrc":"2240:52:14","nodeType":"YulExpressionStatement","src":"2240:52:14"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"1864:434:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1932:3:14","nodeType":"YulTypedName","src":"1932:3:14","type":""},{"name":"length","nativeSrc":"1937:6:14","nodeType":"YulTypedName","src":"1937:6:14","type":""},{"name":"end","nativeSrc":"1945:3:14","nodeType":"YulTypedName","src":"1945:3:14","type":""}],"returnVariables":[{"name":"array","nativeSrc":"1953:5:14","nodeType":"YulTypedName","src":"1953:5:14","type":""}],"src":"1864:434:14"},{"body":{"nativeSrc":"2391:282:14","nodeType":"YulBlock","src":"2391:282:14","statements":[{"body":{"nativeSrc":"2440:83:14","nodeType":"YulBlock","src":"2440:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2442:77:14","nodeType":"YulIdentifier","src":"2442:77:14"},"nativeSrc":"2442:79:14","nodeType":"YulFunctionCall","src":"2442:79:14"},"nativeSrc":"2442:79:14","nodeType":"YulExpressionStatement","src":"2442:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2419:6:14","nodeType":"YulIdentifier","src":"2419:6:14"},{"kind":"number","nativeSrc":"2427:4:14","nodeType":"YulLiteral","src":"2427:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2415:3:14","nodeType":"YulIdentifier","src":"2415:3:14"},"nativeSrc":"2415:17:14","nodeType":"YulFunctionCall","src":"2415:17:14"},{"name":"end","nativeSrc":"2434:3:14","nodeType":"YulIdentifier","src":"2434:3:14"}],"functionName":{"name":"slt","nativeSrc":"2411:3:14","nodeType":"YulIdentifier","src":"2411:3:14"},"nativeSrc":"2411:27:14","nodeType":"YulFunctionCall","src":"2411:27:14"}],"functionName":{"name":"iszero","nativeSrc":"2404:6:14","nodeType":"YulIdentifier","src":"2404:6:14"},"nativeSrc":"2404:35:14","nodeType":"YulFunctionCall","src":"2404:35:14"},"nativeSrc":"2401:122:14","nodeType":"YulIf","src":"2401:122:14"},{"nativeSrc":"2532:27:14","nodeType":"YulVariableDeclaration","src":"2532:27:14","value":{"arguments":[{"name":"offset","nativeSrc":"2552:6:14","nodeType":"YulIdentifier","src":"2552:6:14"}],"functionName":{"name":"mload","nativeSrc":"2546:5:14","nodeType":"YulIdentifier","src":"2546:5:14"},"nativeSrc":"2546:13:14","nodeType":"YulFunctionCall","src":"2546:13:14"},"variables":[{"name":"length","nativeSrc":"2536:6:14","nodeType":"YulTypedName","src":"2536:6:14","type":""}]},{"nativeSrc":"2568:99:14","nodeType":"YulAssignment","src":"2568:99:14","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2640:6:14","nodeType":"YulIdentifier","src":"2640:6:14"},{"kind":"number","nativeSrc":"2648:4:14","nodeType":"YulLiteral","src":"2648:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2636:3:14","nodeType":"YulIdentifier","src":"2636:3:14"},"nativeSrc":"2636:17:14","nodeType":"YulFunctionCall","src":"2636:17:14"},{"name":"length","nativeSrc":"2655:6:14","nodeType":"YulIdentifier","src":"2655:6:14"},{"name":"end","nativeSrc":"2663:3:14","nodeType":"YulIdentifier","src":"2663:3:14"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2577:58:14","nodeType":"YulIdentifier","src":"2577:58:14"},"nativeSrc":"2577:90:14","nodeType":"YulFunctionCall","src":"2577:90:14"},"variableNames":[{"name":"array","nativeSrc":"2568:5:14","nodeType":"YulIdentifier","src":"2568:5:14"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2318:355:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2369:6:14","nodeType":"YulTypedName","src":"2369:6:14","type":""},{"name":"end","nativeSrc":"2377:3:14","nodeType":"YulTypedName","src":"2377:3:14","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2385:5:14","nodeType":"YulTypedName","src":"2385:5:14","type":""}],"src":"2318:355:14"},{"body":{"nativeSrc":"2793:739:14","nodeType":"YulBlock","src":"2793:739:14","statements":[{"body":{"nativeSrc":"2839:83:14","nodeType":"YulBlock","src":"2839:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2841:77:14","nodeType":"YulIdentifier","src":"2841:77:14"},"nativeSrc":"2841:79:14","nodeType":"YulFunctionCall","src":"2841:79:14"},"nativeSrc":"2841:79:14","nodeType":"YulExpressionStatement","src":"2841:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2814:7:14","nodeType":"YulIdentifier","src":"2814:7:14"},{"name":"headStart","nativeSrc":"2823:9:14","nodeType":"YulIdentifier","src":"2823:9:14"}],"functionName":{"name":"sub","nativeSrc":"2810:3:14","nodeType":"YulIdentifier","src":"2810:3:14"},"nativeSrc":"2810:23:14","nodeType":"YulFunctionCall","src":"2810:23:14"},{"kind":"number","nativeSrc":"2835:2:14","nodeType":"YulLiteral","src":"2835:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2806:3:14","nodeType":"YulIdentifier","src":"2806:3:14"},"nativeSrc":"2806:32:14","nodeType":"YulFunctionCall","src":"2806:32:14"},"nativeSrc":"2803:119:14","nodeType":"YulIf","src":"2803:119:14"},{"nativeSrc":"2932:291:14","nodeType":"YulBlock","src":"2932:291:14","statements":[{"nativeSrc":"2947:38:14","nodeType":"YulVariableDeclaration","src":"2947:38:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2971:9:14","nodeType":"YulIdentifier","src":"2971:9:14"},{"kind":"number","nativeSrc":"2982:1:14","nodeType":"YulLiteral","src":"2982:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2967:3:14","nodeType":"YulIdentifier","src":"2967:3:14"},"nativeSrc":"2967:17:14","nodeType":"YulFunctionCall","src":"2967:17:14"}],"functionName":{"name":"mload","nativeSrc":"2961:5:14","nodeType":"YulIdentifier","src":"2961:5:14"},"nativeSrc":"2961:24:14","nodeType":"YulFunctionCall","src":"2961:24:14"},"variables":[{"name":"offset","nativeSrc":"2951:6:14","nodeType":"YulTypedName","src":"2951:6:14","type":""}]},{"body":{"nativeSrc":"3032:83:14","nodeType":"YulBlock","src":"3032:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3034:77:14","nodeType":"YulIdentifier","src":"3034:77:14"},"nativeSrc":"3034:79:14","nodeType":"YulFunctionCall","src":"3034:79:14"},"nativeSrc":"3034:79:14","nodeType":"YulExpressionStatement","src":"3034:79:14"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3004:6:14","nodeType":"YulIdentifier","src":"3004:6:14"},{"kind":"number","nativeSrc":"3012:18:14","nodeType":"YulLiteral","src":"3012:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3001:2:14","nodeType":"YulIdentifier","src":"3001:2:14"},"nativeSrc":"3001:30:14","nodeType":"YulFunctionCall","src":"3001:30:14"},"nativeSrc":"2998:117:14","nodeType":"YulIf","src":"2998:117:14"},{"nativeSrc":"3129:84:14","nodeType":"YulAssignment","src":"3129:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3185:9:14","nodeType":"YulIdentifier","src":"3185:9:14"},{"name":"offset","nativeSrc":"3196:6:14","nodeType":"YulIdentifier","src":"3196:6:14"}],"functionName":{"name":"add","nativeSrc":"3181:3:14","nodeType":"YulIdentifier","src":"3181:3:14"},"nativeSrc":"3181:22:14","nodeType":"YulFunctionCall","src":"3181:22:14"},{"name":"dataEnd","nativeSrc":"3205:7:14","nodeType":"YulIdentifier","src":"3205:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3139:41:14","nodeType":"YulIdentifier","src":"3139:41:14"},"nativeSrc":"3139:74:14","nodeType":"YulFunctionCall","src":"3139:74:14"},"variableNames":[{"name":"value0","nativeSrc":"3129:6:14","nodeType":"YulIdentifier","src":"3129:6:14"}]}]},{"nativeSrc":"3233:292:14","nodeType":"YulBlock","src":"3233:292:14","statements":[{"nativeSrc":"3248:39:14","nodeType":"YulVariableDeclaration","src":"3248:39:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3272:9:14","nodeType":"YulIdentifier","src":"3272:9:14"},{"kind":"number","nativeSrc":"3283:2:14","nodeType":"YulLiteral","src":"3283:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3268:3:14","nodeType":"YulIdentifier","src":"3268:3:14"},"nativeSrc":"3268:18:14","nodeType":"YulFunctionCall","src":"3268:18:14"}],"functionName":{"name":"mload","nativeSrc":"3262:5:14","nodeType":"YulIdentifier","src":"3262:5:14"},"nativeSrc":"3262:25:14","nodeType":"YulFunctionCall","src":"3262:25:14"},"variables":[{"name":"offset","nativeSrc":"3252:6:14","nodeType":"YulTypedName","src":"3252:6:14","type":""}]},{"body":{"nativeSrc":"3334:83:14","nodeType":"YulBlock","src":"3334:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3336:77:14","nodeType":"YulIdentifier","src":"3336:77:14"},"nativeSrc":"3336:79:14","nodeType":"YulFunctionCall","src":"3336:79:14"},"nativeSrc":"3336:79:14","nodeType":"YulExpressionStatement","src":"3336:79:14"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3306:6:14","nodeType":"YulIdentifier","src":"3306:6:14"},{"kind":"number","nativeSrc":"3314:18:14","nodeType":"YulLiteral","src":"3314:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3303:2:14","nodeType":"YulIdentifier","src":"3303:2:14"},"nativeSrc":"3303:30:14","nodeType":"YulFunctionCall","src":"3303:30:14"},"nativeSrc":"3300:117:14","nodeType":"YulIf","src":"3300:117:14"},{"nativeSrc":"3431:84:14","nodeType":"YulAssignment","src":"3431:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3487:9:14","nodeType":"YulIdentifier","src":"3487:9:14"},{"name":"offset","nativeSrc":"3498:6:14","nodeType":"YulIdentifier","src":"3498:6:14"}],"functionName":{"name":"add","nativeSrc":"3483:3:14","nodeType":"YulIdentifier","src":"3483:3:14"},"nativeSrc":"3483:22:14","nodeType":"YulFunctionCall","src":"3483:22:14"},{"name":"dataEnd","nativeSrc":"3507:7:14","nodeType":"YulIdentifier","src":"3507:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3441:41:14","nodeType":"YulIdentifier","src":"3441:41:14"},"nativeSrc":"3441:74:14","nodeType":"YulFunctionCall","src":"3441:74:14"},"variableNames":[{"name":"value1","nativeSrc":"3431:6:14","nodeType":"YulIdentifier","src":"3431:6:14"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nativeSrc":"2679:853:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2755:9:14","nodeType":"YulTypedName","src":"2755:9:14","type":""},{"name":"dataEnd","nativeSrc":"2766:7:14","nodeType":"YulTypedName","src":"2766:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2778:6:14","nodeType":"YulTypedName","src":"2778:6:14","type":""},{"name":"value1","nativeSrc":"2786:6:14","nodeType":"YulTypedName","src":"2786:6:14","type":""}],"src":"2679:853:14"},{"body":{"nativeSrc":"3597:40:14","nodeType":"YulBlock","src":"3597:40:14","statements":[{"nativeSrc":"3608:22:14","nodeType":"YulAssignment","src":"3608:22:14","value":{"arguments":[{"name":"value","nativeSrc":"3624:5:14","nodeType":"YulIdentifier","src":"3624:5:14"}],"functionName":{"name":"mload","nativeSrc":"3618:5:14","nodeType":"YulIdentifier","src":"3618:5:14"},"nativeSrc":"3618:12:14","nodeType":"YulFunctionCall","src":"3618:12:14"},"variableNames":[{"name":"length","nativeSrc":"3608:6:14","nodeType":"YulIdentifier","src":"3608:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"3538:99:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:14","nodeType":"YulTypedName","src":"3580:5:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3590:6:14","nodeType":"YulTypedName","src":"3590:6:14","type":""}],"src":"3538:99:14"},{"body":{"nativeSrc":"3671:152:14","nodeType":"YulBlock","src":"3671:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3688:1:14","nodeType":"YulLiteral","src":"3688:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"3691:77:14","nodeType":"YulLiteral","src":"3691:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3681:6:14","nodeType":"YulIdentifier","src":"3681:6:14"},"nativeSrc":"3681:88:14","nodeType":"YulFunctionCall","src":"3681:88:14"},"nativeSrc":"3681:88:14","nodeType":"YulExpressionStatement","src":"3681:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3785:1:14","nodeType":"YulLiteral","src":"3785:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"3788:4:14","nodeType":"YulLiteral","src":"3788:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"3778:6:14","nodeType":"YulIdentifier","src":"3778:6:14"},"nativeSrc":"3778:15:14","nodeType":"YulFunctionCall","src":"3778:15:14"},"nativeSrc":"3778:15:14","nodeType":"YulExpressionStatement","src":"3778:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3809:1:14","nodeType":"YulLiteral","src":"3809:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"3812:4:14","nodeType":"YulLiteral","src":"3812:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3802:6:14","nodeType":"YulIdentifier","src":"3802:6:14"},"nativeSrc":"3802:15:14","nodeType":"YulFunctionCall","src":"3802:15:14"},"nativeSrc":"3802:15:14","nodeType":"YulExpressionStatement","src":"3802:15:14"}]},"name":"panic_error_0x22","nativeSrc":"3643:180:14","nodeType":"YulFunctionDefinition","src":"3643:180:14"},{"body":{"nativeSrc":"3880:269:14","nodeType":"YulBlock","src":"3880:269:14","statements":[{"nativeSrc":"3890:22:14","nodeType":"YulAssignment","src":"3890:22:14","value":{"arguments":[{"name":"data","nativeSrc":"3904:4:14","nodeType":"YulIdentifier","src":"3904:4:14"},{"kind":"number","nativeSrc":"3910:1:14","nodeType":"YulLiteral","src":"3910:1:14","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"3900:3:14","nodeType":"YulIdentifier","src":"3900:3:14"},"nativeSrc":"3900:12:14","nodeType":"YulFunctionCall","src":"3900:12:14"},"variableNames":[{"name":"length","nativeSrc":"3890:6:14","nodeType":"YulIdentifier","src":"3890:6:14"}]},{"nativeSrc":"3921:38:14","nodeType":"YulVariableDeclaration","src":"3921:38:14","value":{"arguments":[{"name":"data","nativeSrc":"3951:4:14","nodeType":"YulIdentifier","src":"3951:4:14"},{"kind":"number","nativeSrc":"3957:1:14","nodeType":"YulLiteral","src":"3957:1:14","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"3947:3:14","nodeType":"YulIdentifier","src":"3947:3:14"},"nativeSrc":"3947:12:14","nodeType":"YulFunctionCall","src":"3947:12:14"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"3925:18:14","nodeType":"YulTypedName","src":"3925:18:14","type":""}]},{"body":{"nativeSrc":"3998:51:14","nodeType":"YulBlock","src":"3998:51:14","statements":[{"nativeSrc":"4012:27:14","nodeType":"YulAssignment","src":"4012:27:14","value":{"arguments":[{"name":"length","nativeSrc":"4026:6:14","nodeType":"YulIdentifier","src":"4026:6:14"},{"kind":"number","nativeSrc":"4034:4:14","nodeType":"YulLiteral","src":"4034:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"4022:3:14","nodeType":"YulIdentifier","src":"4022:3:14"},"nativeSrc":"4022:17:14","nodeType":"YulFunctionCall","src":"4022:17:14"},"variableNames":[{"name":"length","nativeSrc":"4012:6:14","nodeType":"YulIdentifier","src":"4012:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"3978:18:14","nodeType":"YulIdentifier","src":"3978:18:14"}],"functionName":{"name":"iszero","nativeSrc":"3971:6:14","nodeType":"YulIdentifier","src":"3971:6:14"},"nativeSrc":"3971:26:14","nodeType":"YulFunctionCall","src":"3971:26:14"},"nativeSrc":"3968:81:14","nodeType":"YulIf","src":"3968:81:14"},{"body":{"nativeSrc":"4101:42:14","nodeType":"YulBlock","src":"4101:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"4115:16:14","nodeType":"YulIdentifier","src":"4115:16:14"},"nativeSrc":"4115:18:14","nodeType":"YulFunctionCall","src":"4115:18:14"},"nativeSrc":"4115:18:14","nodeType":"YulExpressionStatement","src":"4115:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"4065:18:14","nodeType":"YulIdentifier","src":"4065:18:14"},{"arguments":[{"name":"length","nativeSrc":"4088:6:14","nodeType":"YulIdentifier","src":"4088:6:14"},{"kind":"number","nativeSrc":"4096:2:14","nodeType":"YulLiteral","src":"4096:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4085:2:14","nodeType":"YulIdentifier","src":"4085:2:14"},"nativeSrc":"4085:14:14","nodeType":"YulFunctionCall","src":"4085:14:14"}],"functionName":{"name":"eq","nativeSrc":"4062:2:14","nodeType":"YulIdentifier","src":"4062:2:14"},"nativeSrc":"4062:38:14","nodeType":"YulFunctionCall","src":"4062:38:14"},"nativeSrc":"4059:84:14","nodeType":"YulIf","src":"4059:84:14"}]},"name":"extract_byte_array_length","nativeSrc":"3829:320:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3864:4:14","nodeType":"YulTypedName","src":"3864:4:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3873:6:14","nodeType":"YulTypedName","src":"3873:6:14","type":""}],"src":"3829:320:14"},{"body":{"nativeSrc":"4209:87:14","nodeType":"YulBlock","src":"4209:87:14","statements":[{"nativeSrc":"4219:11:14","nodeType":"YulAssignment","src":"4219:11:14","value":{"name":"ptr","nativeSrc":"4227:3:14","nodeType":"YulIdentifier","src":"4227:3:14"},"variableNames":[{"name":"data","nativeSrc":"4219:4:14","nodeType":"YulIdentifier","src":"4219:4:14"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4247:1:14","nodeType":"YulLiteral","src":"4247:1:14","type":"","value":"0"},{"name":"ptr","nativeSrc":"4250:3:14","nodeType":"YulIdentifier","src":"4250:3:14"}],"functionName":{"name":"mstore","nativeSrc":"4240:6:14","nodeType":"YulIdentifier","src":"4240:6:14"},"nativeSrc":"4240:14:14","nodeType":"YulFunctionCall","src":"4240:14:14"},"nativeSrc":"4240:14:14","nodeType":"YulExpressionStatement","src":"4240:14:14"},{"nativeSrc":"4263:26:14","nodeType":"YulAssignment","src":"4263:26:14","value":{"arguments":[{"kind":"number","nativeSrc":"4281:1:14","nodeType":"YulLiteral","src":"4281:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"4284:4:14","nodeType":"YulLiteral","src":"4284:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"4271:9:14","nodeType":"YulIdentifier","src":"4271:9:14"},"nativeSrc":"4271:18:14","nodeType":"YulFunctionCall","src":"4271:18:14"},"variableNames":[{"name":"data","nativeSrc":"4263:4:14","nodeType":"YulIdentifier","src":"4263:4:14"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"4155:141:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4196:3:14","nodeType":"YulTypedName","src":"4196:3:14","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4204:4:14","nodeType":"YulTypedName","src":"4204:4:14","type":""}],"src":"4155:141:14"},{"body":{"nativeSrc":"4346:49:14","nodeType":"YulBlock","src":"4346:49:14","statements":[{"nativeSrc":"4356:33:14","nodeType":"YulAssignment","src":"4356:33:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4374:5:14","nodeType":"YulIdentifier","src":"4374:5:14"},{"kind":"number","nativeSrc":"4381:2:14","nodeType":"YulLiteral","src":"4381:2:14","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4370:3:14","nodeType":"YulIdentifier","src":"4370:3:14"},"nativeSrc":"4370:14:14","nodeType":"YulFunctionCall","src":"4370:14:14"},{"kind":"number","nativeSrc":"4386:2:14","nodeType":"YulLiteral","src":"4386:2:14","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"4366:3:14","nodeType":"YulIdentifier","src":"4366:3:14"},"nativeSrc":"4366:23:14","nodeType":"YulFunctionCall","src":"4366:23:14"},"variableNames":[{"name":"result","nativeSrc":"4356:6:14","nodeType":"YulIdentifier","src":"4356:6:14"}]}]},"name":"divide_by_32_ceil","nativeSrc":"4302:93:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4329:5:14","nodeType":"YulTypedName","src":"4329:5:14","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4339:6:14","nodeType":"YulTypedName","src":"4339:6:14","type":""}],"src":"4302:93:14"},{"body":{"nativeSrc":"4454:54:14","nodeType":"YulBlock","src":"4454:54:14","statements":[{"nativeSrc":"4464:37:14","nodeType":"YulAssignment","src":"4464:37:14","value":{"arguments":[{"name":"bits","nativeSrc":"4489:4:14","nodeType":"YulIdentifier","src":"4489:4:14"},{"name":"value","nativeSrc":"4495:5:14","nodeType":"YulIdentifier","src":"4495:5:14"}],"functionName":{"name":"shl","nativeSrc":"4485:3:14","nodeType":"YulIdentifier","src":"4485:3:14"},"nativeSrc":"4485:16:14","nodeType":"YulFunctionCall","src":"4485:16:14"},"variableNames":[{"name":"newValue","nativeSrc":"4464:8:14","nodeType":"YulIdentifier","src":"4464:8:14"}]}]},"name":"shift_left_dynamic","nativeSrc":"4401:107:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4429:4:14","nodeType":"YulTypedName","src":"4429:4:14","type":""},{"name":"value","nativeSrc":"4435:5:14","nodeType":"YulTypedName","src":"4435:5:14","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4445:8:14","nodeType":"YulTypedName","src":"4445:8:14","type":""}],"src":"4401:107:14"},{"body":{"nativeSrc":"4590:317:14","nodeType":"YulBlock","src":"4590:317:14","statements":[{"nativeSrc":"4600:35:14","nodeType":"YulVariableDeclaration","src":"4600:35:14","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"4621:10:14","nodeType":"YulIdentifier","src":"4621:10:14"},{"kind":"number","nativeSrc":"4633:1:14","nodeType":"YulLiteral","src":"4633:1:14","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"4617:3:14","nodeType":"YulIdentifier","src":"4617:3:14"},"nativeSrc":"4617:18:14","nodeType":"YulFunctionCall","src":"4617:18:14"},"variables":[{"name":"shiftBits","nativeSrc":"4604:9:14","nodeType":"YulTypedName","src":"4604:9:14","type":""}]},{"nativeSrc":"4644:109:14","nodeType":"YulVariableDeclaration","src":"4644:109:14","value":{"arguments":[{"name":"shiftBits","nativeSrc":"4675:9:14","nodeType":"YulIdentifier","src":"4675:9:14"},{"kind":"number","nativeSrc":"4686:66:14","nodeType":"YulLiteral","src":"4686:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"4656:18:14","nodeType":"YulIdentifier","src":"4656:18:14"},"nativeSrc":"4656:97:14","nodeType":"YulFunctionCall","src":"4656:97:14"},"variables":[{"name":"mask","nativeSrc":"4648:4:14","nodeType":"YulTypedName","src":"4648:4:14","type":""}]},{"nativeSrc":"4762:51:14","nodeType":"YulAssignment","src":"4762:51:14","value":{"arguments":[{"name":"shiftBits","nativeSrc":"4793:9:14","nodeType":"YulIdentifier","src":"4793:9:14"},{"name":"toInsert","nativeSrc":"4804:8:14","nodeType":"YulIdentifier","src":"4804:8:14"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"4774:18:14","nodeType":"YulIdentifier","src":"4774:18:14"},"nativeSrc":"4774:39:14","nodeType":"YulFunctionCall","src":"4774:39:14"},"variableNames":[{"name":"toInsert","nativeSrc":"4762:8:14","nodeType":"YulIdentifier","src":"4762:8:14"}]},{"nativeSrc":"4822:30:14","nodeType":"YulAssignment","src":"4822:30:14","value":{"arguments":[{"name":"value","nativeSrc":"4835:5:14","nodeType":"YulIdentifier","src":"4835:5:14"},{"arguments":[{"name":"mask","nativeSrc":"4846:4:14","nodeType":"YulIdentifier","src":"4846:4:14"}],"functionName":{"name":"not","nativeSrc":"4842:3:14","nodeType":"YulIdentifier","src":"4842:3:14"},"nativeSrc":"4842:9:14","nodeType":"YulFunctionCall","src":"4842:9:14"}],"functionName":{"name":"and","nativeSrc":"4831:3:14","nodeType":"YulIdentifier","src":"4831:3:14"},"nativeSrc":"4831:21:14","nodeType":"YulFunctionCall","src":"4831:21:14"},"variableNames":[{"name":"value","nativeSrc":"4822:5:14","nodeType":"YulIdentifier","src":"4822:5:14"}]},{"nativeSrc":"4861:40:14","nodeType":"YulAssignment","src":"4861:40:14","value":{"arguments":[{"name":"value","nativeSrc":"4874:5:14","nodeType":"YulIdentifier","src":"4874:5:14"},{"arguments":[{"name":"toInsert","nativeSrc":"4885:8:14","nodeType":"YulIdentifier","src":"4885:8:14"},{"name":"mask","nativeSrc":"4895:4:14","nodeType":"YulIdentifier","src":"4895:4:14"}],"functionName":{"name":"and","nativeSrc":"4881:3:14","nodeType":"YulIdentifier","src":"4881:3:14"},"nativeSrc":"4881:19:14","nodeType":"YulFunctionCall","src":"4881:19:14"}],"functionName":{"name":"or","nativeSrc":"4871:2:14","nodeType":"YulIdentifier","src":"4871:2:14"},"nativeSrc":"4871:30:14","nodeType":"YulFunctionCall","src":"4871:30:14"},"variableNames":[{"name":"result","nativeSrc":"4861:6:14","nodeType":"YulIdentifier","src":"4861:6:14"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"4514:393:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4551:5:14","nodeType":"YulTypedName","src":"4551:5:14","type":""},{"name":"shiftBytes","nativeSrc":"4558:10:14","nodeType":"YulTypedName","src":"4558:10:14","type":""},{"name":"toInsert","nativeSrc":"4570:8:14","nodeType":"YulTypedName","src":"4570:8:14","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4583:6:14","nodeType":"YulTypedName","src":"4583:6:14","type":""}],"src":"4514:393:14"},{"body":{"nativeSrc":"4958:32:14","nodeType":"YulBlock","src":"4958:32:14","statements":[{"nativeSrc":"4968:16:14","nodeType":"YulAssignment","src":"4968:16:14","value":{"name":"value","nativeSrc":"4979:5:14","nodeType":"YulIdentifier","src":"4979:5:14"},"variableNames":[{"name":"cleaned","nativeSrc":"4968:7:14","nodeType":"YulIdentifier","src":"4968:7:14"}]}]},"name":"cleanup_t_uint256","nativeSrc":"4913:77:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4940:5:14","nodeType":"YulTypedName","src":"4940:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4950:7:14","nodeType":"YulTypedName","src":"4950:7:14","type":""}],"src":"4913:77:14"},{"body":{"nativeSrc":"5028:28:14","nodeType":"YulBlock","src":"5028:28:14","statements":[{"nativeSrc":"5038:12:14","nodeType":"YulAssignment","src":"5038:12:14","value":{"name":"value","nativeSrc":"5045:5:14","nodeType":"YulIdentifier","src":"5045:5:14"},"variableNames":[{"name":"ret","nativeSrc":"5038:3:14","nodeType":"YulIdentifier","src":"5038:3:14"}]}]},"name":"identity","nativeSrc":"4996:60:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5014:5:14","nodeType":"YulTypedName","src":"5014:5:14","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5024:3:14","nodeType":"YulTypedName","src":"5024:3:14","type":""}],"src":"4996:60:14"},{"body":{"nativeSrc":"5122:82:14","nodeType":"YulBlock","src":"5122:82:14","statements":[{"nativeSrc":"5132:66:14","nodeType":"YulAssignment","src":"5132:66:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5190:5:14","nodeType":"YulIdentifier","src":"5190:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5172:17:14","nodeType":"YulIdentifier","src":"5172:17:14"},"nativeSrc":"5172:24:14","nodeType":"YulFunctionCall","src":"5172:24:14"}],"functionName":{"name":"identity","nativeSrc":"5163:8:14","nodeType":"YulIdentifier","src":"5163:8:14"},"nativeSrc":"5163:34:14","nodeType":"YulFunctionCall","src":"5163:34:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5145:17:14","nodeType":"YulIdentifier","src":"5145:17:14"},"nativeSrc":"5145:53:14","nodeType":"YulFunctionCall","src":"5145:53:14"},"variableNames":[{"name":"converted","nativeSrc":"5132:9:14","nodeType":"YulIdentifier","src":"5132:9:14"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5062:142:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5102:5:14","nodeType":"YulTypedName","src":"5102:5:14","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"5112:9:14","nodeType":"YulTypedName","src":"5112:9:14","type":""}],"src":"5062:142:14"},{"body":{"nativeSrc":"5257:28:14","nodeType":"YulBlock","src":"5257:28:14","statements":[{"nativeSrc":"5267:12:14","nodeType":"YulAssignment","src":"5267:12:14","value":{"name":"value","nativeSrc":"5274:5:14","nodeType":"YulIdentifier","src":"5274:5:14"},"variableNames":[{"name":"ret","nativeSrc":"5267:3:14","nodeType":"YulIdentifier","src":"5267:3:14"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"5210:75:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5243:5:14","nodeType":"YulTypedName","src":"5243:5:14","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"5253:3:14","nodeType":"YulTypedName","src":"5253:3:14","type":""}],"src":"5210:75:14"},{"body":{"nativeSrc":"5367:193:14","nodeType":"YulBlock","src":"5367:193:14","statements":[{"nativeSrc":"5377:63:14","nodeType":"YulVariableDeclaration","src":"5377:63:14","value":{"arguments":[{"name":"value_0","nativeSrc":"5432:7:14","nodeType":"YulIdentifier","src":"5432:7:14"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"5401:30:14","nodeType":"YulIdentifier","src":"5401:30:14"},"nativeSrc":"5401:39:14","nodeType":"YulFunctionCall","src":"5401:39:14"},"variables":[{"name":"convertedValue_0","nativeSrc":"5381:16:14","nodeType":"YulTypedName","src":"5381:16:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5456:4:14","nodeType":"YulIdentifier","src":"5456:4:14"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5496:4:14","nodeType":"YulIdentifier","src":"5496:4:14"}],"functionName":{"name":"sload","nativeSrc":"5490:5:14","nodeType":"YulIdentifier","src":"5490:5:14"},"nativeSrc":"5490:11:14","nodeType":"YulFunctionCall","src":"5490:11:14"},{"name":"offset","nativeSrc":"5503:6:14","nodeType":"YulIdentifier","src":"5503:6:14"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"5535:16:14","nodeType":"YulIdentifier","src":"5535:16:14"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"5511:23:14","nodeType":"YulIdentifier","src":"5511:23:14"},"nativeSrc":"5511:41:14","nodeType":"YulFunctionCall","src":"5511:41:14"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"5462:27:14","nodeType":"YulIdentifier","src":"5462:27:14"},"nativeSrc":"5462:91:14","nodeType":"YulFunctionCall","src":"5462:91:14"}],"functionName":{"name":"sstore","nativeSrc":"5449:6:14","nodeType":"YulIdentifier","src":"5449:6:14"},"nativeSrc":"5449:105:14","nodeType":"YulFunctionCall","src":"5449:105:14"},"nativeSrc":"5449:105:14","nodeType":"YulExpressionStatement","src":"5449:105:14"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5291:269:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5344:4:14","nodeType":"YulTypedName","src":"5344:4:14","type":""},{"name":"offset","nativeSrc":"5350:6:14","nodeType":"YulTypedName","src":"5350:6:14","type":""},{"name":"value_0","nativeSrc":"5358:7:14","nodeType":"YulTypedName","src":"5358:7:14","type":""}],"src":"5291:269:14"},{"body":{"nativeSrc":"5615:24:14","nodeType":"YulBlock","src":"5615:24:14","statements":[{"nativeSrc":"5625:8:14","nodeType":"YulAssignment","src":"5625:8:14","value":{"kind":"number","nativeSrc":"5632:1:14","nodeType":"YulLiteral","src":"5632:1:14","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"5625:3:14","nodeType":"YulIdentifier","src":"5625:3:14"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"5566:73:14","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"5611:3:14","nodeType":"YulTypedName","src":"5611:3:14","type":""}],"src":"5566:73:14"},{"body":{"nativeSrc":"5698:136:14","nodeType":"YulBlock","src":"5698:136:14","statements":[{"nativeSrc":"5708:46:14","nodeType":"YulVariableDeclaration","src":"5708:46:14","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"5722:30:14","nodeType":"YulIdentifier","src":"5722:30:14"},"nativeSrc":"5722:32:14","nodeType":"YulFunctionCall","src":"5722:32:14"},"variables":[{"name":"zero_0","nativeSrc":"5712:6:14","nodeType":"YulTypedName","src":"5712:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5807:4:14","nodeType":"YulIdentifier","src":"5807:4:14"},{"name":"offset","nativeSrc":"5813:6:14","nodeType":"YulIdentifier","src":"5813:6:14"},{"name":"zero_0","nativeSrc":"5821:6:14","nodeType":"YulIdentifier","src":"5821:6:14"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"5763:43:14","nodeType":"YulIdentifier","src":"5763:43:14"},"nativeSrc":"5763:65:14","nodeType":"YulFunctionCall","src":"5763:65:14"},"nativeSrc":"5763:65:14","nodeType":"YulExpressionStatement","src":"5763:65:14"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"5645:189:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"5684:4:14","nodeType":"YulTypedName","src":"5684:4:14","type":""},{"name":"offset","nativeSrc":"5690:6:14","nodeType":"YulTypedName","src":"5690:6:14","type":""}],"src":"5645:189:14"},{"body":{"nativeSrc":"5890:136:14","nodeType":"YulBlock","src":"5890:136:14","statements":[{"body":{"nativeSrc":"5957:63:14","nodeType":"YulBlock","src":"5957:63:14","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"6001:5:14","nodeType":"YulIdentifier","src":"6001:5:14"},{"kind":"number","nativeSrc":"6008:1:14","nodeType":"YulLiteral","src":"6008:1:14","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"5971:29:14","nodeType":"YulIdentifier","src":"5971:29:14"},"nativeSrc":"5971:39:14","nodeType":"YulFunctionCall","src":"5971:39:14"},"nativeSrc":"5971:39:14","nodeType":"YulExpressionStatement","src":"5971:39:14"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"5910:5:14","nodeType":"YulIdentifier","src":"5910:5:14"},{"name":"end","nativeSrc":"5917:3:14","nodeType":"YulIdentifier","src":"5917:3:14"}],"functionName":{"name":"lt","nativeSrc":"5907:2:14","nodeType":"YulIdentifier","src":"5907:2:14"},"nativeSrc":"5907:14:14","nodeType":"YulFunctionCall","src":"5907:14:14"},"nativeSrc":"5900:120:14","nodeType":"YulForLoop","post":{"nativeSrc":"5922:26:14","nodeType":"YulBlock","src":"5922:26:14","statements":[{"nativeSrc":"5924:22:14","nodeType":"YulAssignment","src":"5924:22:14","value":{"arguments":[{"name":"start","nativeSrc":"5937:5:14","nodeType":"YulIdentifier","src":"5937:5:14"},{"kind":"number","nativeSrc":"5944:1:14","nodeType":"YulLiteral","src":"5944:1:14","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5933:3:14","nodeType":"YulIdentifier","src":"5933:3:14"},"nativeSrc":"5933:13:14","nodeType":"YulFunctionCall","src":"5933:13:14"},"variableNames":[{"name":"start","nativeSrc":"5924:5:14","nodeType":"YulIdentifier","src":"5924:5:14"}]}]},"pre":{"nativeSrc":"5904:2:14","nodeType":"YulBlock","src":"5904:2:14","statements":[]},"src":"5900:120:14"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"5840:186:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"5878:5:14","nodeType":"YulTypedName","src":"5878:5:14","type":""},{"name":"end","nativeSrc":"5885:3:14","nodeType":"YulTypedName","src":"5885:3:14","type":""}],"src":"5840:186:14"},{"body":{"nativeSrc":"6111:464:14","nodeType":"YulBlock","src":"6111:464:14","statements":[{"body":{"nativeSrc":"6137:431:14","nodeType":"YulBlock","src":"6137:431:14","statements":[{"nativeSrc":"6151:54:14","nodeType":"YulVariableDeclaration","src":"6151:54:14","value":{"arguments":[{"name":"array","nativeSrc":"6199:5:14","nodeType":"YulIdentifier","src":"6199:5:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6167:31:14","nodeType":"YulIdentifier","src":"6167:31:14"},"nativeSrc":"6167:38:14","nodeType":"YulFunctionCall","src":"6167:38:14"},"variables":[{"name":"dataArea","nativeSrc":"6155:8:14","nodeType":"YulTypedName","src":"6155:8:14","type":""}]},{"nativeSrc":"6218:63:14","nodeType":"YulVariableDeclaration","src":"6218:63:14","value":{"arguments":[{"name":"dataArea","nativeSrc":"6241:8:14","nodeType":"YulIdentifier","src":"6241:8:14"},{"arguments":[{"name":"startIndex","nativeSrc":"6269:10:14","nodeType":"YulIdentifier","src":"6269:10:14"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6251:17:14","nodeType":"YulIdentifier","src":"6251:17:14"},"nativeSrc":"6251:29:14","nodeType":"YulFunctionCall","src":"6251:29:14"}],"functionName":{"name":"add","nativeSrc":"6237:3:14","nodeType":"YulIdentifier","src":"6237:3:14"},"nativeSrc":"6237:44:14","nodeType":"YulFunctionCall","src":"6237:44:14"},"variables":[{"name":"deleteStart","nativeSrc":"6222:11:14","nodeType":"YulTypedName","src":"6222:11:14","type":""}]},{"body":{"nativeSrc":"6438:27:14","nodeType":"YulBlock","src":"6438:27:14","statements":[{"nativeSrc":"6440:23:14","nodeType":"YulAssignment","src":"6440:23:14","value":{"name":"dataArea","nativeSrc":"6455:8:14","nodeType":"YulIdentifier","src":"6455:8:14"},"variableNames":[{"name":"deleteStart","nativeSrc":"6440:11:14","nodeType":"YulIdentifier","src":"6440:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"6422:10:14","nodeType":"YulIdentifier","src":"6422:10:14"},{"kind":"number","nativeSrc":"6434:2:14","nodeType":"YulLiteral","src":"6434:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6419:2:14","nodeType":"YulIdentifier","src":"6419:2:14"},"nativeSrc":"6419:18:14","nodeType":"YulFunctionCall","src":"6419:18:14"},"nativeSrc":"6416:49:14","nodeType":"YulIf","src":"6416:49:14"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"6507:11:14","nodeType":"YulIdentifier","src":"6507:11:14"},{"arguments":[{"name":"dataArea","nativeSrc":"6524:8:14","nodeType":"YulIdentifier","src":"6524:8:14"},{"arguments":[{"name":"len","nativeSrc":"6552:3:14","nodeType":"YulIdentifier","src":"6552:3:14"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"6534:17:14","nodeType":"YulIdentifier","src":"6534:17:14"},"nativeSrc":"6534:22:14","nodeType":"YulFunctionCall","src":"6534:22:14"}],"functionName":{"name":"add","nativeSrc":"6520:3:14","nodeType":"YulIdentifier","src":"6520:3:14"},"nativeSrc":"6520:37:14","nodeType":"YulFunctionCall","src":"6520:37:14"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"6478:28:14","nodeType":"YulIdentifier","src":"6478:28:14"},"nativeSrc":"6478:80:14","nodeType":"YulFunctionCall","src":"6478:80:14"},"nativeSrc":"6478:80:14","nodeType":"YulExpressionStatement","src":"6478:80:14"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"6128:3:14","nodeType":"YulIdentifier","src":"6128:3:14"},{"kind":"number","nativeSrc":"6133:2:14","nodeType":"YulLiteral","src":"6133:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6125:2:14","nodeType":"YulIdentifier","src":"6125:2:14"},"nativeSrc":"6125:11:14","nodeType":"YulFunctionCall","src":"6125:11:14"},"nativeSrc":"6122:446:14","nodeType":"YulIf","src":"6122:446:14"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6032:543:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6087:5:14","nodeType":"YulTypedName","src":"6087:5:14","type":""},{"name":"len","nativeSrc":"6094:3:14","nodeType":"YulTypedName","src":"6094:3:14","type":""},{"name":"startIndex","nativeSrc":"6099:10:14","nodeType":"YulTypedName","src":"6099:10:14","type":""}],"src":"6032:543:14"},{"body":{"nativeSrc":"6644:54:14","nodeType":"YulBlock","src":"6644:54:14","statements":[{"nativeSrc":"6654:37:14","nodeType":"YulAssignment","src":"6654:37:14","value":{"arguments":[{"name":"bits","nativeSrc":"6679:4:14","nodeType":"YulIdentifier","src":"6679:4:14"},{"name":"value","nativeSrc":"6685:5:14","nodeType":"YulIdentifier","src":"6685:5:14"}],"functionName":{"name":"shr","nativeSrc":"6675:3:14","nodeType":"YulIdentifier","src":"6675:3:14"},"nativeSrc":"6675:16:14","nodeType":"YulFunctionCall","src":"6675:16:14"},"variableNames":[{"name":"newValue","nativeSrc":"6654:8:14","nodeType":"YulIdentifier","src":"6654:8:14"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"6581:117:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"6619:4:14","nodeType":"YulTypedName","src":"6619:4:14","type":""},{"name":"value","nativeSrc":"6625:5:14","nodeType":"YulTypedName","src":"6625:5:14","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"6635:8:14","nodeType":"YulTypedName","src":"6635:8:14","type":""}],"src":"6581:117:14"},{"body":{"nativeSrc":"6755:118:14","nodeType":"YulBlock","src":"6755:118:14","statements":[{"nativeSrc":"6765:68:14","nodeType":"YulVariableDeclaration","src":"6765:68:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6814:1:14","nodeType":"YulLiteral","src":"6814:1:14","type":"","value":"8"},{"name":"bytes","nativeSrc":"6817:5:14","nodeType":"YulIdentifier","src":"6817:5:14"}],"functionName":{"name":"mul","nativeSrc":"6810:3:14","nodeType":"YulIdentifier","src":"6810:3:14"},"nativeSrc":"6810:13:14","nodeType":"YulFunctionCall","src":"6810:13:14"},{"arguments":[{"kind":"number","nativeSrc":"6829:1:14","nodeType":"YulLiteral","src":"6829:1:14","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"6825:3:14","nodeType":"YulIdentifier","src":"6825:3:14"},"nativeSrc":"6825:6:14","nodeType":"YulFunctionCall","src":"6825:6:14"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"6781:28:14","nodeType":"YulIdentifier","src":"6781:28:14"},"nativeSrc":"6781:51:14","nodeType":"YulFunctionCall","src":"6781:51:14"}],"functionName":{"name":"not","nativeSrc":"6777:3:14","nodeType":"YulIdentifier","src":"6777:3:14"},"nativeSrc":"6777:56:14","nodeType":"YulFunctionCall","src":"6777:56:14"},"variables":[{"name":"mask","nativeSrc":"6769:4:14","nodeType":"YulTypedName","src":"6769:4:14","type":""}]},{"nativeSrc":"6842:25:14","nodeType":"YulAssignment","src":"6842:25:14","value":{"arguments":[{"name":"data","nativeSrc":"6856:4:14","nodeType":"YulIdentifier","src":"6856:4:14"},{"name":"mask","nativeSrc":"6862:4:14","nodeType":"YulIdentifier","src":"6862:4:14"}],"functionName":{"name":"and","nativeSrc":"6852:3:14","nodeType":"YulIdentifier","src":"6852:3:14"},"nativeSrc":"6852:15:14","nodeType":"YulFunctionCall","src":"6852:15:14"},"variableNames":[{"name":"result","nativeSrc":"6842:6:14","nodeType":"YulIdentifier","src":"6842:6:14"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"6704:169:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6732:4:14","nodeType":"YulTypedName","src":"6732:4:14","type":""},{"name":"bytes","nativeSrc":"6738:5:14","nodeType":"YulTypedName","src":"6738:5:14","type":""}],"returnVariables":[{"name":"result","nativeSrc":"6748:6:14","nodeType":"YulTypedName","src":"6748:6:14","type":""}],"src":"6704:169:14"},{"body":{"nativeSrc":"6959:214:14","nodeType":"YulBlock","src":"6959:214:14","statements":[{"nativeSrc":"7092:37:14","nodeType":"YulAssignment","src":"7092:37:14","value":{"arguments":[{"name":"data","nativeSrc":"7119:4:14","nodeType":"YulIdentifier","src":"7119:4:14"},{"name":"len","nativeSrc":"7125:3:14","nodeType":"YulIdentifier","src":"7125:3:14"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"7100:18:14","nodeType":"YulIdentifier","src":"7100:18:14"},"nativeSrc":"7100:29:14","nodeType":"YulFunctionCall","src":"7100:29:14"},"variableNames":[{"name":"data","nativeSrc":"7092:4:14","nodeType":"YulIdentifier","src":"7092:4:14"}]},{"nativeSrc":"7138:29:14","nodeType":"YulAssignment","src":"7138:29:14","value":{"arguments":[{"name":"data","nativeSrc":"7149:4:14","nodeType":"YulIdentifier","src":"7149:4:14"},{"arguments":[{"kind":"number","nativeSrc":"7159:1:14","nodeType":"YulLiteral","src":"7159:1:14","type":"","value":"2"},{"name":"len","nativeSrc":"7162:3:14","nodeType":"YulIdentifier","src":"7162:3:14"}],"functionName":{"name":"mul","nativeSrc":"7155:3:14","nodeType":"YulIdentifier","src":"7155:3:14"},"nativeSrc":"7155:11:14","nodeType":"YulFunctionCall","src":"7155:11:14"}],"functionName":{"name":"or","nativeSrc":"7146:2:14","nodeType":"YulIdentifier","src":"7146:2:14"},"nativeSrc":"7146:21:14","nodeType":"YulFunctionCall","src":"7146:21:14"},"variableNames":[{"name":"used","nativeSrc":"7138:4:14","nodeType":"YulIdentifier","src":"7138:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6878:295:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6940:4:14","nodeType":"YulTypedName","src":"6940:4:14","type":""},{"name":"len","nativeSrc":"6946:3:14","nodeType":"YulTypedName","src":"6946:3:14","type":""}],"returnVariables":[{"name":"used","nativeSrc":"6954:4:14","nodeType":"YulTypedName","src":"6954:4:14","type":""}],"src":"6878:295:14"},{"body":{"nativeSrc":"7270:1303:14","nodeType":"YulBlock","src":"7270:1303:14","statements":[{"nativeSrc":"7281:51:14","nodeType":"YulVariableDeclaration","src":"7281:51:14","value":{"arguments":[{"name":"src","nativeSrc":"7328:3:14","nodeType":"YulIdentifier","src":"7328:3:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7295:32:14","nodeType":"YulIdentifier","src":"7295:32:14"},"nativeSrc":"7295:37:14","nodeType":"YulFunctionCall","src":"7295:37:14"},"variables":[{"name":"newLen","nativeSrc":"7285:6:14","nodeType":"YulTypedName","src":"7285:6:14","type":""}]},{"body":{"nativeSrc":"7417:22:14","nodeType":"YulBlock","src":"7417:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7419:16:14","nodeType":"YulIdentifier","src":"7419:16:14"},"nativeSrc":"7419:18:14","nodeType":"YulFunctionCall","src":"7419:18:14"},"nativeSrc":"7419:18:14","nodeType":"YulExpressionStatement","src":"7419:18:14"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"7389:6:14","nodeType":"YulIdentifier","src":"7389:6:14"},{"kind":"number","nativeSrc":"7397:18:14","nodeType":"YulLiteral","src":"7397:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7386:2:14","nodeType":"YulIdentifier","src":"7386:2:14"},"nativeSrc":"7386:30:14","nodeType":"YulFunctionCall","src":"7386:30:14"},"nativeSrc":"7383:56:14","nodeType":"YulIf","src":"7383:56:14"},{"nativeSrc":"7449:52:14","nodeType":"YulVariableDeclaration","src":"7449:52:14","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"7495:4:14","nodeType":"YulIdentifier","src":"7495:4:14"}],"functionName":{"name":"sload","nativeSrc":"7489:5:14","nodeType":"YulIdentifier","src":"7489:5:14"},"nativeSrc":"7489:11:14","nodeType":"YulFunctionCall","src":"7489:11:14"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"7463:25:14","nodeType":"YulIdentifier","src":"7463:25:14"},"nativeSrc":"7463:38:14","nodeType":"YulFunctionCall","src":"7463:38:14"},"variables":[{"name":"oldLen","nativeSrc":"7453:6:14","nodeType":"YulTypedName","src":"7453:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7594:4:14","nodeType":"YulIdentifier","src":"7594:4:14"},{"name":"oldLen","nativeSrc":"7600:6:14","nodeType":"YulIdentifier","src":"7600:6:14"},{"name":"newLen","nativeSrc":"7608:6:14","nodeType":"YulIdentifier","src":"7608:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"7548:45:14","nodeType":"YulIdentifier","src":"7548:45:14"},"nativeSrc":"7548:67:14","nodeType":"YulFunctionCall","src":"7548:67:14"},"nativeSrc":"7548:67:14","nodeType":"YulExpressionStatement","src":"7548:67:14"},{"nativeSrc":"7625:18:14","nodeType":"YulVariableDeclaration","src":"7625:18:14","value":{"kind":"number","nativeSrc":"7642:1:14","nodeType":"YulLiteral","src":"7642:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"7629:9:14","nodeType":"YulTypedName","src":"7629:9:14","type":""}]},{"nativeSrc":"7653:17:14","nodeType":"YulAssignment","src":"7653:17:14","value":{"kind":"number","nativeSrc":"7666:4:14","nodeType":"YulLiteral","src":"7666:4:14","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"7653:9:14","nodeType":"YulIdentifier","src":"7653:9:14"}]},{"cases":[{"body":{"nativeSrc":"7717:611:14","nodeType":"YulBlock","src":"7717:611:14","statements":[{"nativeSrc":"7731:37:14","nodeType":"YulVariableDeclaration","src":"7731:37:14","value":{"arguments":[{"name":"newLen","nativeSrc":"7750:6:14","nodeType":"YulIdentifier","src":"7750:6:14"},{"arguments":[{"kind":"number","nativeSrc":"7762:4:14","nodeType":"YulLiteral","src":"7762:4:14","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"7758:3:14","nodeType":"YulIdentifier","src":"7758:3:14"},"nativeSrc":"7758:9:14","nodeType":"YulFunctionCall","src":"7758:9:14"}],"functionName":{"name":"and","nativeSrc":"7746:3:14","nodeType":"YulIdentifier","src":"7746:3:14"},"nativeSrc":"7746:22:14","nodeType":"YulFunctionCall","src":"7746:22:14"},"variables":[{"name":"loopEnd","nativeSrc":"7735:7:14","nodeType":"YulTypedName","src":"7735:7:14","type":""}]},{"nativeSrc":"7782:51:14","nodeType":"YulVariableDeclaration","src":"7782:51:14","value":{"arguments":[{"name":"slot","nativeSrc":"7828:4:14","nodeType":"YulIdentifier","src":"7828:4:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"7796:31:14","nodeType":"YulIdentifier","src":"7796:31:14"},"nativeSrc":"7796:37:14","nodeType":"YulFunctionCall","src":"7796:37:14"},"variables":[{"name":"dstPtr","nativeSrc":"7786:6:14","nodeType":"YulTypedName","src":"7786:6:14","type":""}]},{"nativeSrc":"7846:10:14","nodeType":"YulVariableDeclaration","src":"7846:10:14","value":{"kind":"number","nativeSrc":"7855:1:14","nodeType":"YulLiteral","src":"7855:1:14","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7850:1:14","nodeType":"YulTypedName","src":"7850:1:14","type":""}]},{"body":{"nativeSrc":"7914:163:14","nodeType":"YulBlock","src":"7914:163:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"7939:6:14","nodeType":"YulIdentifier","src":"7939:6:14"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7957:3:14","nodeType":"YulIdentifier","src":"7957:3:14"},{"name":"srcOffset","nativeSrc":"7962:9:14","nodeType":"YulIdentifier","src":"7962:9:14"}],"functionName":{"name":"add","nativeSrc":"7953:3:14","nodeType":"YulIdentifier","src":"7953:3:14"},"nativeSrc":"7953:19:14","nodeType":"YulFunctionCall","src":"7953:19:14"}],"functionName":{"name":"mload","nativeSrc":"7947:5:14","nodeType":"YulIdentifier","src":"7947:5:14"},"nativeSrc":"7947:26:14","nodeType":"YulFunctionCall","src":"7947:26:14"}],"functionName":{"name":"sstore","nativeSrc":"7932:6:14","nodeType":"YulIdentifier","src":"7932:6:14"},"nativeSrc":"7932:42:14","nodeType":"YulFunctionCall","src":"7932:42:14"},"nativeSrc":"7932:42:14","nodeType":"YulExpressionStatement","src":"7932:42:14"},{"nativeSrc":"7991:24:14","nodeType":"YulAssignment","src":"7991:24:14","value":{"arguments":[{"name":"dstPtr","nativeSrc":"8005:6:14","nodeType":"YulIdentifier","src":"8005:6:14"},{"kind":"number","nativeSrc":"8013:1:14","nodeType":"YulLiteral","src":"8013:1:14","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8001:3:14","nodeType":"YulIdentifier","src":"8001:3:14"},"nativeSrc":"8001:14:14","nodeType":"YulFunctionCall","src":"8001:14:14"},"variableNames":[{"name":"dstPtr","nativeSrc":"7991:6:14","nodeType":"YulIdentifier","src":"7991:6:14"}]},{"nativeSrc":"8032:31:14","nodeType":"YulAssignment","src":"8032:31:14","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8049:9:14","nodeType":"YulIdentifier","src":"8049:9:14"},{"kind":"number","nativeSrc":"8060:2:14","nodeType":"YulLiteral","src":"8060:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8045:3:14","nodeType":"YulIdentifier","src":"8045:3:14"},"nativeSrc":"8045:18:14","nodeType":"YulFunctionCall","src":"8045:18:14"},"variableNames":[{"name":"srcOffset","nativeSrc":"8032:9:14","nodeType":"YulIdentifier","src":"8032:9:14"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7880:1:14","nodeType":"YulIdentifier","src":"7880:1:14"},{"name":"loopEnd","nativeSrc":"7883:7:14","nodeType":"YulIdentifier","src":"7883:7:14"}],"functionName":{"name":"lt","nativeSrc":"7877:2:14","nodeType":"YulIdentifier","src":"7877:2:14"},"nativeSrc":"7877:14:14","nodeType":"YulFunctionCall","src":"7877:14:14"},"nativeSrc":"7869:208:14","nodeType":"YulForLoop","post":{"nativeSrc":"7892:21:14","nodeType":"YulBlock","src":"7892:21:14","statements":[{"nativeSrc":"7894:17:14","nodeType":"YulAssignment","src":"7894:17:14","value":{"arguments":[{"name":"i","nativeSrc":"7903:1:14","nodeType":"YulIdentifier","src":"7903:1:14"},{"kind":"number","nativeSrc":"7906:4:14","nodeType":"YulLiteral","src":"7906:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7899:3:14","nodeType":"YulIdentifier","src":"7899:3:14"},"nativeSrc":"7899:12:14","nodeType":"YulFunctionCall","src":"7899:12:14"},"variableNames":[{"name":"i","nativeSrc":"7894:1:14","nodeType":"YulIdentifier","src":"7894:1:14"}]}]},"pre":{"nativeSrc":"7873:3:14","nodeType":"YulBlock","src":"7873:3:14","statements":[]},"src":"7869:208:14"},{"body":{"nativeSrc":"8113:156:14","nodeType":"YulBlock","src":"8113:156:14","statements":[{"nativeSrc":"8131:43:14","nodeType":"YulVariableDeclaration","src":"8131:43:14","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8158:3:14","nodeType":"YulIdentifier","src":"8158:3:14"},{"name":"srcOffset","nativeSrc":"8163:9:14","nodeType":"YulIdentifier","src":"8163:9:14"}],"functionName":{"name":"add","nativeSrc":"8154:3:14","nodeType":"YulIdentifier","src":"8154:3:14"},"nativeSrc":"8154:19:14","nodeType":"YulFunctionCall","src":"8154:19:14"}],"functionName":{"name":"mload","nativeSrc":"8148:5:14","nodeType":"YulIdentifier","src":"8148:5:14"},"nativeSrc":"8148:26:14","nodeType":"YulFunctionCall","src":"8148:26:14"},"variables":[{"name":"lastValue","nativeSrc":"8135:9:14","nodeType":"YulTypedName","src":"8135:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8198:6:14","nodeType":"YulIdentifier","src":"8198:6:14"},{"arguments":[{"name":"lastValue","nativeSrc":"8225:9:14","nodeType":"YulIdentifier","src":"8225:9:14"},{"arguments":[{"name":"newLen","nativeSrc":"8240:6:14","nodeType":"YulIdentifier","src":"8240:6:14"},{"kind":"number","nativeSrc":"8248:4:14","nodeType":"YulLiteral","src":"8248:4:14","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"8236:3:14","nodeType":"YulIdentifier","src":"8236:3:14"},"nativeSrc":"8236:17:14","nodeType":"YulFunctionCall","src":"8236:17:14"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"8206:18:14","nodeType":"YulIdentifier","src":"8206:18:14"},"nativeSrc":"8206:48:14","nodeType":"YulFunctionCall","src":"8206:48:14"}],"functionName":{"name":"sstore","nativeSrc":"8191:6:14","nodeType":"YulIdentifier","src":"8191:6:14"},"nativeSrc":"8191:64:14","nodeType":"YulFunctionCall","src":"8191:64:14"},"nativeSrc":"8191:64:14","nodeType":"YulExpressionStatement","src":"8191:64:14"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8096:7:14","nodeType":"YulIdentifier","src":"8096:7:14"},{"name":"newLen","nativeSrc":"8105:6:14","nodeType":"YulIdentifier","src":"8105:6:14"}],"functionName":{"name":"lt","nativeSrc":"8093:2:14","nodeType":"YulIdentifier","src":"8093:2:14"},"nativeSrc":"8093:19:14","nodeType":"YulFunctionCall","src":"8093:19:14"},"nativeSrc":"8090:179:14","nodeType":"YulIf","src":"8090:179:14"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8289:4:14","nodeType":"YulIdentifier","src":"8289:4:14"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"8303:6:14","nodeType":"YulIdentifier","src":"8303:6:14"},{"kind":"number","nativeSrc":"8311:1:14","nodeType":"YulLiteral","src":"8311:1:14","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"8299:3:14","nodeType":"YulIdentifier","src":"8299:3:14"},"nativeSrc":"8299:14:14","nodeType":"YulFunctionCall","src":"8299:14:14"},{"kind":"number","nativeSrc":"8315:1:14","nodeType":"YulLiteral","src":"8315:1:14","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8295:3:14","nodeType":"YulIdentifier","src":"8295:3:14"},"nativeSrc":"8295:22:14","nodeType":"YulFunctionCall","src":"8295:22:14"}],"functionName":{"name":"sstore","nativeSrc":"8282:6:14","nodeType":"YulIdentifier","src":"8282:6:14"},"nativeSrc":"8282:36:14","nodeType":"YulFunctionCall","src":"8282:36:14"},"nativeSrc":"8282:36:14","nodeType":"YulExpressionStatement","src":"8282:36:14"}]},"nativeSrc":"7710:618:14","nodeType":"YulCase","src":"7710:618:14","value":{"kind":"number","nativeSrc":"7715:1:14","nodeType":"YulLiteral","src":"7715:1:14","type":"","value":"1"}},{"body":{"nativeSrc":"8345:222:14","nodeType":"YulBlock","src":"8345:222:14","statements":[{"nativeSrc":"8359:14:14","nodeType":"YulVariableDeclaration","src":"8359:14:14","value":{"kind":"number","nativeSrc":"8372:1:14","nodeType":"YulLiteral","src":"8372:1:14","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8363:5:14","nodeType":"YulTypedName","src":"8363:5:14","type":""}]},{"body":{"nativeSrc":"8396:67:14","nodeType":"YulBlock","src":"8396:67:14","statements":[{"nativeSrc":"8414:35:14","nodeType":"YulAssignment","src":"8414:35:14","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8433:3:14","nodeType":"YulIdentifier","src":"8433:3:14"},{"name":"srcOffset","nativeSrc":"8438:9:14","nodeType":"YulIdentifier","src":"8438:9:14"}],"functionName":{"name":"add","nativeSrc":"8429:3:14","nodeType":"YulIdentifier","src":"8429:3:14"},"nativeSrc":"8429:19:14","nodeType":"YulFunctionCall","src":"8429:19:14"}],"functionName":{"name":"mload","nativeSrc":"8423:5:14","nodeType":"YulIdentifier","src":"8423:5:14"},"nativeSrc":"8423:26:14","nodeType":"YulFunctionCall","src":"8423:26:14"},"variableNames":[{"name":"value","nativeSrc":"8414:5:14","nodeType":"YulIdentifier","src":"8414:5:14"}]}]},"condition":{"name":"newLen","nativeSrc":"8389:6:14","nodeType":"YulIdentifier","src":"8389:6:14"},"nativeSrc":"8386:77:14","nodeType":"YulIf","src":"8386:77:14"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8483:4:14","nodeType":"YulIdentifier","src":"8483:4:14"},{"arguments":[{"name":"value","nativeSrc":"8542:5:14","nodeType":"YulIdentifier","src":"8542:5:14"},{"name":"newLen","nativeSrc":"8549:6:14","nodeType":"YulIdentifier","src":"8549:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8489:52:14","nodeType":"YulIdentifier","src":"8489:52:14"},"nativeSrc":"8489:67:14","nodeType":"YulFunctionCall","src":"8489:67:14"}],"functionName":{"name":"sstore","nativeSrc":"8476:6:14","nodeType":"YulIdentifier","src":"8476:6:14"},"nativeSrc":"8476:81:14","nodeType":"YulFunctionCall","src":"8476:81:14"},"nativeSrc":"8476:81:14","nodeType":"YulExpressionStatement","src":"8476:81:14"}]},"nativeSrc":"8337:230:14","nodeType":"YulCase","src":"8337:230:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"7690:6:14","nodeType":"YulIdentifier","src":"7690:6:14"},{"kind":"number","nativeSrc":"7698:2:14","nodeType":"YulLiteral","src":"7698:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7687:2:14","nodeType":"YulIdentifier","src":"7687:2:14"},"nativeSrc":"7687:14:14","nodeType":"YulFunctionCall","src":"7687:14:14"},"nativeSrc":"7680:887:14","nodeType":"YulSwitch","src":"7680:887:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7178:1395:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7259:4:14","nodeType":"YulTypedName","src":"7259:4:14","type":""},{"name":"src","nativeSrc":"7265:3:14","nodeType":"YulTypedName","src":"7265:3:14","type":""}],"src":"7178:1395:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2668 CODESIZE SUB DUP1 PUSH2 0x2668 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x41 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x51 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST POP POP POP PUSH2 0x539 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC0 DUP3 PUSH2 0x77 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xDF JUMPI PUSH2 0xDE PUSH2 0x88 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2 PUSH2 0x59 JUMP JUMPDEST SWAP1 POP PUSH2 0xFE DUP3 DUP3 PUSH2 0xB7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x11E JUMPI PUSH2 0x11D PUSH2 0x88 JUMP JUMPDEST JUMPDEST PUSH2 0x127 DUP3 PUSH2 0x77 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x152 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x137 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x171 PUSH2 0x16C DUP5 PUSH2 0x103 JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x18D JUMPI PUSH2 0x18C PUSH2 0x72 JUMP JUMPDEST JUMPDEST PUSH2 0x198 DUP5 DUP3 DUP6 PUSH2 0x134 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B5 JUMPI PUSH2 0x1B4 PUSH2 0x6D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1C5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E5 JUMPI PUSH2 0x1E4 PUSH2 0x63 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x203 JUMPI PUSH2 0x202 PUSH2 0x68 JUMP JUMPDEST JUMPDEST PUSH2 0x20F DUP6 DUP3 DUP7 ADD PUSH2 0x1A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x230 JUMPI PUSH2 0x22F PUSH2 0x68 JUMP JUMPDEST JUMPDEST PUSH2 0x23C DUP6 DUP3 DUP7 ADD PUSH2 0x1A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x298 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AB JUMPI PUSH2 0x2AA PUSH2 0x251 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x313 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2D6 JUMP JUMPDEST PUSH2 0x31D DUP7 DUP4 PUSH2 0x2D6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364 PUSH2 0x35F PUSH2 0x35A DUP5 PUSH2 0x335 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37E DUP4 PUSH2 0x349 JUMP JUMPDEST PUSH2 0x392 PUSH2 0x38A DUP3 PUSH2 0x36B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2E3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x3B2 DUP2 DUP5 DUP5 PUSH2 0x375 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x3CB PUSH1 0x0 DUP3 PUSH2 0x39F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x41B JUMPI PUSH2 0x3EC DUP2 PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x3F5 DUP5 PUSH2 0x2C6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x404 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x418 PUSH2 0x410 DUP6 PUSH2 0x2C6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3B7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43E PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x420 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x457 DUP4 DUP4 PUSH2 0x42D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x470 DUP3 PUSH2 0x246 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x489 JUMPI PUSH2 0x488 PUSH2 0x88 JUMP JUMPDEST JUMPDEST PUSH2 0x493 DUP3 SLOAD PUSH2 0x280 JUMP JUMPDEST PUSH2 0x49E DUP3 DUP3 DUP6 PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4BF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4C9 DUP6 DUP3 PUSH2 0x44B JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x531 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4DF DUP7 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x507 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4E2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x524 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x520 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x42D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2120 DUP1 PUSH2 0x548 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x950 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA05 JUMP JUMPDEST DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x785 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x7E7 PUSH2 0xA05 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7FD PUSH2 0xA05 JUMP JUMPDEST DUP4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85F DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH2 0x893 DUP5 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x113E JUMP JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA80 DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB14 JUMPI POP PUSH2 0xB13 DUP2 DUP6 PUSH2 0x8BC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB52 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE4F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1008 DUP5 DUP5 DUP5 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x107F DUP5 PUSH2 0x1312 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1133 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10DE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1160 DUP4 PUSH2 0xE54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1465 JUMP JUMPDEST ISZERO PUSH2 0x1305 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D5 PUSH2 0xA05 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1233 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x130A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1370 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13AD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13DC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1405 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x142A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x144D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x145C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EE DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP5 DUP3 DUP6 ADD PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1591 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x15C3 DUP2 DUP6 PUSH2 0x1562 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 DUP5 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP5 DUP3 DUP6 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP3 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172A DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175B DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x176C DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x177D DUP7 DUP3 DUP8 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x188C DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1854 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CA DUP3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH2 0x18F3 DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 PUSH2 0x191D DUP5 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP5 DUP3 DUP6 PUSH2 0x1900 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x184A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1976 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19B8 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19C9 DUP8 DUP3 DUP9 ADD PUSH2 0x162A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE PUSH1 0x21 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B09 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2D DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x3D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C22 PUSH1 0x2D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C51 DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x18 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x29 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6C DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1D76 DUP2 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 DUP6 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x25 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x24 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x19 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x32 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x2038 DUP2 DUP6 PUSH2 0x2012 JUMP JUMPDEST SWAP4 POP PUSH2 0x2048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x2051 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x208B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x209D DUP2 DUP5 PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20B7 DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D2 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E1 DUP5 DUP3 DUP6 ADD PUSH2 0x20A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SWAP5 GASLIMIT 0xCB 0xDD AND 0x4B LOG4 0xF SWAP2 DUP1 GASPRICE 0xC6 0xE3 0xC7 PUSH21 0x980E80D10ED0CD2AE9AA0DBF822E6C9A64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ","sourceMap":"628:16377:1:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;628:16377;;7:75:14;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:248::-;1692:1;1702:113;1716:6;1713:1;1710:13;1702:113;;;1801:1;1796:3;1792:11;1786:18;1782:1;1777:3;1773:11;1766:39;1738:2;1735:1;1731:10;1726:15;;1702:113;;;1849:1;1840:6;1835:3;1831:16;1824:27;1672:186;1610:248;;;:::o;1864:434::-;1953:5;1978:66;1994:49;2036:6;1994:49;:::i;:::-;1978:66;:::i;:::-;1969:75;;2067:6;2060:5;2053:21;2105:4;2098:5;2094:16;2143:3;2134:6;2129:3;2125:16;2122:25;2119:112;;;2150:79;;:::i;:::-;2119:112;2240:52;2285:6;2280:3;2275;2240:52;:::i;:::-;1959:339;1864:434;;;;;:::o;2318:355::-;2385:5;2434:3;2427:4;2419:6;2415:17;2411:27;2401:122;;2442:79;;:::i;:::-;2401:122;2552:6;2546:13;2577:90;2663:3;2655:6;2648:4;2640:6;2636:17;2577:90;:::i;:::-;2568:99;;2391:282;2318:355;;;;:::o;2679:853::-;2778:6;2786;2835:2;2823:9;2814:7;2810:23;2806:32;2803:119;;;2841:79;;:::i;:::-;2803:119;2982:1;2971:9;2967:17;2961:24;3012:18;3004:6;3001:30;2998:117;;;3034:79;;:::i;:::-;2998:117;3139:74;3205:7;3196:6;3185:9;3181:22;3139:74;:::i;:::-;3129:84;;2932:291;3283:2;3272:9;3268:18;3262:25;3314:18;3306:6;3303:30;3300:117;;;3336:79;;:::i;:::-;3300:117;3441:74;3507:7;3498:6;3487:9;3483:22;3441:74;:::i;:::-;3431:84;;3233:292;2679:853;;;;;:::o;3538:99::-;3590:6;3624:5;3618:12;3608:22;;3538:99;;;:::o;3643:180::-;3691:77;3688:1;3681:88;3788:4;3785:1;3778:15;3812:4;3809:1;3802:15;3829:320;3873:6;3910:1;3904:4;3900:12;3890:22;;3957:1;3951:4;3947:12;3978:18;3968:81;;4034:4;4026:6;4022:17;4012:27;;3968:81;4096:2;4088:6;4085:14;4065:18;4062:38;4059:84;;4115:18;;:::i;:::-;4059:84;3880:269;3829:320;;;:::o;4155:141::-;4204:4;4227:3;4219:11;;4250:3;4247:1;4240:14;4284:4;4281:1;4271:18;4263:26;;4155:141;;;:::o;4302:93::-;4339:6;4386:2;4381;4374:5;4370:14;4366:23;4356:33;;4302:93;;;:::o;4401:107::-;4445:8;4495:5;4489:4;4485:16;4464:37;;4401:107;;;;:::o;4514:393::-;4583:6;4633:1;4621:10;4617:18;4656:97;4686:66;4675:9;4656:97;:::i;:::-;4774:39;4804:8;4793:9;4774:39;:::i;:::-;4762:51;;4846:4;4842:9;4835:5;4831:21;4822:30;;4895:4;4885:8;4881:19;4874:5;4871:30;4861:40;;4590:317;;4514:393;;;;;:::o;4913:77::-;4950:7;4979:5;4968:16;;4913:77;;;:::o;4996:60::-;5024:3;5045:5;5038:12;;4996:60;;;:::o;5062:142::-;5112:9;5145:53;5163:34;5172:24;5190:5;5172:24;:::i;:::-;5163:34;:::i;:::-;5145:53;:::i;:::-;5132:66;;5062:142;;;:::o;5210:75::-;5253:3;5274:5;5267:12;;5210:75;;;:::o;5291:269::-;5401:39;5432:7;5401:39;:::i;:::-;5462:91;5511:41;5535:16;5511:41;:::i;:::-;5503:6;5496:4;5490:11;5462:91;:::i;:::-;5456:4;5449:105;5367:193;5291:269;;;:::o;5566:73::-;5611:3;5566:73;:::o;5645:189::-;5722:32;;:::i;:::-;5763:65;5821:6;5813;5807:4;5763:65;:::i;:::-;5698:136;5645:189;;:::o;5840:186::-;5900:120;5917:3;5910:5;5907:14;5900:120;;;5971:39;6008:1;6001:5;5971:39;:::i;:::-;5944:1;5937:5;5933:13;5924:22;;5900:120;;;5840:186;;:::o;6032:543::-;6133:2;6128:3;6125:11;6122:446;;;6167:38;6199:5;6167:38;:::i;:::-;6251:29;6269:10;6251:29;:::i;:::-;6241:8;6237:44;6434:2;6422:10;6419:18;6416:49;;;6455:8;6440:23;;6416:49;6478:80;6534:22;6552:3;6534:22;:::i;:::-;6524:8;6520:37;6507:11;6478:80;:::i;:::-;6137:431;;6122:446;6032:543;;;:::o;6581:117::-;6635:8;6685:5;6679:4;6675:16;6654:37;;6581:117;;;;:::o;6704:169::-;6748:6;6781:51;6829:1;6825:6;6817:5;6814:1;6810:13;6781:51;:::i;:::-;6777:56;6862:4;6856;6852:15;6842:25;;6755:118;6704:169;;;;:::o;6878:295::-;6954:4;7100:29;7125:3;7119:4;7100:29;:::i;:::-;7092:37;;7162:3;7159:1;7155:11;7149:4;7146:21;7138:29;;6878:295;;;;:::o;7178:1395::-;7295:37;7328:3;7295:37;:::i;:::-;7397:18;7389:6;7386:30;7383:56;;;7419:18;;:::i;:::-;7383:56;7463:38;7495:4;7489:11;7463:38;:::i;:::-;7548:67;7608:6;7600;7594:4;7548:67;:::i;:::-;7642:1;7666:4;7653:17;;7698:2;7690:6;7687:14;7715:1;7710:618;;;;8372:1;8389:6;8386:77;;;8438:9;8433:3;8429:19;8423:26;8414:35;;8386:77;8489:67;8549:6;8542:5;8489:67;:::i;:::-;8483:4;8476:81;8345:222;7680:887;;7710:618;7762:4;7758:9;7750:6;7746:22;7796:37;7828:4;7796:37;:::i;:::-;7855:1;7869:208;7883:7;7880:1;7877:14;7869:208;;;7962:9;7957:3;7953:19;7947:26;7939:6;7932:42;8013:1;8005:6;8001:14;7991:24;;8060:2;8049:9;8045:18;8032:31;;7906:4;7903:1;7899:12;7894:17;;7869:208;;;8105:6;8096:7;8093:19;8090:179;;;8163:9;8158:3;8154:19;8148:26;8206:48;8248:4;8240:6;8236:17;8225:9;8206:48;:::i;:::-;8198:6;8191:64;8113:156;8090:179;8315:1;8311;8303:6;8299:14;8295:22;8289:4;8282:36;7717:611;;;7680:887;;7270:1303;;;7178:1395;;:::o;628:16377:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_975":{"entryPoint":4485,"id":975,"parameterSlots":4,"returnSlots":0},"@_approve_841":{"entryPoint":2573,"id":841,"parameterSlots":2,"returnSlots":0},"@_baseURI_278":{"entryPoint":4185,"id":278,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_962":{"entryPoint":4479,"id":962,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_949":{"entryPoint":4491,"id":949,"parameterSlots":4,"returnSlots":1},"@_exists_510":{"entryPoint":4414,"id":510,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_544":{"entryPoint":2758,"id":544,"parameterSlots":2,"returnSlots":1},"@_msgSender_1494":{"entryPoint":2565,"id":1494,"parameterSlots":0,"returnSlots":1},"@_ownerOf_492":{"entryPoint":3668,"id":492,"parameterSlots":1,"returnSlots":1},"@_requireMinted_887":{"entryPoint":2490,"id":887,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_479":{"entryPoint":4093,"id":479,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_873":{"entryPoint":3729,"id":873,"parameterSlots":3,"returnSlots":0},"@_transfer_817":{"entryPoint":2907,"id":817,"parameterSlots":3,"returnSlots":0},"@approve_321":{"entryPoint":1142,"id":321,"parameterSlots":2,"returnSlots":0},"@balanceOf_182":{"entryPoint":1683,"id":182,"parameterSlots":1,"returnSlots":1},"@getApproved_339":{"entryPoint":1072,"id":339,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_374":{"entryPoint":2236,"id":374,"parameterSlots":2,"returnSlots":1},"@isContract_1170":{"entryPoint":5221,"id":1170,"parameterSlots":1,"returnSlots":1},"@log10_2480":{"entryPoint":4882,"id":2480,"parameterSlots":1,"returnSlots":1},"@name_220":{"entryPoint":926,"id":220,"parameterSlots":0,"returnSlots":1},"@ownerOf_210":{"entryPoint":1549,"id":210,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_420":{"entryPoint":1517,"id":420,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_450":{"entryPoint":2034,"id":450,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_356":{"entryPoint":2012,"id":356,"parameterSlots":2,"returnSlots":0},"@supportsInterface_158":{"entryPoint":700,"id":158,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1764":{"entryPoint":2384,"id":1764,"parameterSlots":1,"returnSlots":1},"@symbol_230":{"entryPoint":1866,"id":230,"parameterSlots":0,"returnSlots":1},"@toString_1571":{"entryPoint":4208,"id":1571,"parameterSlots":1,"returnSlots":1},"@tokenURI_269":{"entryPoint":2132,"id":269,"parameterSlots":1,"returnSlots":1},"@transferFrom_401":{"entryPoint":1421,"id":401,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6415,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5674,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6658,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5940,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6527,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6154,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5876,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5790,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8085,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7685,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7831,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7939,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7297,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6897,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7043,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6068,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7570,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5805,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8284,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7224,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8120,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7720,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7974,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7478,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7332,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7078,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6083,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6324,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5256,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6351,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8199,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5463,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8210,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5474,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7510,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5772,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5409,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5276,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5740,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5641,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6400,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5491,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6769,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6275,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x12":{"entryPoint":8152,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6722,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6228,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6218,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6223,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5271,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5266,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5533,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7110,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8006,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7606,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7752,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":7898,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7364,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7256,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6818,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":6964,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5832,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6110,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5320,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5651,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:23154:14","nodeType":"YulBlock","src":"0:23154:14","statements":[{"body":{"nativeSrc":"47:35:14","nodeType":"YulBlock","src":"47:35:14","statements":[{"nativeSrc":"57:19:14","nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:14","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:14","nodeType":"YulIdentifier","src":"67:5:14"},"nativeSrc":"67:9:14","nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:14","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:14","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:14","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nativeSrc":"177:28:14","nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:14","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:14","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:14","nodeType":"YulIdentifier","src":"187:6:14"},"nativeSrc":"187:12:14","nodeType":"YulFunctionCall","src":"187:12:14"},"nativeSrc":"187:12:14","nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:14","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nativeSrc":"300:28:14","nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:14","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:14","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:14","nodeType":"YulIdentifier","src":"310:6:14"},"nativeSrc":"310:12:14","nodeType":"YulFunctionCall","src":"310:12:14"},"nativeSrc":"310:12:14","nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:14","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nativeSrc":"378:105:14","nodeType":"YulBlock","src":"378:105:14","statements":[{"nativeSrc":"388:89:14","nodeType":"YulAssignment","src":"388:89:14","value":{"arguments":[{"name":"value","nativeSrc":"403:5:14","nodeType":"YulIdentifier","src":"403:5:14"},{"kind":"number","nativeSrc":"410:66:14","nodeType":"YulLiteral","src":"410:66:14","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:14","nodeType":"YulIdentifier","src":"399:3:14"},"nativeSrc":"399:78:14","nodeType":"YulFunctionCall","src":"399:78:14"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:14","nodeType":"YulIdentifier","src":"388:7:14"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:14","nodeType":"YulTypedName","src":"360:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:14","nodeType":"YulTypedName","src":"370:7:14","type":""}],"src":"334:149:14"},{"body":{"nativeSrc":"531:78:14","nodeType":"YulBlock","src":"531:78:14","statements":[{"body":{"nativeSrc":"587:16:14","nodeType":"YulBlock","src":"587:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:14","nodeType":"YulLiteral","src":"596:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:14","nodeType":"YulLiteral","src":"599:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:14","nodeType":"YulIdentifier","src":"589:6:14"},"nativeSrc":"589:12:14","nodeType":"YulFunctionCall","src":"589:12:14"},"nativeSrc":"589:12:14","nodeType":"YulExpressionStatement","src":"589:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:14","nodeType":"YulIdentifier","src":"554:5:14"},{"arguments":[{"name":"value","nativeSrc":"578:5:14","nodeType":"YulIdentifier","src":"578:5:14"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:14","nodeType":"YulIdentifier","src":"561:16:14"},"nativeSrc":"561:23:14","nodeType":"YulFunctionCall","src":"561:23:14"}],"functionName":{"name":"eq","nativeSrc":"551:2:14","nodeType":"YulIdentifier","src":"551:2:14"},"nativeSrc":"551:34:14","nodeType":"YulFunctionCall","src":"551:34:14"}],"functionName":{"name":"iszero","nativeSrc":"544:6:14","nodeType":"YulIdentifier","src":"544:6:14"},"nativeSrc":"544:42:14","nodeType":"YulFunctionCall","src":"544:42:14"},"nativeSrc":"541:62:14","nodeType":"YulIf","src":"541:62:14"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:14","nodeType":"YulTypedName","src":"524:5:14","type":""}],"src":"489:120:14"},{"body":{"nativeSrc":"666:86:14","nodeType":"YulBlock","src":"666:86:14","statements":[{"nativeSrc":"676:29:14","nodeType":"YulAssignment","src":"676:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:14","nodeType":"YulIdentifier","src":"698:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:14","nodeType":"YulIdentifier","src":"685:12:14"},"nativeSrc":"685:20:14","nodeType":"YulFunctionCall","src":"685:20:14"},"variableNames":[{"name":"value","nativeSrc":"676:5:14","nodeType":"YulIdentifier","src":"676:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:14","nodeType":"YulIdentifier","src":"740:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:14","nodeType":"YulIdentifier","src":"714:25:14"},"nativeSrc":"714:32:14","nodeType":"YulFunctionCall","src":"714:32:14"},"nativeSrc":"714:32:14","nodeType":"YulExpressionStatement","src":"714:32:14"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:14","nodeType":"YulTypedName","src":"644:6:14","type":""},{"name":"end","nativeSrc":"652:3:14","nodeType":"YulTypedName","src":"652:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:14","nodeType":"YulTypedName","src":"660:5:14","type":""}],"src":"615:137:14"},{"body":{"nativeSrc":"823:262:14","nodeType":"YulBlock","src":"823:262:14","statements":[{"body":{"nativeSrc":"869:83:14","nodeType":"YulBlock","src":"869:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:14","nodeType":"YulIdentifier","src":"871:77:14"},"nativeSrc":"871:79:14","nodeType":"YulFunctionCall","src":"871:79:14"},"nativeSrc":"871:79:14","nodeType":"YulExpressionStatement","src":"871:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:14","nodeType":"YulIdentifier","src":"844:7:14"},{"name":"headStart","nativeSrc":"853:9:14","nodeType":"YulIdentifier","src":"853:9:14"}],"functionName":{"name":"sub","nativeSrc":"840:3:14","nodeType":"YulIdentifier","src":"840:3:14"},"nativeSrc":"840:23:14","nodeType":"YulFunctionCall","src":"840:23:14"},{"kind":"number","nativeSrc":"865:2:14","nodeType":"YulLiteral","src":"865:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:14","nodeType":"YulIdentifier","src":"836:3:14"},"nativeSrc":"836:32:14","nodeType":"YulFunctionCall","src":"836:32:14"},"nativeSrc":"833:119:14","nodeType":"YulIf","src":"833:119:14"},{"nativeSrc":"962:116:14","nodeType":"YulBlock","src":"962:116:14","statements":[{"nativeSrc":"977:15:14","nodeType":"YulVariableDeclaration","src":"977:15:14","value":{"kind":"number","nativeSrc":"991:1:14","nodeType":"YulLiteral","src":"991:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:14","nodeType":"YulTypedName","src":"981:6:14","type":""}]},{"nativeSrc":"1006:62:14","nodeType":"YulAssignment","src":"1006:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:14","nodeType":"YulIdentifier","src":"1040:9:14"},{"name":"offset","nativeSrc":"1051:6:14","nodeType":"YulIdentifier","src":"1051:6:14"}],"functionName":{"name":"add","nativeSrc":"1036:3:14","nodeType":"YulIdentifier","src":"1036:3:14"},"nativeSrc":"1036:22:14","nodeType":"YulFunctionCall","src":"1036:22:14"},{"name":"dataEnd","nativeSrc":"1060:7:14","nodeType":"YulIdentifier","src":"1060:7:14"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:14","nodeType":"YulIdentifier","src":"1016:19:14"},"nativeSrc":"1016:52:14","nodeType":"YulFunctionCall","src":"1016:52:14"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:14","nodeType":"YulIdentifier","src":"1006:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:14","nodeType":"YulTypedName","src":"793:9:14","type":""},{"name":"dataEnd","nativeSrc":"804:7:14","nodeType":"YulTypedName","src":"804:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:14","nodeType":"YulTypedName","src":"816:6:14","type":""}],"src":"758:327:14"},{"body":{"nativeSrc":"1133:48:14","nodeType":"YulBlock","src":"1133:48:14","statements":[{"nativeSrc":"1143:32:14","nodeType":"YulAssignment","src":"1143:32:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:14","nodeType":"YulIdentifier","src":"1168:5:14"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:14","nodeType":"YulIdentifier","src":"1161:6:14"},"nativeSrc":"1161:13:14","nodeType":"YulFunctionCall","src":"1161:13:14"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:14","nodeType":"YulIdentifier","src":"1154:6:14"},"nativeSrc":"1154:21:14","nodeType":"YulFunctionCall","src":"1154:21:14"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:14","nodeType":"YulIdentifier","src":"1143:7:14"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:14","nodeType":"YulTypedName","src":"1115:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:14","nodeType":"YulTypedName","src":"1125:7:14","type":""}],"src":"1091:90:14"},{"body":{"nativeSrc":"1246:50:14","nodeType":"YulBlock","src":"1246:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:14","nodeType":"YulIdentifier","src":"1263:3:14"},{"arguments":[{"name":"value","nativeSrc":"1283:5:14","nodeType":"YulIdentifier","src":"1283:5:14"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:14","nodeType":"YulIdentifier","src":"1268:14:14"},"nativeSrc":"1268:21:14","nodeType":"YulFunctionCall","src":"1268:21:14"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:14","nodeType":"YulIdentifier","src":"1256:6:14"},"nativeSrc":"1256:34:14","nodeType":"YulFunctionCall","src":"1256:34:14"},"nativeSrc":"1256:34:14","nodeType":"YulExpressionStatement","src":"1256:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:14","nodeType":"YulTypedName","src":"1234:5:14","type":""},{"name":"pos","nativeSrc":"1241:3:14","nodeType":"YulTypedName","src":"1241:3:14","type":""}],"src":"1187:109:14"},{"body":{"nativeSrc":"1394:118:14","nodeType":"YulBlock","src":"1394:118:14","statements":[{"nativeSrc":"1404:26:14","nodeType":"YulAssignment","src":"1404:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:14","nodeType":"YulIdentifier","src":"1416:9:14"},{"kind":"number","nativeSrc":"1427:2:14","nodeType":"YulLiteral","src":"1427:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:14","nodeType":"YulIdentifier","src":"1412:3:14"},"nativeSrc":"1412:18:14","nodeType":"YulFunctionCall","src":"1412:18:14"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:14","nodeType":"YulIdentifier","src":"1404:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:14","nodeType":"YulIdentifier","src":"1478:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:14","nodeType":"YulIdentifier","src":"1491:9:14"},{"kind":"number","nativeSrc":"1502:1:14","nodeType":"YulLiteral","src":"1502:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:14","nodeType":"YulIdentifier","src":"1487:3:14"},"nativeSrc":"1487:17:14","nodeType":"YulFunctionCall","src":"1487:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:14","nodeType":"YulIdentifier","src":"1440:37:14"},"nativeSrc":"1440:65:14","nodeType":"YulFunctionCall","src":"1440:65:14"},"nativeSrc":"1440:65:14","nodeType":"YulExpressionStatement","src":"1440:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:14","nodeType":"YulTypedName","src":"1366:9:14","type":""},{"name":"value0","nativeSrc":"1378:6:14","nodeType":"YulTypedName","src":"1378:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:14","nodeType":"YulTypedName","src":"1389:4:14","type":""}],"src":"1302:210:14"},{"body":{"nativeSrc":"1577:40:14","nodeType":"YulBlock","src":"1577:40:14","statements":[{"nativeSrc":"1588:22:14","nodeType":"YulAssignment","src":"1588:22:14","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:14","nodeType":"YulIdentifier","src":"1604:5:14"}],"functionName":{"name":"mload","nativeSrc":"1598:5:14","nodeType":"YulIdentifier","src":"1598:5:14"},"nativeSrc":"1598:12:14","nodeType":"YulFunctionCall","src":"1598:12:14"},"variableNames":[{"name":"length","nativeSrc":"1588:6:14","nodeType":"YulIdentifier","src":"1588:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:14","nodeType":"YulTypedName","src":"1560:5:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:14","nodeType":"YulTypedName","src":"1570:6:14","type":""}],"src":"1518:99:14"},{"body":{"nativeSrc":"1719:73:14","nodeType":"YulBlock","src":"1719:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:14","nodeType":"YulIdentifier","src":"1736:3:14"},{"name":"length","nativeSrc":"1741:6:14","nodeType":"YulIdentifier","src":"1741:6:14"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:14","nodeType":"YulIdentifier","src":"1729:6:14"},"nativeSrc":"1729:19:14","nodeType":"YulFunctionCall","src":"1729:19:14"},"nativeSrc":"1729:19:14","nodeType":"YulExpressionStatement","src":"1729:19:14"},{"nativeSrc":"1757:29:14","nodeType":"YulAssignment","src":"1757:29:14","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:14","nodeType":"YulIdentifier","src":"1776:3:14"},{"kind":"number","nativeSrc":"1781:4:14","nodeType":"YulLiteral","src":"1781:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:14","nodeType":"YulIdentifier","src":"1772:3:14"},"nativeSrc":"1772:14:14","nodeType":"YulFunctionCall","src":"1772:14:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:14","nodeType":"YulIdentifier","src":"1757:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:14","nodeType":"YulTypedName","src":"1691:3:14","type":""},{"name":"length","nativeSrc":"1696:6:14","nodeType":"YulTypedName","src":"1696:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:14","nodeType":"YulTypedName","src":"1707:11:14","type":""}],"src":"1623:169:14"},{"body":{"nativeSrc":"1860:186:14","nodeType":"YulBlock","src":"1860:186:14","statements":[{"nativeSrc":"1871:10:14","nodeType":"YulVariableDeclaration","src":"1871:10:14","value":{"kind":"number","nativeSrc":"1880:1:14","nodeType":"YulLiteral","src":"1880:1:14","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:14","nodeType":"YulTypedName","src":"1875:1:14","type":""}]},{"body":{"nativeSrc":"1940:63:14","nodeType":"YulBlock","src":"1940:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:14","nodeType":"YulIdentifier","src":"1965:3:14"},{"name":"i","nativeSrc":"1970:1:14","nodeType":"YulIdentifier","src":"1970:1:14"}],"functionName":{"name":"add","nativeSrc":"1961:3:14","nodeType":"YulIdentifier","src":"1961:3:14"},"nativeSrc":"1961:11:14","nodeType":"YulFunctionCall","src":"1961:11:14"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:14","nodeType":"YulIdentifier","src":"1984:3:14"},{"name":"i","nativeSrc":"1989:1:14","nodeType":"YulIdentifier","src":"1989:1:14"}],"functionName":{"name":"add","nativeSrc":"1980:3:14","nodeType":"YulIdentifier","src":"1980:3:14"},"nativeSrc":"1980:11:14","nodeType":"YulFunctionCall","src":"1980:11:14"}],"functionName":{"name":"mload","nativeSrc":"1974:5:14","nodeType":"YulIdentifier","src":"1974:5:14"},"nativeSrc":"1974:18:14","nodeType":"YulFunctionCall","src":"1974:18:14"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:14","nodeType":"YulIdentifier","src":"1954:6:14"},"nativeSrc":"1954:39:14","nodeType":"YulFunctionCall","src":"1954:39:14"},"nativeSrc":"1954:39:14","nodeType":"YulExpressionStatement","src":"1954:39:14"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:14","nodeType":"YulIdentifier","src":"1901:1:14"},{"name":"length","nativeSrc":"1904:6:14","nodeType":"YulIdentifier","src":"1904:6:14"}],"functionName":{"name":"lt","nativeSrc":"1898:2:14","nodeType":"YulIdentifier","src":"1898:2:14"},"nativeSrc":"1898:13:14","nodeType":"YulFunctionCall","src":"1898:13:14"},"nativeSrc":"1890:113:14","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:14","nodeType":"YulBlock","src":"1912:19:14","statements":[{"nativeSrc":"1914:15:14","nodeType":"YulAssignment","src":"1914:15:14","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:14","nodeType":"YulIdentifier","src":"1923:1:14"},{"kind":"number","nativeSrc":"1926:2:14","nodeType":"YulLiteral","src":"1926:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:14","nodeType":"YulIdentifier","src":"1919:3:14"},"nativeSrc":"1919:10:14","nodeType":"YulFunctionCall","src":"1919:10:14"},"variableNames":[{"name":"i","nativeSrc":"1914:1:14","nodeType":"YulIdentifier","src":"1914:1:14"}]}]},"pre":{"nativeSrc":"1894:3:14","nodeType":"YulBlock","src":"1894:3:14","statements":[]},"src":"1890:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:14","nodeType":"YulIdentifier","src":"2023:3:14"},{"name":"length","nativeSrc":"2028:6:14","nodeType":"YulIdentifier","src":"2028:6:14"}],"functionName":{"name":"add","nativeSrc":"2019:3:14","nodeType":"YulIdentifier","src":"2019:3:14"},"nativeSrc":"2019:16:14","nodeType":"YulFunctionCall","src":"2019:16:14"},{"kind":"number","nativeSrc":"2037:1:14","nodeType":"YulLiteral","src":"2037:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:14","nodeType":"YulIdentifier","src":"2012:6:14"},"nativeSrc":"2012:27:14","nodeType":"YulFunctionCall","src":"2012:27:14"},"nativeSrc":"2012:27:14","nodeType":"YulExpressionStatement","src":"2012:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:14","nodeType":"YulTypedName","src":"1842:3:14","type":""},{"name":"dst","nativeSrc":"1847:3:14","nodeType":"YulTypedName","src":"1847:3:14","type":""},{"name":"length","nativeSrc":"1852:6:14","nodeType":"YulTypedName","src":"1852:6:14","type":""}],"src":"1798:248:14"},{"body":{"nativeSrc":"2100:54:14","nodeType":"YulBlock","src":"2100:54:14","statements":[{"nativeSrc":"2110:38:14","nodeType":"YulAssignment","src":"2110:38:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:14","nodeType":"YulIdentifier","src":"2128:5:14"},{"kind":"number","nativeSrc":"2135:2:14","nodeType":"YulLiteral","src":"2135:2:14","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:14","nodeType":"YulIdentifier","src":"2124:3:14"},"nativeSrc":"2124:14:14","nodeType":"YulFunctionCall","src":"2124:14:14"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:14","nodeType":"YulLiteral","src":"2144:2:14","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:14","nodeType":"YulIdentifier","src":"2140:3:14"},"nativeSrc":"2140:7:14","nodeType":"YulFunctionCall","src":"2140:7:14"}],"functionName":{"name":"and","nativeSrc":"2120:3:14","nodeType":"YulIdentifier","src":"2120:3:14"},"nativeSrc":"2120:28:14","nodeType":"YulFunctionCall","src":"2120:28:14"},"variableNames":[{"name":"result","nativeSrc":"2110:6:14","nodeType":"YulIdentifier","src":"2110:6:14"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:14","nodeType":"YulTypedName","src":"2083:5:14","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:14","nodeType":"YulTypedName","src":"2093:6:14","type":""}],"src":"2052:102:14"},{"body":{"nativeSrc":"2252:285:14","nodeType":"YulBlock","src":"2252:285:14","statements":[{"nativeSrc":"2262:53:14","nodeType":"YulVariableDeclaration","src":"2262:53:14","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:14","nodeType":"YulIdentifier","src":"2309:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:14","nodeType":"YulIdentifier","src":"2276:32:14"},"nativeSrc":"2276:39:14","nodeType":"YulFunctionCall","src":"2276:39:14"},"variables":[{"name":"length","nativeSrc":"2266:6:14","nodeType":"YulTypedName","src":"2266:6:14","type":""}]},{"nativeSrc":"2324:78:14","nodeType":"YulAssignment","src":"2324:78:14","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:14","nodeType":"YulIdentifier","src":"2390:3:14"},{"name":"length","nativeSrc":"2395:6:14","nodeType":"YulIdentifier","src":"2395:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:14","nodeType":"YulIdentifier","src":"2331:58:14"},"nativeSrc":"2331:71:14","nodeType":"YulFunctionCall","src":"2331:71:14"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:14","nodeType":"YulIdentifier","src":"2324:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:14","nodeType":"YulIdentifier","src":"2450:5:14"},{"kind":"number","nativeSrc":"2457:4:14","nodeType":"YulLiteral","src":"2457:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:14","nodeType":"YulIdentifier","src":"2446:3:14"},"nativeSrc":"2446:16:14","nodeType":"YulFunctionCall","src":"2446:16:14"},{"name":"pos","nativeSrc":"2464:3:14","nodeType":"YulIdentifier","src":"2464:3:14"},{"name":"length","nativeSrc":"2469:6:14","nodeType":"YulIdentifier","src":"2469:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:14","nodeType":"YulIdentifier","src":"2411:34:14"},"nativeSrc":"2411:65:14","nodeType":"YulFunctionCall","src":"2411:65:14"},"nativeSrc":"2411:65:14","nodeType":"YulExpressionStatement","src":"2411:65:14"},{"nativeSrc":"2485:46:14","nodeType":"YulAssignment","src":"2485:46:14","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:14","nodeType":"YulIdentifier","src":"2496:3:14"},{"arguments":[{"name":"length","nativeSrc":"2523:6:14","nodeType":"YulIdentifier","src":"2523:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:14","nodeType":"YulIdentifier","src":"2501:21:14"},"nativeSrc":"2501:29:14","nodeType":"YulFunctionCall","src":"2501:29:14"}],"functionName":{"name":"add","nativeSrc":"2492:3:14","nodeType":"YulIdentifier","src":"2492:3:14"},"nativeSrc":"2492:39:14","nodeType":"YulFunctionCall","src":"2492:39:14"},"variableNames":[{"name":"end","nativeSrc":"2485:3:14","nodeType":"YulIdentifier","src":"2485:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:14","nodeType":"YulTypedName","src":"2233:5:14","type":""},{"name":"pos","nativeSrc":"2240:3:14","nodeType":"YulTypedName","src":"2240:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:14","nodeType":"YulTypedName","src":"2248:3:14","type":""}],"src":"2160:377:14"},{"body":{"nativeSrc":"2661:195:14","nodeType":"YulBlock","src":"2661:195:14","statements":[{"nativeSrc":"2671:26:14","nodeType":"YulAssignment","src":"2671:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:14","nodeType":"YulIdentifier","src":"2683:9:14"},{"kind":"number","nativeSrc":"2694:2:14","nodeType":"YulLiteral","src":"2694:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:14","nodeType":"YulIdentifier","src":"2679:3:14"},"nativeSrc":"2679:18:14","nodeType":"YulFunctionCall","src":"2679:18:14"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:14","nodeType":"YulIdentifier","src":"2671:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:14","nodeType":"YulIdentifier","src":"2718:9:14"},{"kind":"number","nativeSrc":"2729:1:14","nodeType":"YulLiteral","src":"2729:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:14","nodeType":"YulIdentifier","src":"2714:3:14"},"nativeSrc":"2714:17:14","nodeType":"YulFunctionCall","src":"2714:17:14"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:14","nodeType":"YulIdentifier","src":"2737:4:14"},{"name":"headStart","nativeSrc":"2743:9:14","nodeType":"YulIdentifier","src":"2743:9:14"}],"functionName":{"name":"sub","nativeSrc":"2733:3:14","nodeType":"YulIdentifier","src":"2733:3:14"},"nativeSrc":"2733:20:14","nodeType":"YulFunctionCall","src":"2733:20:14"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:14","nodeType":"YulIdentifier","src":"2707:6:14"},"nativeSrc":"2707:47:14","nodeType":"YulFunctionCall","src":"2707:47:14"},"nativeSrc":"2707:47:14","nodeType":"YulExpressionStatement","src":"2707:47:14"},{"nativeSrc":"2763:86:14","nodeType":"YulAssignment","src":"2763:86:14","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:14","nodeType":"YulIdentifier","src":"2835:6:14"},{"name":"tail","nativeSrc":"2844:4:14","nodeType":"YulIdentifier","src":"2844:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:14","nodeType":"YulIdentifier","src":"2771:63:14"},"nativeSrc":"2771:78:14","nodeType":"YulFunctionCall","src":"2771:78:14"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:14","nodeType":"YulIdentifier","src":"2763:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:14","nodeType":"YulTypedName","src":"2633:9:14","type":""},{"name":"value0","nativeSrc":"2645:6:14","nodeType":"YulTypedName","src":"2645:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:14","nodeType":"YulTypedName","src":"2656:4:14","type":""}],"src":"2543:313:14"},{"body":{"nativeSrc":"2907:32:14","nodeType":"YulBlock","src":"2907:32:14","statements":[{"nativeSrc":"2917:16:14","nodeType":"YulAssignment","src":"2917:16:14","value":{"name":"value","nativeSrc":"2928:5:14","nodeType":"YulIdentifier","src":"2928:5:14"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:14","nodeType":"YulIdentifier","src":"2917:7:14"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:14","nodeType":"YulTypedName","src":"2889:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:14","nodeType":"YulTypedName","src":"2899:7:14","type":""}],"src":"2862:77:14"},{"body":{"nativeSrc":"2988:79:14","nodeType":"YulBlock","src":"2988:79:14","statements":[{"body":{"nativeSrc":"3045:16:14","nodeType":"YulBlock","src":"3045:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:14","nodeType":"YulLiteral","src":"3054:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:14","nodeType":"YulLiteral","src":"3057:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:14","nodeType":"YulIdentifier","src":"3047:6:14"},"nativeSrc":"3047:12:14","nodeType":"YulFunctionCall","src":"3047:12:14"},"nativeSrc":"3047:12:14","nodeType":"YulExpressionStatement","src":"3047:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3011:5:14","nodeType":"YulIdentifier","src":"3011:5:14"},{"arguments":[{"name":"value","nativeSrc":"3036:5:14","nodeType":"YulIdentifier","src":"3036:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3018:17:14","nodeType":"YulIdentifier","src":"3018:17:14"},"nativeSrc":"3018:24:14","nodeType":"YulFunctionCall","src":"3018:24:14"}],"functionName":{"name":"eq","nativeSrc":"3008:2:14","nodeType":"YulIdentifier","src":"3008:2:14"},"nativeSrc":"3008:35:14","nodeType":"YulFunctionCall","src":"3008:35:14"}],"functionName":{"name":"iszero","nativeSrc":"3001:6:14","nodeType":"YulIdentifier","src":"3001:6:14"},"nativeSrc":"3001:43:14","nodeType":"YulFunctionCall","src":"3001:43:14"},"nativeSrc":"2998:63:14","nodeType":"YulIf","src":"2998:63:14"}]},"name":"validator_revert_t_uint256","nativeSrc":"2945:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2981:5:14","nodeType":"YulTypedName","src":"2981:5:14","type":""}],"src":"2945:122:14"},{"body":{"nativeSrc":"3125:87:14","nodeType":"YulBlock","src":"3125:87:14","statements":[{"nativeSrc":"3135:29:14","nodeType":"YulAssignment","src":"3135:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"3157:6:14","nodeType":"YulIdentifier","src":"3157:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"3144:12:14","nodeType":"YulIdentifier","src":"3144:12:14"},"nativeSrc":"3144:20:14","nodeType":"YulFunctionCall","src":"3144:20:14"},"variableNames":[{"name":"value","nativeSrc":"3135:5:14","nodeType":"YulIdentifier","src":"3135:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3200:5:14","nodeType":"YulIdentifier","src":"3200:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3173:26:14","nodeType":"YulIdentifier","src":"3173:26:14"},"nativeSrc":"3173:33:14","nodeType":"YulFunctionCall","src":"3173:33:14"},"nativeSrc":"3173:33:14","nodeType":"YulExpressionStatement","src":"3173:33:14"}]},"name":"abi_decode_t_uint256","nativeSrc":"3073:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3103:6:14","nodeType":"YulTypedName","src":"3103:6:14","type":""},{"name":"end","nativeSrc":"3111:3:14","nodeType":"YulTypedName","src":"3111:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3119:5:14","nodeType":"YulTypedName","src":"3119:5:14","type":""}],"src":"3073:139:14"},{"body":{"nativeSrc":"3284:263:14","nodeType":"YulBlock","src":"3284:263:14","statements":[{"body":{"nativeSrc":"3330:83:14","nodeType":"YulBlock","src":"3330:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3332:77:14","nodeType":"YulIdentifier","src":"3332:77:14"},"nativeSrc":"3332:79:14","nodeType":"YulFunctionCall","src":"3332:79:14"},"nativeSrc":"3332:79:14","nodeType":"YulExpressionStatement","src":"3332:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3305:7:14","nodeType":"YulIdentifier","src":"3305:7:14"},{"name":"headStart","nativeSrc":"3314:9:14","nodeType":"YulIdentifier","src":"3314:9:14"}],"functionName":{"name":"sub","nativeSrc":"3301:3:14","nodeType":"YulIdentifier","src":"3301:3:14"},"nativeSrc":"3301:23:14","nodeType":"YulFunctionCall","src":"3301:23:14"},{"kind":"number","nativeSrc":"3326:2:14","nodeType":"YulLiteral","src":"3326:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3297:3:14","nodeType":"YulIdentifier","src":"3297:3:14"},"nativeSrc":"3297:32:14","nodeType":"YulFunctionCall","src":"3297:32:14"},"nativeSrc":"3294:119:14","nodeType":"YulIf","src":"3294:119:14"},{"nativeSrc":"3423:117:14","nodeType":"YulBlock","src":"3423:117:14","statements":[{"nativeSrc":"3438:15:14","nodeType":"YulVariableDeclaration","src":"3438:15:14","value":{"kind":"number","nativeSrc":"3452:1:14","nodeType":"YulLiteral","src":"3452:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3442:6:14","nodeType":"YulTypedName","src":"3442:6:14","type":""}]},{"nativeSrc":"3467:63:14","nodeType":"YulAssignment","src":"3467:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3502:9:14","nodeType":"YulIdentifier","src":"3502:9:14"},{"name":"offset","nativeSrc":"3513:6:14","nodeType":"YulIdentifier","src":"3513:6:14"}],"functionName":{"name":"add","nativeSrc":"3498:3:14","nodeType":"YulIdentifier","src":"3498:3:14"},"nativeSrc":"3498:22:14","nodeType":"YulFunctionCall","src":"3498:22:14"},{"name":"dataEnd","nativeSrc":"3522:7:14","nodeType":"YulIdentifier","src":"3522:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3477:20:14","nodeType":"YulIdentifier","src":"3477:20:14"},"nativeSrc":"3477:53:14","nodeType":"YulFunctionCall","src":"3477:53:14"},"variableNames":[{"name":"value0","nativeSrc":"3467:6:14","nodeType":"YulIdentifier","src":"3467:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3218:329:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3254:9:14","nodeType":"YulTypedName","src":"3254:9:14","type":""},{"name":"dataEnd","nativeSrc":"3265:7:14","nodeType":"YulTypedName","src":"3265:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3277:6:14","nodeType":"YulTypedName","src":"3277:6:14","type":""}],"src":"3218:329:14"},{"body":{"nativeSrc":"3598:81:14","nodeType":"YulBlock","src":"3598:81:14","statements":[{"nativeSrc":"3608:65:14","nodeType":"YulAssignment","src":"3608:65:14","value":{"arguments":[{"name":"value","nativeSrc":"3623:5:14","nodeType":"YulIdentifier","src":"3623:5:14"},{"kind":"number","nativeSrc":"3630:42:14","nodeType":"YulLiteral","src":"3630:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3619:3:14","nodeType":"YulIdentifier","src":"3619:3:14"},"nativeSrc":"3619:54:14","nodeType":"YulFunctionCall","src":"3619:54:14"},"variableNames":[{"name":"cleaned","nativeSrc":"3608:7:14","nodeType":"YulIdentifier","src":"3608:7:14"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3553:126:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:14","nodeType":"YulTypedName","src":"3580:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3590:7:14","nodeType":"YulTypedName","src":"3590:7:14","type":""}],"src":"3553:126:14"},{"body":{"nativeSrc":"3730:51:14","nodeType":"YulBlock","src":"3730:51:14","statements":[{"nativeSrc":"3740:35:14","nodeType":"YulAssignment","src":"3740:35:14","value":{"arguments":[{"name":"value","nativeSrc":"3769:5:14","nodeType":"YulIdentifier","src":"3769:5:14"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3751:17:14","nodeType":"YulIdentifier","src":"3751:17:14"},"nativeSrc":"3751:24:14","nodeType":"YulFunctionCall","src":"3751:24:14"},"variableNames":[{"name":"cleaned","nativeSrc":"3740:7:14","nodeType":"YulIdentifier","src":"3740:7:14"}]}]},"name":"cleanup_t_address","nativeSrc":"3685:96:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:14","nodeType":"YulTypedName","src":"3712:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3722:7:14","nodeType":"YulTypedName","src":"3722:7:14","type":""}],"src":"3685:96:14"},{"body":{"nativeSrc":"3852:53:14","nodeType":"YulBlock","src":"3852:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3869:3:14","nodeType":"YulIdentifier","src":"3869:3:14"},{"arguments":[{"name":"value","nativeSrc":"3892:5:14","nodeType":"YulIdentifier","src":"3892:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3874:17:14","nodeType":"YulIdentifier","src":"3874:17:14"},"nativeSrc":"3874:24:14","nodeType":"YulFunctionCall","src":"3874:24:14"}],"functionName":{"name":"mstore","nativeSrc":"3862:6:14","nodeType":"YulIdentifier","src":"3862:6:14"},"nativeSrc":"3862:37:14","nodeType":"YulFunctionCall","src":"3862:37:14"},"nativeSrc":"3862:37:14","nodeType":"YulExpressionStatement","src":"3862:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3787:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3840:5:14","nodeType":"YulTypedName","src":"3840:5:14","type":""},{"name":"pos","nativeSrc":"3847:3:14","nodeType":"YulTypedName","src":"3847:3:14","type":""}],"src":"3787:118:14"},{"body":{"nativeSrc":"4009:124:14","nodeType":"YulBlock","src":"4009:124:14","statements":[{"nativeSrc":"4019:26:14","nodeType":"YulAssignment","src":"4019:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"4031:9:14","nodeType":"YulIdentifier","src":"4031:9:14"},{"kind":"number","nativeSrc":"4042:2:14","nodeType":"YulLiteral","src":"4042:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:14","nodeType":"YulIdentifier","src":"4027:3:14"},"nativeSrc":"4027:18:14","nodeType":"YulFunctionCall","src":"4027:18:14"},"variableNames":[{"name":"tail","nativeSrc":"4019:4:14","nodeType":"YulIdentifier","src":"4019:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4099:6:14","nodeType":"YulIdentifier","src":"4099:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"4112:9:14","nodeType":"YulIdentifier","src":"4112:9:14"},{"kind":"number","nativeSrc":"4123:1:14","nodeType":"YulLiteral","src":"4123:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4108:3:14","nodeType":"YulIdentifier","src":"4108:3:14"},"nativeSrc":"4108:17:14","nodeType":"YulFunctionCall","src":"4108:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4055:43:14","nodeType":"YulIdentifier","src":"4055:43:14"},"nativeSrc":"4055:71:14","nodeType":"YulFunctionCall","src":"4055:71:14"},"nativeSrc":"4055:71:14","nodeType":"YulExpressionStatement","src":"4055:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3911:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3981:9:14","nodeType":"YulTypedName","src":"3981:9:14","type":""},{"name":"value0","nativeSrc":"3993:6:14","nodeType":"YulTypedName","src":"3993:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4004:4:14","nodeType":"YulTypedName","src":"4004:4:14","type":""}],"src":"3911:222:14"},{"body":{"nativeSrc":"4182:79:14","nodeType":"YulBlock","src":"4182:79:14","statements":[{"body":{"nativeSrc":"4239:16:14","nodeType":"YulBlock","src":"4239:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4248:1:14","nodeType":"YulLiteral","src":"4248:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"4251:1:14","nodeType":"YulLiteral","src":"4251:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4241:6:14","nodeType":"YulIdentifier","src":"4241:6:14"},"nativeSrc":"4241:12:14","nodeType":"YulFunctionCall","src":"4241:12:14"},"nativeSrc":"4241:12:14","nodeType":"YulExpressionStatement","src":"4241:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4205:5:14","nodeType":"YulIdentifier","src":"4205:5:14"},{"arguments":[{"name":"value","nativeSrc":"4230:5:14","nodeType":"YulIdentifier","src":"4230:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4212:17:14","nodeType":"YulIdentifier","src":"4212:17:14"},"nativeSrc":"4212:24:14","nodeType":"YulFunctionCall","src":"4212:24:14"}],"functionName":{"name":"eq","nativeSrc":"4202:2:14","nodeType":"YulIdentifier","src":"4202:2:14"},"nativeSrc":"4202:35:14","nodeType":"YulFunctionCall","src":"4202:35:14"}],"functionName":{"name":"iszero","nativeSrc":"4195:6:14","nodeType":"YulIdentifier","src":"4195:6:14"},"nativeSrc":"4195:43:14","nodeType":"YulFunctionCall","src":"4195:43:14"},"nativeSrc":"4192:63:14","nodeType":"YulIf","src":"4192:63:14"}]},"name":"validator_revert_t_address","nativeSrc":"4139:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4175:5:14","nodeType":"YulTypedName","src":"4175:5:14","type":""}],"src":"4139:122:14"},{"body":{"nativeSrc":"4319:87:14","nodeType":"YulBlock","src":"4319:87:14","statements":[{"nativeSrc":"4329:29:14","nodeType":"YulAssignment","src":"4329:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"4351:6:14","nodeType":"YulIdentifier","src":"4351:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"4338:12:14","nodeType":"YulIdentifier","src":"4338:12:14"},"nativeSrc":"4338:20:14","nodeType":"YulFunctionCall","src":"4338:20:14"},"variableNames":[{"name":"value","nativeSrc":"4329:5:14","nodeType":"YulIdentifier","src":"4329:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4394:5:14","nodeType":"YulIdentifier","src":"4394:5:14"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4367:26:14","nodeType":"YulIdentifier","src":"4367:26:14"},"nativeSrc":"4367:33:14","nodeType":"YulFunctionCall","src":"4367:33:14"},"nativeSrc":"4367:33:14","nodeType":"YulExpressionStatement","src":"4367:33:14"}]},"name":"abi_decode_t_address","nativeSrc":"4267:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4297:6:14","nodeType":"YulTypedName","src":"4297:6:14","type":""},{"name":"end","nativeSrc":"4305:3:14","nodeType":"YulTypedName","src":"4305:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4313:5:14","nodeType":"YulTypedName","src":"4313:5:14","type":""}],"src":"4267:139:14"},{"body":{"nativeSrc":"4495:391:14","nodeType":"YulBlock","src":"4495:391:14","statements":[{"body":{"nativeSrc":"4541:83:14","nodeType":"YulBlock","src":"4541:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4543:77:14","nodeType":"YulIdentifier","src":"4543:77:14"},"nativeSrc":"4543:79:14","nodeType":"YulFunctionCall","src":"4543:79:14"},"nativeSrc":"4543:79:14","nodeType":"YulExpressionStatement","src":"4543:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4516:7:14","nodeType":"YulIdentifier","src":"4516:7:14"},{"name":"headStart","nativeSrc":"4525:9:14","nodeType":"YulIdentifier","src":"4525:9:14"}],"functionName":{"name":"sub","nativeSrc":"4512:3:14","nodeType":"YulIdentifier","src":"4512:3:14"},"nativeSrc":"4512:23:14","nodeType":"YulFunctionCall","src":"4512:23:14"},{"kind":"number","nativeSrc":"4537:2:14","nodeType":"YulLiteral","src":"4537:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4508:3:14","nodeType":"YulIdentifier","src":"4508:3:14"},"nativeSrc":"4508:32:14","nodeType":"YulFunctionCall","src":"4508:32:14"},"nativeSrc":"4505:119:14","nodeType":"YulIf","src":"4505:119:14"},{"nativeSrc":"4634:117:14","nodeType":"YulBlock","src":"4634:117:14","statements":[{"nativeSrc":"4649:15:14","nodeType":"YulVariableDeclaration","src":"4649:15:14","value":{"kind":"number","nativeSrc":"4663:1:14","nodeType":"YulLiteral","src":"4663:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4653:6:14","nodeType":"YulTypedName","src":"4653:6:14","type":""}]},{"nativeSrc":"4678:63:14","nodeType":"YulAssignment","src":"4678:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4713:9:14","nodeType":"YulIdentifier","src":"4713:9:14"},{"name":"offset","nativeSrc":"4724:6:14","nodeType":"YulIdentifier","src":"4724:6:14"}],"functionName":{"name":"add","nativeSrc":"4709:3:14","nodeType":"YulIdentifier","src":"4709:3:14"},"nativeSrc":"4709:22:14","nodeType":"YulFunctionCall","src":"4709:22:14"},{"name":"dataEnd","nativeSrc":"4733:7:14","nodeType":"YulIdentifier","src":"4733:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4688:20:14","nodeType":"YulIdentifier","src":"4688:20:14"},"nativeSrc":"4688:53:14","nodeType":"YulFunctionCall","src":"4688:53:14"},"variableNames":[{"name":"value0","nativeSrc":"4678:6:14","nodeType":"YulIdentifier","src":"4678:6:14"}]}]},{"nativeSrc":"4761:118:14","nodeType":"YulBlock","src":"4761:118:14","statements":[{"nativeSrc":"4776:16:14","nodeType":"YulVariableDeclaration","src":"4776:16:14","value":{"kind":"number","nativeSrc":"4790:2:14","nodeType":"YulLiteral","src":"4790:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4780:6:14","nodeType":"YulTypedName","src":"4780:6:14","type":""}]},{"nativeSrc":"4806:63:14","nodeType":"YulAssignment","src":"4806:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4841:9:14","nodeType":"YulIdentifier","src":"4841:9:14"},{"name":"offset","nativeSrc":"4852:6:14","nodeType":"YulIdentifier","src":"4852:6:14"}],"functionName":{"name":"add","nativeSrc":"4837:3:14","nodeType":"YulIdentifier","src":"4837:3:14"},"nativeSrc":"4837:22:14","nodeType":"YulFunctionCall","src":"4837:22:14"},{"name":"dataEnd","nativeSrc":"4861:7:14","nodeType":"YulIdentifier","src":"4861:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4816:20:14","nodeType":"YulIdentifier","src":"4816:20:14"},"nativeSrc":"4816:53:14","nodeType":"YulFunctionCall","src":"4816:53:14"},"variableNames":[{"name":"value1","nativeSrc":"4806:6:14","nodeType":"YulIdentifier","src":"4806:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4412:474:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:14","nodeType":"YulTypedName","src":"4457:9:14","type":""},{"name":"dataEnd","nativeSrc":"4468:7:14","nodeType":"YulTypedName","src":"4468:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4480:6:14","nodeType":"YulTypedName","src":"4480:6:14","type":""},{"name":"value1","nativeSrc":"4488:6:14","nodeType":"YulTypedName","src":"4488:6:14","type":""}],"src":"4412:474:14"},{"body":{"nativeSrc":"4992:519:14","nodeType":"YulBlock","src":"4992:519:14","statements":[{"body":{"nativeSrc":"5038:83:14","nodeType":"YulBlock","src":"5038:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5040:77:14","nodeType":"YulIdentifier","src":"5040:77:14"},"nativeSrc":"5040:79:14","nodeType":"YulFunctionCall","src":"5040:79:14"},"nativeSrc":"5040:79:14","nodeType":"YulExpressionStatement","src":"5040:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5013:7:14","nodeType":"YulIdentifier","src":"5013:7:14"},{"name":"headStart","nativeSrc":"5022:9:14","nodeType":"YulIdentifier","src":"5022:9:14"}],"functionName":{"name":"sub","nativeSrc":"5009:3:14","nodeType":"YulIdentifier","src":"5009:3:14"},"nativeSrc":"5009:23:14","nodeType":"YulFunctionCall","src":"5009:23:14"},{"kind":"number","nativeSrc":"5034:2:14","nodeType":"YulLiteral","src":"5034:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5005:3:14","nodeType":"YulIdentifier","src":"5005:3:14"},"nativeSrc":"5005:32:14","nodeType":"YulFunctionCall","src":"5005:32:14"},"nativeSrc":"5002:119:14","nodeType":"YulIf","src":"5002:119:14"},{"nativeSrc":"5131:117:14","nodeType":"YulBlock","src":"5131:117:14","statements":[{"nativeSrc":"5146:15:14","nodeType":"YulVariableDeclaration","src":"5146:15:14","value":{"kind":"number","nativeSrc":"5160:1:14","nodeType":"YulLiteral","src":"5160:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5150:6:14","nodeType":"YulTypedName","src":"5150:6:14","type":""}]},{"nativeSrc":"5175:63:14","nodeType":"YulAssignment","src":"5175:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5210:9:14","nodeType":"YulIdentifier","src":"5210:9:14"},{"name":"offset","nativeSrc":"5221:6:14","nodeType":"YulIdentifier","src":"5221:6:14"}],"functionName":{"name":"add","nativeSrc":"5206:3:14","nodeType":"YulIdentifier","src":"5206:3:14"},"nativeSrc":"5206:22:14","nodeType":"YulFunctionCall","src":"5206:22:14"},{"name":"dataEnd","nativeSrc":"5230:7:14","nodeType":"YulIdentifier","src":"5230:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5185:20:14","nodeType":"YulIdentifier","src":"5185:20:14"},"nativeSrc":"5185:53:14","nodeType":"YulFunctionCall","src":"5185:53:14"},"variableNames":[{"name":"value0","nativeSrc":"5175:6:14","nodeType":"YulIdentifier","src":"5175:6:14"}]}]},{"nativeSrc":"5258:118:14","nodeType":"YulBlock","src":"5258:118:14","statements":[{"nativeSrc":"5273:16:14","nodeType":"YulVariableDeclaration","src":"5273:16:14","value":{"kind":"number","nativeSrc":"5287:2:14","nodeType":"YulLiteral","src":"5287:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5277:6:14","nodeType":"YulTypedName","src":"5277:6:14","type":""}]},{"nativeSrc":"5303:63:14","nodeType":"YulAssignment","src":"5303:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5338:9:14","nodeType":"YulIdentifier","src":"5338:9:14"},{"name":"offset","nativeSrc":"5349:6:14","nodeType":"YulIdentifier","src":"5349:6:14"}],"functionName":{"name":"add","nativeSrc":"5334:3:14","nodeType":"YulIdentifier","src":"5334:3:14"},"nativeSrc":"5334:22:14","nodeType":"YulFunctionCall","src":"5334:22:14"},{"name":"dataEnd","nativeSrc":"5358:7:14","nodeType":"YulIdentifier","src":"5358:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5313:20:14","nodeType":"YulIdentifier","src":"5313:20:14"},"nativeSrc":"5313:53:14","nodeType":"YulFunctionCall","src":"5313:53:14"},"variableNames":[{"name":"value1","nativeSrc":"5303:6:14","nodeType":"YulIdentifier","src":"5303:6:14"}]}]},{"nativeSrc":"5386:118:14","nodeType":"YulBlock","src":"5386:118:14","statements":[{"nativeSrc":"5401:16:14","nodeType":"YulVariableDeclaration","src":"5401:16:14","value":{"kind":"number","nativeSrc":"5415:2:14","nodeType":"YulLiteral","src":"5415:2:14","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5405:6:14","nodeType":"YulTypedName","src":"5405:6:14","type":""}]},{"nativeSrc":"5431:63:14","nodeType":"YulAssignment","src":"5431:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5466:9:14","nodeType":"YulIdentifier","src":"5466:9:14"},{"name":"offset","nativeSrc":"5477:6:14","nodeType":"YulIdentifier","src":"5477:6:14"}],"functionName":{"name":"add","nativeSrc":"5462:3:14","nodeType":"YulIdentifier","src":"5462:3:14"},"nativeSrc":"5462:22:14","nodeType":"YulFunctionCall","src":"5462:22:14"},{"name":"dataEnd","nativeSrc":"5486:7:14","nodeType":"YulIdentifier","src":"5486:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5441:20:14","nodeType":"YulIdentifier","src":"5441:20:14"},"nativeSrc":"5441:53:14","nodeType":"YulFunctionCall","src":"5441:53:14"},"variableNames":[{"name":"value2","nativeSrc":"5431:6:14","nodeType":"YulIdentifier","src":"5431:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4892:619:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4946:9:14","nodeType":"YulTypedName","src":"4946:9:14","type":""},{"name":"dataEnd","nativeSrc":"4957:7:14","nodeType":"YulTypedName","src":"4957:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4969:6:14","nodeType":"YulTypedName","src":"4969:6:14","type":""},{"name":"value1","nativeSrc":"4977:6:14","nodeType":"YulTypedName","src":"4977:6:14","type":""},{"name":"value2","nativeSrc":"4985:6:14","nodeType":"YulTypedName","src":"4985:6:14","type":""}],"src":"4892:619:14"},{"body":{"nativeSrc":"5583:263:14","nodeType":"YulBlock","src":"5583:263:14","statements":[{"body":{"nativeSrc":"5629:83:14","nodeType":"YulBlock","src":"5629:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5631:77:14","nodeType":"YulIdentifier","src":"5631:77:14"},"nativeSrc":"5631:79:14","nodeType":"YulFunctionCall","src":"5631:79:14"},"nativeSrc":"5631:79:14","nodeType":"YulExpressionStatement","src":"5631:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5604:7:14","nodeType":"YulIdentifier","src":"5604:7:14"},{"name":"headStart","nativeSrc":"5613:9:14","nodeType":"YulIdentifier","src":"5613:9:14"}],"functionName":{"name":"sub","nativeSrc":"5600:3:14","nodeType":"YulIdentifier","src":"5600:3:14"},"nativeSrc":"5600:23:14","nodeType":"YulFunctionCall","src":"5600:23:14"},{"kind":"number","nativeSrc":"5625:2:14","nodeType":"YulLiteral","src":"5625:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5596:3:14","nodeType":"YulIdentifier","src":"5596:3:14"},"nativeSrc":"5596:32:14","nodeType":"YulFunctionCall","src":"5596:32:14"},"nativeSrc":"5593:119:14","nodeType":"YulIf","src":"5593:119:14"},{"nativeSrc":"5722:117:14","nodeType":"YulBlock","src":"5722:117:14","statements":[{"nativeSrc":"5737:15:14","nodeType":"YulVariableDeclaration","src":"5737:15:14","value":{"kind":"number","nativeSrc":"5751:1:14","nodeType":"YulLiteral","src":"5751:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5741:6:14","nodeType":"YulTypedName","src":"5741:6:14","type":""}]},{"nativeSrc":"5766:63:14","nodeType":"YulAssignment","src":"5766:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5801:9:14","nodeType":"YulIdentifier","src":"5801:9:14"},{"name":"offset","nativeSrc":"5812:6:14","nodeType":"YulIdentifier","src":"5812:6:14"}],"functionName":{"name":"add","nativeSrc":"5797:3:14","nodeType":"YulIdentifier","src":"5797:3:14"},"nativeSrc":"5797:22:14","nodeType":"YulFunctionCall","src":"5797:22:14"},{"name":"dataEnd","nativeSrc":"5821:7:14","nodeType":"YulIdentifier","src":"5821:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5776:20:14","nodeType":"YulIdentifier","src":"5776:20:14"},"nativeSrc":"5776:53:14","nodeType":"YulFunctionCall","src":"5776:53:14"},"variableNames":[{"name":"value0","nativeSrc":"5766:6:14","nodeType":"YulIdentifier","src":"5766:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5517:329:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5553:9:14","nodeType":"YulTypedName","src":"5553:9:14","type":""},{"name":"dataEnd","nativeSrc":"5564:7:14","nodeType":"YulTypedName","src":"5564:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5576:6:14","nodeType":"YulTypedName","src":"5576:6:14","type":""}],"src":"5517:329:14"},{"body":{"nativeSrc":"5917:53:14","nodeType":"YulBlock","src":"5917:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5934:3:14","nodeType":"YulIdentifier","src":"5934:3:14"},{"arguments":[{"name":"value","nativeSrc":"5957:5:14","nodeType":"YulIdentifier","src":"5957:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5939:17:14","nodeType":"YulIdentifier","src":"5939:17:14"},"nativeSrc":"5939:24:14","nodeType":"YulFunctionCall","src":"5939:24:14"}],"functionName":{"name":"mstore","nativeSrc":"5927:6:14","nodeType":"YulIdentifier","src":"5927:6:14"},"nativeSrc":"5927:37:14","nodeType":"YulFunctionCall","src":"5927:37:14"},"nativeSrc":"5927:37:14","nodeType":"YulExpressionStatement","src":"5927:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5852:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5905:5:14","nodeType":"YulTypedName","src":"5905:5:14","type":""},{"name":"pos","nativeSrc":"5912:3:14","nodeType":"YulTypedName","src":"5912:3:14","type":""}],"src":"5852:118:14"},{"body":{"nativeSrc":"6074:124:14","nodeType":"YulBlock","src":"6074:124:14","statements":[{"nativeSrc":"6084:26:14","nodeType":"YulAssignment","src":"6084:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"6096:9:14","nodeType":"YulIdentifier","src":"6096:9:14"},{"kind":"number","nativeSrc":"6107:2:14","nodeType":"YulLiteral","src":"6107:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6092:3:14","nodeType":"YulIdentifier","src":"6092:3:14"},"nativeSrc":"6092:18:14","nodeType":"YulFunctionCall","src":"6092:18:14"},"variableNames":[{"name":"tail","nativeSrc":"6084:4:14","nodeType":"YulIdentifier","src":"6084:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6164:6:14","nodeType":"YulIdentifier","src":"6164:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"6177:9:14","nodeType":"YulIdentifier","src":"6177:9:14"},{"kind":"number","nativeSrc":"6188:1:14","nodeType":"YulLiteral","src":"6188:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6173:3:14","nodeType":"YulIdentifier","src":"6173:3:14"},"nativeSrc":"6173:17:14","nodeType":"YulFunctionCall","src":"6173:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6120:43:14","nodeType":"YulIdentifier","src":"6120:43:14"},"nativeSrc":"6120:71:14","nodeType":"YulFunctionCall","src":"6120:71:14"},"nativeSrc":"6120:71:14","nodeType":"YulExpressionStatement","src":"6120:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"5976:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6046:9:14","nodeType":"YulTypedName","src":"6046:9:14","type":""},{"name":"value0","nativeSrc":"6058:6:14","nodeType":"YulTypedName","src":"6058:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6069:4:14","nodeType":"YulTypedName","src":"6069:4:14","type":""}],"src":"5976:222:14"},{"body":{"nativeSrc":"6244:76:14","nodeType":"YulBlock","src":"6244:76:14","statements":[{"body":{"nativeSrc":"6298:16:14","nodeType":"YulBlock","src":"6298:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6307:1:14","nodeType":"YulLiteral","src":"6307:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"6310:1:14","nodeType":"YulLiteral","src":"6310:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6300:6:14","nodeType":"YulIdentifier","src":"6300:6:14"},"nativeSrc":"6300:12:14","nodeType":"YulFunctionCall","src":"6300:12:14"},"nativeSrc":"6300:12:14","nodeType":"YulExpressionStatement","src":"6300:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6267:5:14","nodeType":"YulIdentifier","src":"6267:5:14"},{"arguments":[{"name":"value","nativeSrc":"6289:5:14","nodeType":"YulIdentifier","src":"6289:5:14"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"6274:14:14","nodeType":"YulIdentifier","src":"6274:14:14"},"nativeSrc":"6274:21:14","nodeType":"YulFunctionCall","src":"6274:21:14"}],"functionName":{"name":"eq","nativeSrc":"6264:2:14","nodeType":"YulIdentifier","src":"6264:2:14"},"nativeSrc":"6264:32:14","nodeType":"YulFunctionCall","src":"6264:32:14"}],"functionName":{"name":"iszero","nativeSrc":"6257:6:14","nodeType":"YulIdentifier","src":"6257:6:14"},"nativeSrc":"6257:40:14","nodeType":"YulFunctionCall","src":"6257:40:14"},"nativeSrc":"6254:60:14","nodeType":"YulIf","src":"6254:60:14"}]},"name":"validator_revert_t_bool","nativeSrc":"6204:116:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6237:5:14","nodeType":"YulTypedName","src":"6237:5:14","type":""}],"src":"6204:116:14"},{"body":{"nativeSrc":"6375:84:14","nodeType":"YulBlock","src":"6375:84:14","statements":[{"nativeSrc":"6385:29:14","nodeType":"YulAssignment","src":"6385:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"6407:6:14","nodeType":"YulIdentifier","src":"6407:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"6394:12:14","nodeType":"YulIdentifier","src":"6394:12:14"},"nativeSrc":"6394:20:14","nodeType":"YulFunctionCall","src":"6394:20:14"},"variableNames":[{"name":"value","nativeSrc":"6385:5:14","nodeType":"YulIdentifier","src":"6385:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6447:5:14","nodeType":"YulIdentifier","src":"6447:5:14"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"6423:23:14","nodeType":"YulIdentifier","src":"6423:23:14"},"nativeSrc":"6423:30:14","nodeType":"YulFunctionCall","src":"6423:30:14"},"nativeSrc":"6423:30:14","nodeType":"YulExpressionStatement","src":"6423:30:14"}]},"name":"abi_decode_t_bool","nativeSrc":"6326:133:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6353:6:14","nodeType":"YulTypedName","src":"6353:6:14","type":""},{"name":"end","nativeSrc":"6361:3:14","nodeType":"YulTypedName","src":"6361:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6369:5:14","nodeType":"YulTypedName","src":"6369:5:14","type":""}],"src":"6326:133:14"},{"body":{"nativeSrc":"6545:388:14","nodeType":"YulBlock","src":"6545:388:14","statements":[{"body":{"nativeSrc":"6591:83:14","nodeType":"YulBlock","src":"6591:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6593:77:14","nodeType":"YulIdentifier","src":"6593:77:14"},"nativeSrc":"6593:79:14","nodeType":"YulFunctionCall","src":"6593:79:14"},"nativeSrc":"6593:79:14","nodeType":"YulExpressionStatement","src":"6593:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6566:7:14","nodeType":"YulIdentifier","src":"6566:7:14"},{"name":"headStart","nativeSrc":"6575:9:14","nodeType":"YulIdentifier","src":"6575:9:14"}],"functionName":{"name":"sub","nativeSrc":"6562:3:14","nodeType":"YulIdentifier","src":"6562:3:14"},"nativeSrc":"6562:23:14","nodeType":"YulFunctionCall","src":"6562:23:14"},{"kind":"number","nativeSrc":"6587:2:14","nodeType":"YulLiteral","src":"6587:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6558:3:14","nodeType":"YulIdentifier","src":"6558:3:14"},"nativeSrc":"6558:32:14","nodeType":"YulFunctionCall","src":"6558:32:14"},"nativeSrc":"6555:119:14","nodeType":"YulIf","src":"6555:119:14"},{"nativeSrc":"6684:117:14","nodeType":"YulBlock","src":"6684:117:14","statements":[{"nativeSrc":"6699:15:14","nodeType":"YulVariableDeclaration","src":"6699:15:14","value":{"kind":"number","nativeSrc":"6713:1:14","nodeType":"YulLiteral","src":"6713:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6703:6:14","nodeType":"YulTypedName","src":"6703:6:14","type":""}]},{"nativeSrc":"6728:63:14","nodeType":"YulAssignment","src":"6728:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6763:9:14","nodeType":"YulIdentifier","src":"6763:9:14"},{"name":"offset","nativeSrc":"6774:6:14","nodeType":"YulIdentifier","src":"6774:6:14"}],"functionName":{"name":"add","nativeSrc":"6759:3:14","nodeType":"YulIdentifier","src":"6759:3:14"},"nativeSrc":"6759:22:14","nodeType":"YulFunctionCall","src":"6759:22:14"},{"name":"dataEnd","nativeSrc":"6783:7:14","nodeType":"YulIdentifier","src":"6783:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6738:20:14","nodeType":"YulIdentifier","src":"6738:20:14"},"nativeSrc":"6738:53:14","nodeType":"YulFunctionCall","src":"6738:53:14"},"variableNames":[{"name":"value0","nativeSrc":"6728:6:14","nodeType":"YulIdentifier","src":"6728:6:14"}]}]},{"nativeSrc":"6811:115:14","nodeType":"YulBlock","src":"6811:115:14","statements":[{"nativeSrc":"6826:16:14","nodeType":"YulVariableDeclaration","src":"6826:16:14","value":{"kind":"number","nativeSrc":"6840:2:14","nodeType":"YulLiteral","src":"6840:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6830:6:14","nodeType":"YulTypedName","src":"6830:6:14","type":""}]},{"nativeSrc":"6856:60:14","nodeType":"YulAssignment","src":"6856:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6888:9:14","nodeType":"YulIdentifier","src":"6888:9:14"},{"name":"offset","nativeSrc":"6899:6:14","nodeType":"YulIdentifier","src":"6899:6:14"}],"functionName":{"name":"add","nativeSrc":"6884:3:14","nodeType":"YulIdentifier","src":"6884:3:14"},"nativeSrc":"6884:22:14","nodeType":"YulFunctionCall","src":"6884:22:14"},{"name":"dataEnd","nativeSrc":"6908:7:14","nodeType":"YulIdentifier","src":"6908:7:14"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"6866:17:14","nodeType":"YulIdentifier","src":"6866:17:14"},"nativeSrc":"6866:50:14","nodeType":"YulFunctionCall","src":"6866:50:14"},"variableNames":[{"name":"value1","nativeSrc":"6856:6:14","nodeType":"YulIdentifier","src":"6856:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"6465:468:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6507:9:14","nodeType":"YulTypedName","src":"6507:9:14","type":""},{"name":"dataEnd","nativeSrc":"6518:7:14","nodeType":"YulTypedName","src":"6518:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6530:6:14","nodeType":"YulTypedName","src":"6530:6:14","type":""},{"name":"value1","nativeSrc":"6538:6:14","nodeType":"YulTypedName","src":"6538:6:14","type":""}],"src":"6465:468:14"},{"body":{"nativeSrc":"7028:28:14","nodeType":"YulBlock","src":"7028:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7045:1:14","nodeType":"YulLiteral","src":"7045:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"7048:1:14","nodeType":"YulLiteral","src":"7048:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7038:6:14","nodeType":"YulIdentifier","src":"7038:6:14"},"nativeSrc":"7038:12:14","nodeType":"YulFunctionCall","src":"7038:12:14"},"nativeSrc":"7038:12:14","nodeType":"YulExpressionStatement","src":"7038:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6939:117:14","nodeType":"YulFunctionDefinition","src":"6939:117:14"},{"body":{"nativeSrc":"7151:28:14","nodeType":"YulBlock","src":"7151:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7168:1:14","nodeType":"YulLiteral","src":"7168:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"7171:1:14","nodeType":"YulLiteral","src":"7171:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7161:6:14","nodeType":"YulIdentifier","src":"7161:6:14"},"nativeSrc":"7161:12:14","nodeType":"YulFunctionCall","src":"7161:12:14"},"nativeSrc":"7161:12:14","nodeType":"YulExpressionStatement","src":"7161:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7062:117:14","nodeType":"YulFunctionDefinition","src":"7062:117:14"},{"body":{"nativeSrc":"7213:152:14","nodeType":"YulBlock","src":"7213:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7230:1:14","nodeType":"YulLiteral","src":"7230:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"7233:77:14","nodeType":"YulLiteral","src":"7233:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7223:6:14","nodeType":"YulIdentifier","src":"7223:6:14"},"nativeSrc":"7223:88:14","nodeType":"YulFunctionCall","src":"7223:88:14"},"nativeSrc":"7223:88:14","nodeType":"YulExpressionStatement","src":"7223:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7327:1:14","nodeType":"YulLiteral","src":"7327:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"7330:4:14","nodeType":"YulLiteral","src":"7330:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"7320:6:14","nodeType":"YulIdentifier","src":"7320:6:14"},"nativeSrc":"7320:15:14","nodeType":"YulFunctionCall","src":"7320:15:14"},"nativeSrc":"7320:15:14","nodeType":"YulExpressionStatement","src":"7320:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7351:1:14","nodeType":"YulLiteral","src":"7351:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"7354:4:14","nodeType":"YulLiteral","src":"7354:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7344:6:14","nodeType":"YulIdentifier","src":"7344:6:14"},"nativeSrc":"7344:15:14","nodeType":"YulFunctionCall","src":"7344:15:14"},"nativeSrc":"7344:15:14","nodeType":"YulExpressionStatement","src":"7344:15:14"}]},"name":"panic_error_0x41","nativeSrc":"7185:180:14","nodeType":"YulFunctionDefinition","src":"7185:180:14"},{"body":{"nativeSrc":"7414:238:14","nodeType":"YulBlock","src":"7414:238:14","statements":[{"nativeSrc":"7424:58:14","nodeType":"YulVariableDeclaration","src":"7424:58:14","value":{"arguments":[{"name":"memPtr","nativeSrc":"7446:6:14","nodeType":"YulIdentifier","src":"7446:6:14"},{"arguments":[{"name":"size","nativeSrc":"7476:4:14","nodeType":"YulIdentifier","src":"7476:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7454:21:14","nodeType":"YulIdentifier","src":"7454:21:14"},"nativeSrc":"7454:27:14","nodeType":"YulFunctionCall","src":"7454:27:14"}],"functionName":{"name":"add","nativeSrc":"7442:3:14","nodeType":"YulIdentifier","src":"7442:3:14"},"nativeSrc":"7442:40:14","nodeType":"YulFunctionCall","src":"7442:40:14"},"variables":[{"name":"newFreePtr","nativeSrc":"7428:10:14","nodeType":"YulTypedName","src":"7428:10:14","type":""}]},{"body":{"nativeSrc":"7593:22:14","nodeType":"YulBlock","src":"7593:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7595:16:14","nodeType":"YulIdentifier","src":"7595:16:14"},"nativeSrc":"7595:18:14","nodeType":"YulFunctionCall","src":"7595:18:14"},"nativeSrc":"7595:18:14","nodeType":"YulExpressionStatement","src":"7595:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"7536:10:14","nodeType":"YulIdentifier","src":"7536:10:14"},{"kind":"number","nativeSrc":"7548:18:14","nodeType":"YulLiteral","src":"7548:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7533:2:14","nodeType":"YulIdentifier","src":"7533:2:14"},"nativeSrc":"7533:34:14","nodeType":"YulFunctionCall","src":"7533:34:14"},{"arguments":[{"name":"newFreePtr","nativeSrc":"7572:10:14","nodeType":"YulIdentifier","src":"7572:10:14"},{"name":"memPtr","nativeSrc":"7584:6:14","nodeType":"YulIdentifier","src":"7584:6:14"}],"functionName":{"name":"lt","nativeSrc":"7569:2:14","nodeType":"YulIdentifier","src":"7569:2:14"},"nativeSrc":"7569:22:14","nodeType":"YulFunctionCall","src":"7569:22:14"}],"functionName":{"name":"or","nativeSrc":"7530:2:14","nodeType":"YulIdentifier","src":"7530:2:14"},"nativeSrc":"7530:62:14","nodeType":"YulFunctionCall","src":"7530:62:14"},"nativeSrc":"7527:88:14","nodeType":"YulIf","src":"7527:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7631:2:14","nodeType":"YulLiteral","src":"7631:2:14","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"7635:10:14","nodeType":"YulIdentifier","src":"7635:10:14"}],"functionName":{"name":"mstore","nativeSrc":"7624:6:14","nodeType":"YulIdentifier","src":"7624:6:14"},"nativeSrc":"7624:22:14","nodeType":"YulFunctionCall","src":"7624:22:14"},"nativeSrc":"7624:22:14","nodeType":"YulExpressionStatement","src":"7624:22:14"}]},"name":"finalize_allocation","nativeSrc":"7371:281:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7400:6:14","nodeType":"YulTypedName","src":"7400:6:14","type":""},{"name":"size","nativeSrc":"7408:4:14","nodeType":"YulTypedName","src":"7408:4:14","type":""}],"src":"7371:281:14"},{"body":{"nativeSrc":"7699:88:14","nodeType":"YulBlock","src":"7699:88:14","statements":[{"nativeSrc":"7709:30:14","nodeType":"YulAssignment","src":"7709:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"7719:18:14","nodeType":"YulIdentifier","src":"7719:18:14"},"nativeSrc":"7719:20:14","nodeType":"YulFunctionCall","src":"7719:20:14"},"variableNames":[{"name":"memPtr","nativeSrc":"7709:6:14","nodeType":"YulIdentifier","src":"7709:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"7768:6:14","nodeType":"YulIdentifier","src":"7768:6:14"},{"name":"size","nativeSrc":"7776:4:14","nodeType":"YulIdentifier","src":"7776:4:14"}],"functionName":{"name":"finalize_allocation","nativeSrc":"7748:19:14","nodeType":"YulIdentifier","src":"7748:19:14"},"nativeSrc":"7748:33:14","nodeType":"YulFunctionCall","src":"7748:33:14"},"nativeSrc":"7748:33:14","nodeType":"YulExpressionStatement","src":"7748:33:14"}]},"name":"allocate_memory","nativeSrc":"7658:129:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"7683:4:14","nodeType":"YulTypedName","src":"7683:4:14","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"7692:6:14","nodeType":"YulTypedName","src":"7692:6:14","type":""}],"src":"7658:129:14"},{"body":{"nativeSrc":"7859:241:14","nodeType":"YulBlock","src":"7859:241:14","statements":[{"body":{"nativeSrc":"7964:22:14","nodeType":"YulBlock","src":"7964:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7966:16:14","nodeType":"YulIdentifier","src":"7966:16:14"},"nativeSrc":"7966:18:14","nodeType":"YulFunctionCall","src":"7966:18:14"},"nativeSrc":"7966:18:14","nodeType":"YulExpressionStatement","src":"7966:18:14"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7936:6:14","nodeType":"YulIdentifier","src":"7936:6:14"},{"kind":"number","nativeSrc":"7944:18:14","nodeType":"YulLiteral","src":"7944:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7933:2:14","nodeType":"YulIdentifier","src":"7933:2:14"},"nativeSrc":"7933:30:14","nodeType":"YulFunctionCall","src":"7933:30:14"},"nativeSrc":"7930:56:14","nodeType":"YulIf","src":"7930:56:14"},{"nativeSrc":"7996:37:14","nodeType":"YulAssignment","src":"7996:37:14","value":{"arguments":[{"name":"length","nativeSrc":"8026:6:14","nodeType":"YulIdentifier","src":"8026:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8004:21:14","nodeType":"YulIdentifier","src":"8004:21:14"},"nativeSrc":"8004:29:14","nodeType":"YulFunctionCall","src":"8004:29:14"},"variableNames":[{"name":"size","nativeSrc":"7996:4:14","nodeType":"YulIdentifier","src":"7996:4:14"}]},{"nativeSrc":"8070:23:14","nodeType":"YulAssignment","src":"8070:23:14","value":{"arguments":[{"name":"size","nativeSrc":"8082:4:14","nodeType":"YulIdentifier","src":"8082:4:14"},{"kind":"number","nativeSrc":"8088:4:14","nodeType":"YulLiteral","src":"8088:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8078:3:14","nodeType":"YulIdentifier","src":"8078:3:14"},"nativeSrc":"8078:15:14","nodeType":"YulFunctionCall","src":"8078:15:14"},"variableNames":[{"name":"size","nativeSrc":"8070:4:14","nodeType":"YulIdentifier","src":"8070:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7793:307:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7843:6:14","nodeType":"YulTypedName","src":"7843:6:14","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7854:4:14","nodeType":"YulTypedName","src":"7854:4:14","type":""}],"src":"7793:307:14"},{"body":{"nativeSrc":"8170:84:14","nodeType":"YulBlock","src":"8170:84:14","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"8194:3:14","nodeType":"YulIdentifier","src":"8194:3:14"},{"name":"src","nativeSrc":"8199:3:14","nodeType":"YulIdentifier","src":"8199:3:14"},{"name":"length","nativeSrc":"8204:6:14","nodeType":"YulIdentifier","src":"8204:6:14"}],"functionName":{"name":"calldatacopy","nativeSrc":"8181:12:14","nodeType":"YulIdentifier","src":"8181:12:14"},"nativeSrc":"8181:30:14","nodeType":"YulFunctionCall","src":"8181:30:14"},"nativeSrc":"8181:30:14","nodeType":"YulExpressionStatement","src":"8181:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"8231:3:14","nodeType":"YulIdentifier","src":"8231:3:14"},{"name":"length","nativeSrc":"8236:6:14","nodeType":"YulIdentifier","src":"8236:6:14"}],"functionName":{"name":"add","nativeSrc":"8227:3:14","nodeType":"YulIdentifier","src":"8227:3:14"},"nativeSrc":"8227:16:14","nodeType":"YulFunctionCall","src":"8227:16:14"},{"kind":"number","nativeSrc":"8245:1:14","nodeType":"YulLiteral","src":"8245:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"8220:6:14","nodeType":"YulIdentifier","src":"8220:6:14"},"nativeSrc":"8220:27:14","nodeType":"YulFunctionCall","src":"8220:27:14"},"nativeSrc":"8220:27:14","nodeType":"YulExpressionStatement","src":"8220:27:14"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8106:148:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8152:3:14","nodeType":"YulTypedName","src":"8152:3:14","type":""},{"name":"dst","nativeSrc":"8157:3:14","nodeType":"YulTypedName","src":"8157:3:14","type":""},{"name":"length","nativeSrc":"8162:6:14","nodeType":"YulTypedName","src":"8162:6:14","type":""}],"src":"8106:148:14"},{"body":{"nativeSrc":"8343:340:14","nodeType":"YulBlock","src":"8343:340:14","statements":[{"nativeSrc":"8353:74:14","nodeType":"YulAssignment","src":"8353:74:14","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"8419:6:14","nodeType":"YulIdentifier","src":"8419:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"8378:40:14","nodeType":"YulIdentifier","src":"8378:40:14"},"nativeSrc":"8378:48:14","nodeType":"YulFunctionCall","src":"8378:48:14"}],"functionName":{"name":"allocate_memory","nativeSrc":"8362:15:14","nodeType":"YulIdentifier","src":"8362:15:14"},"nativeSrc":"8362:65:14","nodeType":"YulFunctionCall","src":"8362:65:14"},"variableNames":[{"name":"array","nativeSrc":"8353:5:14","nodeType":"YulIdentifier","src":"8353:5:14"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"8443:5:14","nodeType":"YulIdentifier","src":"8443:5:14"},{"name":"length","nativeSrc":"8450:6:14","nodeType":"YulIdentifier","src":"8450:6:14"}],"functionName":{"name":"mstore","nativeSrc":"8436:6:14","nodeType":"YulIdentifier","src":"8436:6:14"},"nativeSrc":"8436:21:14","nodeType":"YulFunctionCall","src":"8436:21:14"},"nativeSrc":"8436:21:14","nodeType":"YulExpressionStatement","src":"8436:21:14"},{"nativeSrc":"8466:27:14","nodeType":"YulVariableDeclaration","src":"8466:27:14","value":{"arguments":[{"name":"array","nativeSrc":"8481:5:14","nodeType":"YulIdentifier","src":"8481:5:14"},{"kind":"number","nativeSrc":"8488:4:14","nodeType":"YulLiteral","src":"8488:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8477:3:14","nodeType":"YulIdentifier","src":"8477:3:14"},"nativeSrc":"8477:16:14","nodeType":"YulFunctionCall","src":"8477:16:14"},"variables":[{"name":"dst","nativeSrc":"8470:3:14","nodeType":"YulTypedName","src":"8470:3:14","type":""}]},{"body":{"nativeSrc":"8531:83:14","nodeType":"YulBlock","src":"8531:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8533:77:14","nodeType":"YulIdentifier","src":"8533:77:14"},"nativeSrc":"8533:79:14","nodeType":"YulFunctionCall","src":"8533:79:14"},"nativeSrc":"8533:79:14","nodeType":"YulExpressionStatement","src":"8533:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8512:3:14","nodeType":"YulIdentifier","src":"8512:3:14"},{"name":"length","nativeSrc":"8517:6:14","nodeType":"YulIdentifier","src":"8517:6:14"}],"functionName":{"name":"add","nativeSrc":"8508:3:14","nodeType":"YulIdentifier","src":"8508:3:14"},"nativeSrc":"8508:16:14","nodeType":"YulFunctionCall","src":"8508:16:14"},{"name":"end","nativeSrc":"8526:3:14","nodeType":"YulIdentifier","src":"8526:3:14"}],"functionName":{"name":"gt","nativeSrc":"8505:2:14","nodeType":"YulIdentifier","src":"8505:2:14"},"nativeSrc":"8505:25:14","nodeType":"YulFunctionCall","src":"8505:25:14"},"nativeSrc":"8502:112:14","nodeType":"YulIf","src":"8502:112:14"},{"expression":{"arguments":[{"name":"src","nativeSrc":"8660:3:14","nodeType":"YulIdentifier","src":"8660:3:14"},{"name":"dst","nativeSrc":"8665:3:14","nodeType":"YulIdentifier","src":"8665:3:14"},{"name":"length","nativeSrc":"8670:6:14","nodeType":"YulIdentifier","src":"8670:6:14"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8623:36:14","nodeType":"YulIdentifier","src":"8623:36:14"},"nativeSrc":"8623:54:14","nodeType":"YulFunctionCall","src":"8623:54:14"},"nativeSrc":"8623:54:14","nodeType":"YulExpressionStatement","src":"8623:54:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8260:423:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8316:3:14","nodeType":"YulTypedName","src":"8316:3:14","type":""},{"name":"length","nativeSrc":"8321:6:14","nodeType":"YulTypedName","src":"8321:6:14","type":""},{"name":"end","nativeSrc":"8329:3:14","nodeType":"YulTypedName","src":"8329:3:14","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8337:5:14","nodeType":"YulTypedName","src":"8337:5:14","type":""}],"src":"8260:423:14"},{"body":{"nativeSrc":"8763:277:14","nodeType":"YulBlock","src":"8763:277:14","statements":[{"body":{"nativeSrc":"8812:83:14","nodeType":"YulBlock","src":"8812:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8814:77:14","nodeType":"YulIdentifier","src":"8814:77:14"},"nativeSrc":"8814:79:14","nodeType":"YulFunctionCall","src":"8814:79:14"},"nativeSrc":"8814:79:14","nodeType":"YulExpressionStatement","src":"8814:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8791:6:14","nodeType":"YulIdentifier","src":"8791:6:14"},{"kind":"number","nativeSrc":"8799:4:14","nodeType":"YulLiteral","src":"8799:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8787:3:14","nodeType":"YulIdentifier","src":"8787:3:14"},"nativeSrc":"8787:17:14","nodeType":"YulFunctionCall","src":"8787:17:14"},{"name":"end","nativeSrc":"8806:3:14","nodeType":"YulIdentifier","src":"8806:3:14"}],"functionName":{"name":"slt","nativeSrc":"8783:3:14","nodeType":"YulIdentifier","src":"8783:3:14"},"nativeSrc":"8783:27:14","nodeType":"YulFunctionCall","src":"8783:27:14"}],"functionName":{"name":"iszero","nativeSrc":"8776:6:14","nodeType":"YulIdentifier","src":"8776:6:14"},"nativeSrc":"8776:35:14","nodeType":"YulFunctionCall","src":"8776:35:14"},"nativeSrc":"8773:122:14","nodeType":"YulIf","src":"8773:122:14"},{"nativeSrc":"8904:34:14","nodeType":"YulVariableDeclaration","src":"8904:34:14","value":{"arguments":[{"name":"offset","nativeSrc":"8931:6:14","nodeType":"YulIdentifier","src":"8931:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"8918:12:14","nodeType":"YulIdentifier","src":"8918:12:14"},"nativeSrc":"8918:20:14","nodeType":"YulFunctionCall","src":"8918:20:14"},"variables":[{"name":"length","nativeSrc":"8908:6:14","nodeType":"YulTypedName","src":"8908:6:14","type":""}]},{"nativeSrc":"8947:87:14","nodeType":"YulAssignment","src":"8947:87:14","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9007:6:14","nodeType":"YulIdentifier","src":"9007:6:14"},{"kind":"number","nativeSrc":"9015:4:14","nodeType":"YulLiteral","src":"9015:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9003:3:14","nodeType":"YulIdentifier","src":"9003:3:14"},"nativeSrc":"9003:17:14","nodeType":"YulFunctionCall","src":"9003:17:14"},{"name":"length","nativeSrc":"9022:6:14","nodeType":"YulIdentifier","src":"9022:6:14"},{"name":"end","nativeSrc":"9030:3:14","nodeType":"YulIdentifier","src":"9030:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8956:46:14","nodeType":"YulIdentifier","src":"8956:46:14"},"nativeSrc":"8956:78:14","nodeType":"YulFunctionCall","src":"8956:78:14"},"variableNames":[{"name":"array","nativeSrc":"8947:5:14","nodeType":"YulIdentifier","src":"8947:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8702:338:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8741:6:14","nodeType":"YulTypedName","src":"8741:6:14","type":""},{"name":"end","nativeSrc":"8749:3:14","nodeType":"YulTypedName","src":"8749:3:14","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8757:5:14","nodeType":"YulTypedName","src":"8757:5:14","type":""}],"src":"8702:338:14"},{"body":{"nativeSrc":"9172:817:14","nodeType":"YulBlock","src":"9172:817:14","statements":[{"body":{"nativeSrc":"9219:83:14","nodeType":"YulBlock","src":"9219:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9221:77:14","nodeType":"YulIdentifier","src":"9221:77:14"},"nativeSrc":"9221:79:14","nodeType":"YulFunctionCall","src":"9221:79:14"},"nativeSrc":"9221:79:14","nodeType":"YulExpressionStatement","src":"9221:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9193:7:14","nodeType":"YulIdentifier","src":"9193:7:14"},{"name":"headStart","nativeSrc":"9202:9:14","nodeType":"YulIdentifier","src":"9202:9:14"}],"functionName":{"name":"sub","nativeSrc":"9189:3:14","nodeType":"YulIdentifier","src":"9189:3:14"},"nativeSrc":"9189:23:14","nodeType":"YulFunctionCall","src":"9189:23:14"},{"kind":"number","nativeSrc":"9214:3:14","nodeType":"YulLiteral","src":"9214:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"9185:3:14","nodeType":"YulIdentifier","src":"9185:3:14"},"nativeSrc":"9185:33:14","nodeType":"YulFunctionCall","src":"9185:33:14"},"nativeSrc":"9182:120:14","nodeType":"YulIf","src":"9182:120:14"},{"nativeSrc":"9312:117:14","nodeType":"YulBlock","src":"9312:117:14","statements":[{"nativeSrc":"9327:15:14","nodeType":"YulVariableDeclaration","src":"9327:15:14","value":{"kind":"number","nativeSrc":"9341:1:14","nodeType":"YulLiteral","src":"9341:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9331:6:14","nodeType":"YulTypedName","src":"9331:6:14","type":""}]},{"nativeSrc":"9356:63:14","nodeType":"YulAssignment","src":"9356:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9391:9:14","nodeType":"YulIdentifier","src":"9391:9:14"},{"name":"offset","nativeSrc":"9402:6:14","nodeType":"YulIdentifier","src":"9402:6:14"}],"functionName":{"name":"add","nativeSrc":"9387:3:14","nodeType":"YulIdentifier","src":"9387:3:14"},"nativeSrc":"9387:22:14","nodeType":"YulFunctionCall","src":"9387:22:14"},{"name":"dataEnd","nativeSrc":"9411:7:14","nodeType":"YulIdentifier","src":"9411:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9366:20:14","nodeType":"YulIdentifier","src":"9366:20:14"},"nativeSrc":"9366:53:14","nodeType":"YulFunctionCall","src":"9366:53:14"},"variableNames":[{"name":"value0","nativeSrc":"9356:6:14","nodeType":"YulIdentifier","src":"9356:6:14"}]}]},{"nativeSrc":"9439:118:14","nodeType":"YulBlock","src":"9439:118:14","statements":[{"nativeSrc":"9454:16:14","nodeType":"YulVariableDeclaration","src":"9454:16:14","value":{"kind":"number","nativeSrc":"9468:2:14","nodeType":"YulLiteral","src":"9468:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9458:6:14","nodeType":"YulTypedName","src":"9458:6:14","type":""}]},{"nativeSrc":"9484:63:14","nodeType":"YulAssignment","src":"9484:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9519:9:14","nodeType":"YulIdentifier","src":"9519:9:14"},{"name":"offset","nativeSrc":"9530:6:14","nodeType":"YulIdentifier","src":"9530:6:14"}],"functionName":{"name":"add","nativeSrc":"9515:3:14","nodeType":"YulIdentifier","src":"9515:3:14"},"nativeSrc":"9515:22:14","nodeType":"YulFunctionCall","src":"9515:22:14"},{"name":"dataEnd","nativeSrc":"9539:7:14","nodeType":"YulIdentifier","src":"9539:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9494:20:14","nodeType":"YulIdentifier","src":"9494:20:14"},"nativeSrc":"9494:53:14","nodeType":"YulFunctionCall","src":"9494:53:14"},"variableNames":[{"name":"value1","nativeSrc":"9484:6:14","nodeType":"YulIdentifier","src":"9484:6:14"}]}]},{"nativeSrc":"9567:118:14","nodeType":"YulBlock","src":"9567:118:14","statements":[{"nativeSrc":"9582:16:14","nodeType":"YulVariableDeclaration","src":"9582:16:14","value":{"kind":"number","nativeSrc":"9596:2:14","nodeType":"YulLiteral","src":"9596:2:14","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9586:6:14","nodeType":"YulTypedName","src":"9586:6:14","type":""}]},{"nativeSrc":"9612:63:14","nodeType":"YulAssignment","src":"9612:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9647:9:14","nodeType":"YulIdentifier","src":"9647:9:14"},{"name":"offset","nativeSrc":"9658:6:14","nodeType":"YulIdentifier","src":"9658:6:14"}],"functionName":{"name":"add","nativeSrc":"9643:3:14","nodeType":"YulIdentifier","src":"9643:3:14"},"nativeSrc":"9643:22:14","nodeType":"YulFunctionCall","src":"9643:22:14"},{"name":"dataEnd","nativeSrc":"9667:7:14","nodeType":"YulIdentifier","src":"9667:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9622:20:14","nodeType":"YulIdentifier","src":"9622:20:14"},"nativeSrc":"9622:53:14","nodeType":"YulFunctionCall","src":"9622:53:14"},"variableNames":[{"name":"value2","nativeSrc":"9612:6:14","nodeType":"YulIdentifier","src":"9612:6:14"}]}]},{"nativeSrc":"9695:287:14","nodeType":"YulBlock","src":"9695:287:14","statements":[{"nativeSrc":"9710:46:14","nodeType":"YulVariableDeclaration","src":"9710:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9741:9:14","nodeType":"YulIdentifier","src":"9741:9:14"},{"kind":"number","nativeSrc":"9752:2:14","nodeType":"YulLiteral","src":"9752:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9737:3:14","nodeType":"YulIdentifier","src":"9737:3:14"},"nativeSrc":"9737:18:14","nodeType":"YulFunctionCall","src":"9737:18:14"}],"functionName":{"name":"calldataload","nativeSrc":"9724:12:14","nodeType":"YulIdentifier","src":"9724:12:14"},"nativeSrc":"9724:32:14","nodeType":"YulFunctionCall","src":"9724:32:14"},"variables":[{"name":"offset","nativeSrc":"9714:6:14","nodeType":"YulTypedName","src":"9714:6:14","type":""}]},{"body":{"nativeSrc":"9803:83:14","nodeType":"YulBlock","src":"9803:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9805:77:14","nodeType":"YulIdentifier","src":"9805:77:14"},"nativeSrc":"9805:79:14","nodeType":"YulFunctionCall","src":"9805:79:14"},"nativeSrc":"9805:79:14","nodeType":"YulExpressionStatement","src":"9805:79:14"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9775:6:14","nodeType":"YulIdentifier","src":"9775:6:14"},{"kind":"number","nativeSrc":"9783:18:14","nodeType":"YulLiteral","src":"9783:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9772:2:14","nodeType":"YulIdentifier","src":"9772:2:14"},"nativeSrc":"9772:30:14","nodeType":"YulFunctionCall","src":"9772:30:14"},"nativeSrc":"9769:117:14","nodeType":"YulIf","src":"9769:117:14"},{"nativeSrc":"9900:72:14","nodeType":"YulAssignment","src":"9900:72:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9944:9:14","nodeType":"YulIdentifier","src":"9944:9:14"},{"name":"offset","nativeSrc":"9955:6:14","nodeType":"YulIdentifier","src":"9955:6:14"}],"functionName":{"name":"add","nativeSrc":"9940:3:14","nodeType":"YulIdentifier","src":"9940:3:14"},"nativeSrc":"9940:22:14","nodeType":"YulFunctionCall","src":"9940:22:14"},{"name":"dataEnd","nativeSrc":"9964:7:14","nodeType":"YulIdentifier","src":"9964:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"9910:29:14","nodeType":"YulIdentifier","src":"9910:29:14"},"nativeSrc":"9910:62:14","nodeType":"YulFunctionCall","src":"9910:62:14"},"variableNames":[{"name":"value3","nativeSrc":"9900:6:14","nodeType":"YulIdentifier","src":"9900:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"9046:943:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9118:9:14","nodeType":"YulTypedName","src":"9118:9:14","type":""},{"name":"dataEnd","nativeSrc":"9129:7:14","nodeType":"YulTypedName","src":"9129:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9141:6:14","nodeType":"YulTypedName","src":"9141:6:14","type":""},{"name":"value1","nativeSrc":"9149:6:14","nodeType":"YulTypedName","src":"9149:6:14","type":""},{"name":"value2","nativeSrc":"9157:6:14","nodeType":"YulTypedName","src":"9157:6:14","type":""},{"name":"value3","nativeSrc":"9165:6:14","nodeType":"YulTypedName","src":"9165:6:14","type":""}],"src":"9046:943:14"},{"body":{"nativeSrc":"10078:391:14","nodeType":"YulBlock","src":"10078:391:14","statements":[{"body":{"nativeSrc":"10124:83:14","nodeType":"YulBlock","src":"10124:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10126:77:14","nodeType":"YulIdentifier","src":"10126:77:14"},"nativeSrc":"10126:79:14","nodeType":"YulFunctionCall","src":"10126:79:14"},"nativeSrc":"10126:79:14","nodeType":"YulExpressionStatement","src":"10126:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10099:7:14","nodeType":"YulIdentifier","src":"10099:7:14"},{"name":"headStart","nativeSrc":"10108:9:14","nodeType":"YulIdentifier","src":"10108:9:14"}],"functionName":{"name":"sub","nativeSrc":"10095:3:14","nodeType":"YulIdentifier","src":"10095:3:14"},"nativeSrc":"10095:23:14","nodeType":"YulFunctionCall","src":"10095:23:14"},{"kind":"number","nativeSrc":"10120:2:14","nodeType":"YulLiteral","src":"10120:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10091:3:14","nodeType":"YulIdentifier","src":"10091:3:14"},"nativeSrc":"10091:32:14","nodeType":"YulFunctionCall","src":"10091:32:14"},"nativeSrc":"10088:119:14","nodeType":"YulIf","src":"10088:119:14"},{"nativeSrc":"10217:117:14","nodeType":"YulBlock","src":"10217:117:14","statements":[{"nativeSrc":"10232:15:14","nodeType":"YulVariableDeclaration","src":"10232:15:14","value":{"kind":"number","nativeSrc":"10246:1:14","nodeType":"YulLiteral","src":"10246:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10236:6:14","nodeType":"YulTypedName","src":"10236:6:14","type":""}]},{"nativeSrc":"10261:63:14","nodeType":"YulAssignment","src":"10261:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10296:9:14","nodeType":"YulIdentifier","src":"10296:9:14"},{"name":"offset","nativeSrc":"10307:6:14","nodeType":"YulIdentifier","src":"10307:6:14"}],"functionName":{"name":"add","nativeSrc":"10292:3:14","nodeType":"YulIdentifier","src":"10292:3:14"},"nativeSrc":"10292:22:14","nodeType":"YulFunctionCall","src":"10292:22:14"},{"name":"dataEnd","nativeSrc":"10316:7:14","nodeType":"YulIdentifier","src":"10316:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10271:20:14","nodeType":"YulIdentifier","src":"10271:20:14"},"nativeSrc":"10271:53:14","nodeType":"YulFunctionCall","src":"10271:53:14"},"variableNames":[{"name":"value0","nativeSrc":"10261:6:14","nodeType":"YulIdentifier","src":"10261:6:14"}]}]},{"nativeSrc":"10344:118:14","nodeType":"YulBlock","src":"10344:118:14","statements":[{"nativeSrc":"10359:16:14","nodeType":"YulVariableDeclaration","src":"10359:16:14","value":{"kind":"number","nativeSrc":"10373:2:14","nodeType":"YulLiteral","src":"10373:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10363:6:14","nodeType":"YulTypedName","src":"10363:6:14","type":""}]},{"nativeSrc":"10389:63:14","nodeType":"YulAssignment","src":"10389:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10424:9:14","nodeType":"YulIdentifier","src":"10424:9:14"},{"name":"offset","nativeSrc":"10435:6:14","nodeType":"YulIdentifier","src":"10435:6:14"}],"functionName":{"name":"add","nativeSrc":"10420:3:14","nodeType":"YulIdentifier","src":"10420:3:14"},"nativeSrc":"10420:22:14","nodeType":"YulFunctionCall","src":"10420:22:14"},{"name":"dataEnd","nativeSrc":"10444:7:14","nodeType":"YulIdentifier","src":"10444:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10399:20:14","nodeType":"YulIdentifier","src":"10399:20:14"},"nativeSrc":"10399:53:14","nodeType":"YulFunctionCall","src":"10399:53:14"},"variableNames":[{"name":"value1","nativeSrc":"10389:6:14","nodeType":"YulIdentifier","src":"10389:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"9995:474:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10040:9:14","nodeType":"YulTypedName","src":"10040:9:14","type":""},{"name":"dataEnd","nativeSrc":"10051:7:14","nodeType":"YulTypedName","src":"10051:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10063:6:14","nodeType":"YulTypedName","src":"10063:6:14","type":""},{"name":"value1","nativeSrc":"10071:6:14","nodeType":"YulTypedName","src":"10071:6:14","type":""}],"src":"9995:474:14"},{"body":{"nativeSrc":"10503:152:14","nodeType":"YulBlock","src":"10503:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10520:1:14","nodeType":"YulLiteral","src":"10520:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"10523:77:14","nodeType":"YulLiteral","src":"10523:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10513:6:14","nodeType":"YulIdentifier","src":"10513:6:14"},"nativeSrc":"10513:88:14","nodeType":"YulFunctionCall","src":"10513:88:14"},"nativeSrc":"10513:88:14","nodeType":"YulExpressionStatement","src":"10513:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10617:1:14","nodeType":"YulLiteral","src":"10617:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"10620:4:14","nodeType":"YulLiteral","src":"10620:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"10610:6:14","nodeType":"YulIdentifier","src":"10610:6:14"},"nativeSrc":"10610:15:14","nodeType":"YulFunctionCall","src":"10610:15:14"},"nativeSrc":"10610:15:14","nodeType":"YulExpressionStatement","src":"10610:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10641:1:14","nodeType":"YulLiteral","src":"10641:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"10644:4:14","nodeType":"YulLiteral","src":"10644:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10634:6:14","nodeType":"YulIdentifier","src":"10634:6:14"},"nativeSrc":"10634:15:14","nodeType":"YulFunctionCall","src":"10634:15:14"},"nativeSrc":"10634:15:14","nodeType":"YulExpressionStatement","src":"10634:15:14"}]},"name":"panic_error_0x22","nativeSrc":"10475:180:14","nodeType":"YulFunctionDefinition","src":"10475:180:14"},{"body":{"nativeSrc":"10712:269:14","nodeType":"YulBlock","src":"10712:269:14","statements":[{"nativeSrc":"10722:22:14","nodeType":"YulAssignment","src":"10722:22:14","value":{"arguments":[{"name":"data","nativeSrc":"10736:4:14","nodeType":"YulIdentifier","src":"10736:4:14"},{"kind":"number","nativeSrc":"10742:1:14","nodeType":"YulLiteral","src":"10742:1:14","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"10732:3:14","nodeType":"YulIdentifier","src":"10732:3:14"},"nativeSrc":"10732:12:14","nodeType":"YulFunctionCall","src":"10732:12:14"},"variableNames":[{"name":"length","nativeSrc":"10722:6:14","nodeType":"YulIdentifier","src":"10722:6:14"}]},{"nativeSrc":"10753:38:14","nodeType":"YulVariableDeclaration","src":"10753:38:14","value":{"arguments":[{"name":"data","nativeSrc":"10783:4:14","nodeType":"YulIdentifier","src":"10783:4:14"},{"kind":"number","nativeSrc":"10789:1:14","nodeType":"YulLiteral","src":"10789:1:14","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"10779:3:14","nodeType":"YulIdentifier","src":"10779:3:14"},"nativeSrc":"10779:12:14","nodeType":"YulFunctionCall","src":"10779:12:14"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"10757:18:14","nodeType":"YulTypedName","src":"10757:18:14","type":""}]},{"body":{"nativeSrc":"10830:51:14","nodeType":"YulBlock","src":"10830:51:14","statements":[{"nativeSrc":"10844:27:14","nodeType":"YulAssignment","src":"10844:27:14","value":{"arguments":[{"name":"length","nativeSrc":"10858:6:14","nodeType":"YulIdentifier","src":"10858:6:14"},{"kind":"number","nativeSrc":"10866:4:14","nodeType":"YulLiteral","src":"10866:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"10854:3:14","nodeType":"YulIdentifier","src":"10854:3:14"},"nativeSrc":"10854:17:14","nodeType":"YulFunctionCall","src":"10854:17:14"},"variableNames":[{"name":"length","nativeSrc":"10844:6:14","nodeType":"YulIdentifier","src":"10844:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"10810:18:14","nodeType":"YulIdentifier","src":"10810:18:14"}],"functionName":{"name":"iszero","nativeSrc":"10803:6:14","nodeType":"YulIdentifier","src":"10803:6:14"},"nativeSrc":"10803:26:14","nodeType":"YulFunctionCall","src":"10803:26:14"},"nativeSrc":"10800:81:14","nodeType":"YulIf","src":"10800:81:14"},{"body":{"nativeSrc":"10933:42:14","nodeType":"YulBlock","src":"10933:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"10947:16:14","nodeType":"YulIdentifier","src":"10947:16:14"},"nativeSrc":"10947:18:14","nodeType":"YulFunctionCall","src":"10947:18:14"},"nativeSrc":"10947:18:14","nodeType":"YulExpressionStatement","src":"10947:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"10897:18:14","nodeType":"YulIdentifier","src":"10897:18:14"},{"arguments":[{"name":"length","nativeSrc":"10920:6:14","nodeType":"YulIdentifier","src":"10920:6:14"},{"kind":"number","nativeSrc":"10928:2:14","nodeType":"YulLiteral","src":"10928:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"10917:2:14","nodeType":"YulIdentifier","src":"10917:2:14"},"nativeSrc":"10917:14:14","nodeType":"YulFunctionCall","src":"10917:14:14"}],"functionName":{"name":"eq","nativeSrc":"10894:2:14","nodeType":"YulIdentifier","src":"10894:2:14"},"nativeSrc":"10894:38:14","nodeType":"YulFunctionCall","src":"10894:38:14"},"nativeSrc":"10891:84:14","nodeType":"YulIf","src":"10891:84:14"}]},"name":"extract_byte_array_length","nativeSrc":"10661:320:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"10696:4:14","nodeType":"YulTypedName","src":"10696:4:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10705:6:14","nodeType":"YulTypedName","src":"10705:6:14","type":""}],"src":"10661:320:14"},{"body":{"nativeSrc":"11093:114:14","nodeType":"YulBlock","src":"11093:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11115:6:14","nodeType":"YulIdentifier","src":"11115:6:14"},{"kind":"number","nativeSrc":"11123:1:14","nodeType":"YulLiteral","src":"11123:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11111:3:14","nodeType":"YulIdentifier","src":"11111:3:14"},"nativeSrc":"11111:14:14","nodeType":"YulFunctionCall","src":"11111:14:14"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nativeSrc":"11127:34:14","nodeType":"YulLiteral","src":"11127:34:14","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nativeSrc":"11104:6:14","nodeType":"YulIdentifier","src":"11104:6:14"},"nativeSrc":"11104:58:14","nodeType":"YulFunctionCall","src":"11104:58:14"},"nativeSrc":"11104:58:14","nodeType":"YulExpressionStatement","src":"11104:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11183:6:14","nodeType":"YulIdentifier","src":"11183:6:14"},{"kind":"number","nativeSrc":"11191:2:14","nodeType":"YulLiteral","src":"11191:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11179:3:14","nodeType":"YulIdentifier","src":"11179:3:14"},"nativeSrc":"11179:15:14","nodeType":"YulFunctionCall","src":"11179:15:14"},{"hexValue":"72","kind":"string","nativeSrc":"11196:3:14","nodeType":"YulLiteral","src":"11196:3:14","type":"","value":"r"}],"functionName":{"name":"mstore","nativeSrc":"11172:6:14","nodeType":"YulIdentifier","src":"11172:6:14"},"nativeSrc":"11172:28:14","nodeType":"YulFunctionCall","src":"11172:28:14"},"nativeSrc":"11172:28:14","nodeType":"YulExpressionStatement","src":"11172:28:14"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nativeSrc":"10987:220:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11085:6:14","nodeType":"YulTypedName","src":"11085:6:14","type":""}],"src":"10987:220:14"},{"body":{"nativeSrc":"11359:220:14","nodeType":"YulBlock","src":"11359:220:14","statements":[{"nativeSrc":"11369:74:14","nodeType":"YulAssignment","src":"11369:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"11435:3:14","nodeType":"YulIdentifier","src":"11435:3:14"},{"kind":"number","nativeSrc":"11440:2:14","nodeType":"YulLiteral","src":"11440:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11376:58:14","nodeType":"YulIdentifier","src":"11376:58:14"},"nativeSrc":"11376:67:14","nodeType":"YulFunctionCall","src":"11376:67:14"},"variableNames":[{"name":"pos","nativeSrc":"11369:3:14","nodeType":"YulIdentifier","src":"11369:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11541:3:14","nodeType":"YulIdentifier","src":"11541:3:14"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nativeSrc":"11452:88:14","nodeType":"YulIdentifier","src":"11452:88:14"},"nativeSrc":"11452:93:14","nodeType":"YulFunctionCall","src":"11452:93:14"},"nativeSrc":"11452:93:14","nodeType":"YulExpressionStatement","src":"11452:93:14"},{"nativeSrc":"11554:19:14","nodeType":"YulAssignment","src":"11554:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"11565:3:14","nodeType":"YulIdentifier","src":"11565:3:14"},{"kind":"number","nativeSrc":"11570:2:14","nodeType":"YulLiteral","src":"11570:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11561:3:14","nodeType":"YulIdentifier","src":"11561:3:14"},"nativeSrc":"11561:12:14","nodeType":"YulFunctionCall","src":"11561:12:14"},"variableNames":[{"name":"end","nativeSrc":"11554:3:14","nodeType":"YulIdentifier","src":"11554:3:14"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nativeSrc":"11213:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11347:3:14","nodeType":"YulTypedName","src":"11347:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11355:3:14","nodeType":"YulTypedName","src":"11355:3:14","type":""}],"src":"11213:366:14"},{"body":{"nativeSrc":"11756:248:14","nodeType":"YulBlock","src":"11756:248:14","statements":[{"nativeSrc":"11766:26:14","nodeType":"YulAssignment","src":"11766:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"11778:9:14","nodeType":"YulIdentifier","src":"11778:9:14"},{"kind":"number","nativeSrc":"11789:2:14","nodeType":"YulLiteral","src":"11789:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11774:3:14","nodeType":"YulIdentifier","src":"11774:3:14"},"nativeSrc":"11774:18:14","nodeType":"YulFunctionCall","src":"11774:18:14"},"variableNames":[{"name":"tail","nativeSrc":"11766:4:14","nodeType":"YulIdentifier","src":"11766:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11813:9:14","nodeType":"YulIdentifier","src":"11813:9:14"},{"kind":"number","nativeSrc":"11824:1:14","nodeType":"YulLiteral","src":"11824:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11809:3:14","nodeType":"YulIdentifier","src":"11809:3:14"},"nativeSrc":"11809:17:14","nodeType":"YulFunctionCall","src":"11809:17:14"},{"arguments":[{"name":"tail","nativeSrc":"11832:4:14","nodeType":"YulIdentifier","src":"11832:4:14"},{"name":"headStart","nativeSrc":"11838:9:14","nodeType":"YulIdentifier","src":"11838:9:14"}],"functionName":{"name":"sub","nativeSrc":"11828:3:14","nodeType":"YulIdentifier","src":"11828:3:14"},"nativeSrc":"11828:20:14","nodeType":"YulFunctionCall","src":"11828:20:14"}],"functionName":{"name":"mstore","nativeSrc":"11802:6:14","nodeType":"YulIdentifier","src":"11802:6:14"},"nativeSrc":"11802:47:14","nodeType":"YulFunctionCall","src":"11802:47:14"},"nativeSrc":"11802:47:14","nodeType":"YulExpressionStatement","src":"11802:47:14"},{"nativeSrc":"11858:139:14","nodeType":"YulAssignment","src":"11858:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"11992:4:14","nodeType":"YulIdentifier","src":"11992:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nativeSrc":"11866:124:14","nodeType":"YulIdentifier","src":"11866:124:14"},"nativeSrc":"11866:131:14","nodeType":"YulFunctionCall","src":"11866:131:14"},"variableNames":[{"name":"tail","nativeSrc":"11858:4:14","nodeType":"YulIdentifier","src":"11858:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11585:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11736:9:14","nodeType":"YulTypedName","src":"11736:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11751:4:14","nodeType":"YulTypedName","src":"11751:4:14","type":""}],"src":"11585:419:14"},{"body":{"nativeSrc":"12116:142:14","nodeType":"YulBlock","src":"12116:142:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12138:6:14","nodeType":"YulIdentifier","src":"12138:6:14"},{"kind":"number","nativeSrc":"12146:1:14","nodeType":"YulLiteral","src":"12146:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12134:3:14","nodeType":"YulIdentifier","src":"12134:3:14"},"nativeSrc":"12134:14:14","nodeType":"YulFunctionCall","src":"12134:14:14"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nativeSrc":"12150:34:14","nodeType":"YulLiteral","src":"12150:34:14","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nativeSrc":"12127:6:14","nodeType":"YulIdentifier","src":"12127:6:14"},"nativeSrc":"12127:58:14","nodeType":"YulFunctionCall","src":"12127:58:14"},"nativeSrc":"12127:58:14","nodeType":"YulExpressionStatement","src":"12127:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12206:6:14","nodeType":"YulIdentifier","src":"12206:6:14"},{"kind":"number","nativeSrc":"12214:2:14","nodeType":"YulLiteral","src":"12214:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12202:3:14","nodeType":"YulIdentifier","src":"12202:3:14"},"nativeSrc":"12202:15:14","nodeType":"YulFunctionCall","src":"12202:15:14"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nativeSrc":"12219:31:14","nodeType":"YulLiteral","src":"12219:31:14","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nativeSrc":"12195:6:14","nodeType":"YulIdentifier","src":"12195:6:14"},"nativeSrc":"12195:56:14","nodeType":"YulFunctionCall","src":"12195:56:14"},"nativeSrc":"12195:56:14","nodeType":"YulExpressionStatement","src":"12195:56:14"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nativeSrc":"12010:248:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12108:6:14","nodeType":"YulTypedName","src":"12108:6:14","type":""}],"src":"12010:248:14"},{"body":{"nativeSrc":"12410:220:14","nodeType":"YulBlock","src":"12410:220:14","statements":[{"nativeSrc":"12420:74:14","nodeType":"YulAssignment","src":"12420:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"12486:3:14","nodeType":"YulIdentifier","src":"12486:3:14"},{"kind":"number","nativeSrc":"12491:2:14","nodeType":"YulLiteral","src":"12491:2:14","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12427:58:14","nodeType":"YulIdentifier","src":"12427:58:14"},"nativeSrc":"12427:67:14","nodeType":"YulFunctionCall","src":"12427:67:14"},"variableNames":[{"name":"pos","nativeSrc":"12420:3:14","nodeType":"YulIdentifier","src":"12420:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12592:3:14","nodeType":"YulIdentifier","src":"12592:3:14"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nativeSrc":"12503:88:14","nodeType":"YulIdentifier","src":"12503:88:14"},"nativeSrc":"12503:93:14","nodeType":"YulFunctionCall","src":"12503:93:14"},"nativeSrc":"12503:93:14","nodeType":"YulExpressionStatement","src":"12503:93:14"},{"nativeSrc":"12605:19:14","nodeType":"YulAssignment","src":"12605:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"12616:3:14","nodeType":"YulIdentifier","src":"12616:3:14"},{"kind":"number","nativeSrc":"12621:2:14","nodeType":"YulLiteral","src":"12621:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12612:3:14","nodeType":"YulIdentifier","src":"12612:3:14"},"nativeSrc":"12612:12:14","nodeType":"YulFunctionCall","src":"12612:12:14"},"variableNames":[{"name":"end","nativeSrc":"12605:3:14","nodeType":"YulIdentifier","src":"12605:3:14"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nativeSrc":"12264:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12398:3:14","nodeType":"YulTypedName","src":"12398:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12406:3:14","nodeType":"YulTypedName","src":"12406:3:14","type":""}],"src":"12264:366:14"},{"body":{"nativeSrc":"12807:248:14","nodeType":"YulBlock","src":"12807:248:14","statements":[{"nativeSrc":"12817:26:14","nodeType":"YulAssignment","src":"12817:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"12829:9:14","nodeType":"YulIdentifier","src":"12829:9:14"},{"kind":"number","nativeSrc":"12840:2:14","nodeType":"YulLiteral","src":"12840:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12825:3:14","nodeType":"YulIdentifier","src":"12825:3:14"},"nativeSrc":"12825:18:14","nodeType":"YulFunctionCall","src":"12825:18:14"},"variableNames":[{"name":"tail","nativeSrc":"12817:4:14","nodeType":"YulIdentifier","src":"12817:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12864:9:14","nodeType":"YulIdentifier","src":"12864:9:14"},{"kind":"number","nativeSrc":"12875:1:14","nodeType":"YulLiteral","src":"12875:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12860:3:14","nodeType":"YulIdentifier","src":"12860:3:14"},"nativeSrc":"12860:17:14","nodeType":"YulFunctionCall","src":"12860:17:14"},{"arguments":[{"name":"tail","nativeSrc":"12883:4:14","nodeType":"YulIdentifier","src":"12883:4:14"},{"name":"headStart","nativeSrc":"12889:9:14","nodeType":"YulIdentifier","src":"12889:9:14"}],"functionName":{"name":"sub","nativeSrc":"12879:3:14","nodeType":"YulIdentifier","src":"12879:3:14"},"nativeSrc":"12879:20:14","nodeType":"YulFunctionCall","src":"12879:20:14"}],"functionName":{"name":"mstore","nativeSrc":"12853:6:14","nodeType":"YulIdentifier","src":"12853:6:14"},"nativeSrc":"12853:47:14","nodeType":"YulFunctionCall","src":"12853:47:14"},"nativeSrc":"12853:47:14","nodeType":"YulExpressionStatement","src":"12853:47:14"},{"nativeSrc":"12909:139:14","nodeType":"YulAssignment","src":"12909:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"13043:4:14","nodeType":"YulIdentifier","src":"13043:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nativeSrc":"12917:124:14","nodeType":"YulIdentifier","src":"12917:124:14"},"nativeSrc":"12917:131:14","nodeType":"YulFunctionCall","src":"12917:131:14"},"variableNames":[{"name":"tail","nativeSrc":"12909:4:14","nodeType":"YulIdentifier","src":"12909:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12636:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12787:9:14","nodeType":"YulTypedName","src":"12787:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12802:4:14","nodeType":"YulTypedName","src":"12802:4:14","type":""}],"src":"12636:419:14"},{"body":{"nativeSrc":"13167:126:14","nodeType":"YulBlock","src":"13167:126:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13189:6:14","nodeType":"YulIdentifier","src":"13189:6:14"},{"kind":"number","nativeSrc":"13197:1:14","nodeType":"YulLiteral","src":"13197:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13185:3:14","nodeType":"YulIdentifier","src":"13185:3:14"},"nativeSrc":"13185:14:14","nodeType":"YulFunctionCall","src":"13185:14:14"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nativeSrc":"13201:34:14","nodeType":"YulLiteral","src":"13201:34:14","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nativeSrc":"13178:6:14","nodeType":"YulIdentifier","src":"13178:6:14"},"nativeSrc":"13178:58:14","nodeType":"YulFunctionCall","src":"13178:58:14"},"nativeSrc":"13178:58:14","nodeType":"YulExpressionStatement","src":"13178:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13257:6:14","nodeType":"YulIdentifier","src":"13257:6:14"},{"kind":"number","nativeSrc":"13265:2:14","nodeType":"YulLiteral","src":"13265:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13253:3:14","nodeType":"YulIdentifier","src":"13253:3:14"},"nativeSrc":"13253:15:14","nodeType":"YulFunctionCall","src":"13253:15:14"},{"hexValue":"72206f7220617070726f766564","kind":"string","nativeSrc":"13270:15:14","nodeType":"YulLiteral","src":"13270:15:14","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nativeSrc":"13246:6:14","nodeType":"YulIdentifier","src":"13246:6:14"},"nativeSrc":"13246:40:14","nodeType":"YulFunctionCall","src":"13246:40:14"},"nativeSrc":"13246:40:14","nodeType":"YulExpressionStatement","src":"13246:40:14"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nativeSrc":"13061:232:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13159:6:14","nodeType":"YulTypedName","src":"13159:6:14","type":""}],"src":"13061:232:14"},{"body":{"nativeSrc":"13445:220:14","nodeType":"YulBlock","src":"13445:220:14","statements":[{"nativeSrc":"13455:74:14","nodeType":"YulAssignment","src":"13455:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"13521:3:14","nodeType":"YulIdentifier","src":"13521:3:14"},{"kind":"number","nativeSrc":"13526:2:14","nodeType":"YulLiteral","src":"13526:2:14","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13462:58:14","nodeType":"YulIdentifier","src":"13462:58:14"},"nativeSrc":"13462:67:14","nodeType":"YulFunctionCall","src":"13462:67:14"},"variableNames":[{"name":"pos","nativeSrc":"13455:3:14","nodeType":"YulIdentifier","src":"13455:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13627:3:14","nodeType":"YulIdentifier","src":"13627:3:14"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nativeSrc":"13538:88:14","nodeType":"YulIdentifier","src":"13538:88:14"},"nativeSrc":"13538:93:14","nodeType":"YulFunctionCall","src":"13538:93:14"},"nativeSrc":"13538:93:14","nodeType":"YulExpressionStatement","src":"13538:93:14"},{"nativeSrc":"13640:19:14","nodeType":"YulAssignment","src":"13640:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"13651:3:14","nodeType":"YulIdentifier","src":"13651:3:14"},{"kind":"number","nativeSrc":"13656:2:14","nodeType":"YulLiteral","src":"13656:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13647:3:14","nodeType":"YulIdentifier","src":"13647:3:14"},"nativeSrc":"13647:12:14","nodeType":"YulFunctionCall","src":"13647:12:14"},"variableNames":[{"name":"end","nativeSrc":"13640:3:14","nodeType":"YulIdentifier","src":"13640:3:14"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nativeSrc":"13299:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13433:3:14","nodeType":"YulTypedName","src":"13433:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13441:3:14","nodeType":"YulTypedName","src":"13441:3:14","type":""}],"src":"13299:366:14"},{"body":{"nativeSrc":"13842:248:14","nodeType":"YulBlock","src":"13842:248:14","statements":[{"nativeSrc":"13852:26:14","nodeType":"YulAssignment","src":"13852:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"13864:9:14","nodeType":"YulIdentifier","src":"13864:9:14"},{"kind":"number","nativeSrc":"13875:2:14","nodeType":"YulLiteral","src":"13875:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13860:3:14","nodeType":"YulIdentifier","src":"13860:3:14"},"nativeSrc":"13860:18:14","nodeType":"YulFunctionCall","src":"13860:18:14"},"variableNames":[{"name":"tail","nativeSrc":"13852:4:14","nodeType":"YulIdentifier","src":"13852:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13899:9:14","nodeType":"YulIdentifier","src":"13899:9:14"},{"kind":"number","nativeSrc":"13910:1:14","nodeType":"YulLiteral","src":"13910:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13895:3:14","nodeType":"YulIdentifier","src":"13895:3:14"},"nativeSrc":"13895:17:14","nodeType":"YulFunctionCall","src":"13895:17:14"},{"arguments":[{"name":"tail","nativeSrc":"13918:4:14","nodeType":"YulIdentifier","src":"13918:4:14"},{"name":"headStart","nativeSrc":"13924:9:14","nodeType":"YulIdentifier","src":"13924:9:14"}],"functionName":{"name":"sub","nativeSrc":"13914:3:14","nodeType":"YulIdentifier","src":"13914:3:14"},"nativeSrc":"13914:20:14","nodeType":"YulFunctionCall","src":"13914:20:14"}],"functionName":{"name":"mstore","nativeSrc":"13888:6:14","nodeType":"YulIdentifier","src":"13888:6:14"},"nativeSrc":"13888:47:14","nodeType":"YulFunctionCall","src":"13888:47:14"},"nativeSrc":"13888:47:14","nodeType":"YulExpressionStatement","src":"13888:47:14"},{"nativeSrc":"13944:139:14","nodeType":"YulAssignment","src":"13944:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"14078:4:14","nodeType":"YulIdentifier","src":"14078:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nativeSrc":"13952:124:14","nodeType":"YulIdentifier","src":"13952:124:14"},"nativeSrc":"13952:131:14","nodeType":"YulFunctionCall","src":"13952:131:14"},"variableNames":[{"name":"tail","nativeSrc":"13944:4:14","nodeType":"YulIdentifier","src":"13944:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13671:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13822:9:14","nodeType":"YulTypedName","src":"13822:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13837:4:14","nodeType":"YulTypedName","src":"13837:4:14","type":""}],"src":"13671:419:14"},{"body":{"nativeSrc":"14202:68:14","nodeType":"YulBlock","src":"14202:68:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14224:6:14","nodeType":"YulIdentifier","src":"14224:6:14"},{"kind":"number","nativeSrc":"14232:1:14","nodeType":"YulLiteral","src":"14232:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14220:3:14","nodeType":"YulIdentifier","src":"14220:3:14"},"nativeSrc":"14220:14:14","nodeType":"YulFunctionCall","src":"14220:14:14"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nativeSrc":"14236:26:14","nodeType":"YulLiteral","src":"14236:26:14","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nativeSrc":"14213:6:14","nodeType":"YulIdentifier","src":"14213:6:14"},"nativeSrc":"14213:50:14","nodeType":"YulFunctionCall","src":"14213:50:14"},"nativeSrc":"14213:50:14","nodeType":"YulExpressionStatement","src":"14213:50:14"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nativeSrc":"14096:174:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14194:6:14","nodeType":"YulTypedName","src":"14194:6:14","type":""}],"src":"14096:174:14"},{"body":{"nativeSrc":"14422:220:14","nodeType":"YulBlock","src":"14422:220:14","statements":[{"nativeSrc":"14432:74:14","nodeType":"YulAssignment","src":"14432:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"14498:3:14","nodeType":"YulIdentifier","src":"14498:3:14"},{"kind":"number","nativeSrc":"14503:2:14","nodeType":"YulLiteral","src":"14503:2:14","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14439:58:14","nodeType":"YulIdentifier","src":"14439:58:14"},"nativeSrc":"14439:67:14","nodeType":"YulFunctionCall","src":"14439:67:14"},"variableNames":[{"name":"pos","nativeSrc":"14432:3:14","nodeType":"YulIdentifier","src":"14432:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14604:3:14","nodeType":"YulIdentifier","src":"14604:3:14"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nativeSrc":"14515:88:14","nodeType":"YulIdentifier","src":"14515:88:14"},"nativeSrc":"14515:93:14","nodeType":"YulFunctionCall","src":"14515:93:14"},"nativeSrc":"14515:93:14","nodeType":"YulExpressionStatement","src":"14515:93:14"},{"nativeSrc":"14617:19:14","nodeType":"YulAssignment","src":"14617:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"14628:3:14","nodeType":"YulIdentifier","src":"14628:3:14"},{"kind":"number","nativeSrc":"14633:2:14","nodeType":"YulLiteral","src":"14633:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14624:3:14","nodeType":"YulIdentifier","src":"14624:3:14"},"nativeSrc":"14624:12:14","nodeType":"YulFunctionCall","src":"14624:12:14"},"variableNames":[{"name":"end","nativeSrc":"14617:3:14","nodeType":"YulIdentifier","src":"14617:3:14"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nativeSrc":"14276:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14410:3:14","nodeType":"YulTypedName","src":"14410:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14418:3:14","nodeType":"YulTypedName","src":"14418:3:14","type":""}],"src":"14276:366:14"},{"body":{"nativeSrc":"14819:248:14","nodeType":"YulBlock","src":"14819:248:14","statements":[{"nativeSrc":"14829:26:14","nodeType":"YulAssignment","src":"14829:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"14841:9:14","nodeType":"YulIdentifier","src":"14841:9:14"},{"kind":"number","nativeSrc":"14852:2:14","nodeType":"YulLiteral","src":"14852:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14837:3:14","nodeType":"YulIdentifier","src":"14837:3:14"},"nativeSrc":"14837:18:14","nodeType":"YulFunctionCall","src":"14837:18:14"},"variableNames":[{"name":"tail","nativeSrc":"14829:4:14","nodeType":"YulIdentifier","src":"14829:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14876:9:14","nodeType":"YulIdentifier","src":"14876:9:14"},{"kind":"number","nativeSrc":"14887:1:14","nodeType":"YulLiteral","src":"14887:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14872:3:14","nodeType":"YulIdentifier","src":"14872:3:14"},"nativeSrc":"14872:17:14","nodeType":"YulFunctionCall","src":"14872:17:14"},{"arguments":[{"name":"tail","nativeSrc":"14895:4:14","nodeType":"YulIdentifier","src":"14895:4:14"},{"name":"headStart","nativeSrc":"14901:9:14","nodeType":"YulIdentifier","src":"14901:9:14"}],"functionName":{"name":"sub","nativeSrc":"14891:3:14","nodeType":"YulIdentifier","src":"14891:3:14"},"nativeSrc":"14891:20:14","nodeType":"YulFunctionCall","src":"14891:20:14"}],"functionName":{"name":"mstore","nativeSrc":"14865:6:14","nodeType":"YulIdentifier","src":"14865:6:14"},"nativeSrc":"14865:47:14","nodeType":"YulFunctionCall","src":"14865:47:14"},"nativeSrc":"14865:47:14","nodeType":"YulExpressionStatement","src":"14865:47:14"},{"nativeSrc":"14921:139:14","nodeType":"YulAssignment","src":"14921:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"15055:4:14","nodeType":"YulIdentifier","src":"15055:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nativeSrc":"14929:124:14","nodeType":"YulIdentifier","src":"14929:124:14"},"nativeSrc":"14929:131:14","nodeType":"YulFunctionCall","src":"14929:131:14"},"variableNames":[{"name":"tail","nativeSrc":"14921:4:14","nodeType":"YulIdentifier","src":"14921:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14648:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14799:9:14","nodeType":"YulTypedName","src":"14799:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14814:4:14","nodeType":"YulTypedName","src":"14814:4:14","type":""}],"src":"14648:419:14"},{"body":{"nativeSrc":"15179:122:14","nodeType":"YulBlock","src":"15179:122:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15201:6:14","nodeType":"YulIdentifier","src":"15201:6:14"},{"kind":"number","nativeSrc":"15209:1:14","nodeType":"YulLiteral","src":"15209:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15197:3:14","nodeType":"YulIdentifier","src":"15197:3:14"},"nativeSrc":"15197:14:14","nodeType":"YulFunctionCall","src":"15197:14:14"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nativeSrc":"15213:34:14","nodeType":"YulLiteral","src":"15213:34:14","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nativeSrc":"15190:6:14","nodeType":"YulIdentifier","src":"15190:6:14"},"nativeSrc":"15190:58:14","nodeType":"YulFunctionCall","src":"15190:58:14"},"nativeSrc":"15190:58:14","nodeType":"YulExpressionStatement","src":"15190:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15269:6:14","nodeType":"YulIdentifier","src":"15269:6:14"},{"kind":"number","nativeSrc":"15277:2:14","nodeType":"YulLiteral","src":"15277:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15265:3:14","nodeType":"YulIdentifier","src":"15265:3:14"},"nativeSrc":"15265:15:14","nodeType":"YulFunctionCall","src":"15265:15:14"},{"hexValue":"6c6964206f776e6572","kind":"string","nativeSrc":"15282:11:14","nodeType":"YulLiteral","src":"15282:11:14","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nativeSrc":"15258:6:14","nodeType":"YulIdentifier","src":"15258:6:14"},"nativeSrc":"15258:36:14","nodeType":"YulFunctionCall","src":"15258:36:14"},"nativeSrc":"15258:36:14","nodeType":"YulExpressionStatement","src":"15258:36:14"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nativeSrc":"15073:228:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15171:6:14","nodeType":"YulTypedName","src":"15171:6:14","type":""}],"src":"15073:228:14"},{"body":{"nativeSrc":"15453:220:14","nodeType":"YulBlock","src":"15453:220:14","statements":[{"nativeSrc":"15463:74:14","nodeType":"YulAssignment","src":"15463:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"15529:3:14","nodeType":"YulIdentifier","src":"15529:3:14"},{"kind":"number","nativeSrc":"15534:2:14","nodeType":"YulLiteral","src":"15534:2:14","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15470:58:14","nodeType":"YulIdentifier","src":"15470:58:14"},"nativeSrc":"15470:67:14","nodeType":"YulFunctionCall","src":"15470:67:14"},"variableNames":[{"name":"pos","nativeSrc":"15463:3:14","nodeType":"YulIdentifier","src":"15463:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15635:3:14","nodeType":"YulIdentifier","src":"15635:3:14"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nativeSrc":"15546:88:14","nodeType":"YulIdentifier","src":"15546:88:14"},"nativeSrc":"15546:93:14","nodeType":"YulFunctionCall","src":"15546:93:14"},"nativeSrc":"15546:93:14","nodeType":"YulExpressionStatement","src":"15546:93:14"},{"nativeSrc":"15648:19:14","nodeType":"YulAssignment","src":"15648:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"15659:3:14","nodeType":"YulIdentifier","src":"15659:3:14"},{"kind":"number","nativeSrc":"15664:2:14","nodeType":"YulLiteral","src":"15664:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15655:3:14","nodeType":"YulIdentifier","src":"15655:3:14"},"nativeSrc":"15655:12:14","nodeType":"YulFunctionCall","src":"15655:12:14"},"variableNames":[{"name":"end","nativeSrc":"15648:3:14","nodeType":"YulIdentifier","src":"15648:3:14"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nativeSrc":"15307:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15441:3:14","nodeType":"YulTypedName","src":"15441:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15449:3:14","nodeType":"YulTypedName","src":"15449:3:14","type":""}],"src":"15307:366:14"},{"body":{"nativeSrc":"15850:248:14","nodeType":"YulBlock","src":"15850:248:14","statements":[{"nativeSrc":"15860:26:14","nodeType":"YulAssignment","src":"15860:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"15872:9:14","nodeType":"YulIdentifier","src":"15872:9:14"},{"kind":"number","nativeSrc":"15883:2:14","nodeType":"YulLiteral","src":"15883:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15868:3:14","nodeType":"YulIdentifier","src":"15868:3:14"},"nativeSrc":"15868:18:14","nodeType":"YulFunctionCall","src":"15868:18:14"},"variableNames":[{"name":"tail","nativeSrc":"15860:4:14","nodeType":"YulIdentifier","src":"15860:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15907:9:14","nodeType":"YulIdentifier","src":"15907:9:14"},{"kind":"number","nativeSrc":"15918:1:14","nodeType":"YulLiteral","src":"15918:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15903:3:14","nodeType":"YulIdentifier","src":"15903:3:14"},"nativeSrc":"15903:17:14","nodeType":"YulFunctionCall","src":"15903:17:14"},{"arguments":[{"name":"tail","nativeSrc":"15926:4:14","nodeType":"YulIdentifier","src":"15926:4:14"},{"name":"headStart","nativeSrc":"15932:9:14","nodeType":"YulIdentifier","src":"15932:9:14"}],"functionName":{"name":"sub","nativeSrc":"15922:3:14","nodeType":"YulIdentifier","src":"15922:3:14"},"nativeSrc":"15922:20:14","nodeType":"YulFunctionCall","src":"15922:20:14"}],"functionName":{"name":"mstore","nativeSrc":"15896:6:14","nodeType":"YulIdentifier","src":"15896:6:14"},"nativeSrc":"15896:47:14","nodeType":"YulFunctionCall","src":"15896:47:14"},"nativeSrc":"15896:47:14","nodeType":"YulExpressionStatement","src":"15896:47:14"},{"nativeSrc":"15952:139:14","nodeType":"YulAssignment","src":"15952:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"16086:4:14","nodeType":"YulIdentifier","src":"16086:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nativeSrc":"15960:124:14","nodeType":"YulIdentifier","src":"15960:124:14"},"nativeSrc":"15960:131:14","nodeType":"YulFunctionCall","src":"15960:131:14"},"variableNames":[{"name":"tail","nativeSrc":"15952:4:14","nodeType":"YulIdentifier","src":"15952:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15679:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15830:9:14","nodeType":"YulTypedName","src":"15830:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15845:4:14","nodeType":"YulTypedName","src":"15845:4:14","type":""}],"src":"15679:419:14"},{"body":{"nativeSrc":"16218:34:14","nodeType":"YulBlock","src":"16218:34:14","statements":[{"nativeSrc":"16228:18:14","nodeType":"YulAssignment","src":"16228:18:14","value":{"name":"pos","nativeSrc":"16243:3:14","nodeType":"YulIdentifier","src":"16243:3:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"16228:11:14","nodeType":"YulIdentifier","src":"16228:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16104:148:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16190:3:14","nodeType":"YulTypedName","src":"16190:3:14","type":""},{"name":"length","nativeSrc":"16195:6:14","nodeType":"YulTypedName","src":"16195:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"16206:11:14","nodeType":"YulTypedName","src":"16206:11:14","type":""}],"src":"16104:148:14"},{"body":{"nativeSrc":"16368:280:14","nodeType":"YulBlock","src":"16368:280:14","statements":[{"nativeSrc":"16378:53:14","nodeType":"YulVariableDeclaration","src":"16378:53:14","value":{"arguments":[{"name":"value","nativeSrc":"16425:5:14","nodeType":"YulIdentifier","src":"16425:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"16392:32:14","nodeType":"YulIdentifier","src":"16392:32:14"},"nativeSrc":"16392:39:14","nodeType":"YulFunctionCall","src":"16392:39:14"},"variables":[{"name":"length","nativeSrc":"16382:6:14","nodeType":"YulTypedName","src":"16382:6:14","type":""}]},{"nativeSrc":"16440:96:14","nodeType":"YulAssignment","src":"16440:96:14","value":{"arguments":[{"name":"pos","nativeSrc":"16524:3:14","nodeType":"YulIdentifier","src":"16524:3:14"},{"name":"length","nativeSrc":"16529:6:14","nodeType":"YulIdentifier","src":"16529:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16447:76:14","nodeType":"YulIdentifier","src":"16447:76:14"},"nativeSrc":"16447:89:14","nodeType":"YulFunctionCall","src":"16447:89:14"},"variableNames":[{"name":"pos","nativeSrc":"16440:3:14","nodeType":"YulIdentifier","src":"16440:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16584:5:14","nodeType":"YulIdentifier","src":"16584:5:14"},{"kind":"number","nativeSrc":"16591:4:14","nodeType":"YulLiteral","src":"16591:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16580:3:14","nodeType":"YulIdentifier","src":"16580:3:14"},"nativeSrc":"16580:16:14","nodeType":"YulFunctionCall","src":"16580:16:14"},{"name":"pos","nativeSrc":"16598:3:14","nodeType":"YulIdentifier","src":"16598:3:14"},{"name":"length","nativeSrc":"16603:6:14","nodeType":"YulIdentifier","src":"16603:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"16545:34:14","nodeType":"YulIdentifier","src":"16545:34:14"},"nativeSrc":"16545:65:14","nodeType":"YulFunctionCall","src":"16545:65:14"},"nativeSrc":"16545:65:14","nodeType":"YulExpressionStatement","src":"16545:65:14"},{"nativeSrc":"16619:23:14","nodeType":"YulAssignment","src":"16619:23:14","value":{"arguments":[{"name":"pos","nativeSrc":"16630:3:14","nodeType":"YulIdentifier","src":"16630:3:14"},{"name":"length","nativeSrc":"16635:6:14","nodeType":"YulIdentifier","src":"16635:6:14"}],"functionName":{"name":"add","nativeSrc":"16626:3:14","nodeType":"YulIdentifier","src":"16626:3:14"},"nativeSrc":"16626:16:14","nodeType":"YulFunctionCall","src":"16626:16:14"},"variableNames":[{"name":"end","nativeSrc":"16619:3:14","nodeType":"YulIdentifier","src":"16619:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16258:390:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16349:5:14","nodeType":"YulTypedName","src":"16349:5:14","type":""},{"name":"pos","nativeSrc":"16356:3:14","nodeType":"YulTypedName","src":"16356:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16364:3:14","nodeType":"YulTypedName","src":"16364:3:14","type":""}],"src":"16258:390:14"},{"body":{"nativeSrc":"16838:251:14","nodeType":"YulBlock","src":"16838:251:14","statements":[{"nativeSrc":"16849:102:14","nodeType":"YulAssignment","src":"16849:102:14","value":{"arguments":[{"name":"value0","nativeSrc":"16938:6:14","nodeType":"YulIdentifier","src":"16938:6:14"},{"name":"pos","nativeSrc":"16947:3:14","nodeType":"YulIdentifier","src":"16947:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16856:81:14","nodeType":"YulIdentifier","src":"16856:81:14"},"nativeSrc":"16856:95:14","nodeType":"YulFunctionCall","src":"16856:95:14"},"variableNames":[{"name":"pos","nativeSrc":"16849:3:14","nodeType":"YulIdentifier","src":"16849:3:14"}]},{"nativeSrc":"16961:102:14","nodeType":"YulAssignment","src":"16961:102:14","value":{"arguments":[{"name":"value1","nativeSrc":"17050:6:14","nodeType":"YulIdentifier","src":"17050:6:14"},{"name":"pos","nativeSrc":"17059:3:14","nodeType":"YulIdentifier","src":"17059:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16968:81:14","nodeType":"YulIdentifier","src":"16968:81:14"},"nativeSrc":"16968:95:14","nodeType":"YulFunctionCall","src":"16968:95:14"},"variableNames":[{"name":"pos","nativeSrc":"16961:3:14","nodeType":"YulIdentifier","src":"16961:3:14"}]},{"nativeSrc":"17073:10:14","nodeType":"YulAssignment","src":"17073:10:14","value":{"name":"pos","nativeSrc":"17080:3:14","nodeType":"YulIdentifier","src":"17080:3:14"},"variableNames":[{"name":"end","nativeSrc":"17073:3:14","nodeType":"YulIdentifier","src":"17073:3:14"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"16654:435:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16809:3:14","nodeType":"YulTypedName","src":"16809:3:14","type":""},{"name":"value1","nativeSrc":"16815:6:14","nodeType":"YulTypedName","src":"16815:6:14","type":""},{"name":"value0","nativeSrc":"16823:6:14","nodeType":"YulTypedName","src":"16823:6:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16834:3:14","nodeType":"YulTypedName","src":"16834:3:14","type":""}],"src":"16654:435:14"},{"body":{"nativeSrc":"17201:118:14","nodeType":"YulBlock","src":"17201:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17223:6:14","nodeType":"YulIdentifier","src":"17223:6:14"},{"kind":"number","nativeSrc":"17231:1:14","nodeType":"YulLiteral","src":"17231:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17219:3:14","nodeType":"YulIdentifier","src":"17219:3:14"},"nativeSrc":"17219:14:14","nodeType":"YulFunctionCall","src":"17219:14:14"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nativeSrc":"17235:34:14","nodeType":"YulLiteral","src":"17235:34:14","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nativeSrc":"17212:6:14","nodeType":"YulIdentifier","src":"17212:6:14"},"nativeSrc":"17212:58:14","nodeType":"YulFunctionCall","src":"17212:58:14"},"nativeSrc":"17212:58:14","nodeType":"YulExpressionStatement","src":"17212:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17291:6:14","nodeType":"YulIdentifier","src":"17291:6:14"},{"kind":"number","nativeSrc":"17299:2:14","nodeType":"YulLiteral","src":"17299:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17287:3:14","nodeType":"YulIdentifier","src":"17287:3:14"},"nativeSrc":"17287:15:14","nodeType":"YulFunctionCall","src":"17287:15:14"},{"hexValue":"6f776e6572","kind":"string","nativeSrc":"17304:7:14","nodeType":"YulLiteral","src":"17304:7:14","type":"","value":"owner"}],"functionName":{"name":"mstore","nativeSrc":"17280:6:14","nodeType":"YulIdentifier","src":"17280:6:14"},"nativeSrc":"17280:32:14","nodeType":"YulFunctionCall","src":"17280:32:14"},"nativeSrc":"17280:32:14","nodeType":"YulExpressionStatement","src":"17280:32:14"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nativeSrc":"17095:224:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17193:6:14","nodeType":"YulTypedName","src":"17193:6:14","type":""}],"src":"17095:224:14"},{"body":{"nativeSrc":"17471:220:14","nodeType":"YulBlock","src":"17471:220:14","statements":[{"nativeSrc":"17481:74:14","nodeType":"YulAssignment","src":"17481:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"17547:3:14","nodeType":"YulIdentifier","src":"17547:3:14"},{"kind":"number","nativeSrc":"17552:2:14","nodeType":"YulLiteral","src":"17552:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17488:58:14","nodeType":"YulIdentifier","src":"17488:58:14"},"nativeSrc":"17488:67:14","nodeType":"YulFunctionCall","src":"17488:67:14"},"variableNames":[{"name":"pos","nativeSrc":"17481:3:14","nodeType":"YulIdentifier","src":"17481:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17653:3:14","nodeType":"YulIdentifier","src":"17653:3:14"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nativeSrc":"17564:88:14","nodeType":"YulIdentifier","src":"17564:88:14"},"nativeSrc":"17564:93:14","nodeType":"YulFunctionCall","src":"17564:93:14"},"nativeSrc":"17564:93:14","nodeType":"YulExpressionStatement","src":"17564:93:14"},{"nativeSrc":"17666:19:14","nodeType":"YulAssignment","src":"17666:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"17677:3:14","nodeType":"YulIdentifier","src":"17677:3:14"},{"kind":"number","nativeSrc":"17682:2:14","nodeType":"YulLiteral","src":"17682:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17673:3:14","nodeType":"YulIdentifier","src":"17673:3:14"},"nativeSrc":"17673:12:14","nodeType":"YulFunctionCall","src":"17673:12:14"},"variableNames":[{"name":"end","nativeSrc":"17666:3:14","nodeType":"YulIdentifier","src":"17666:3:14"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nativeSrc":"17325:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17459:3:14","nodeType":"YulTypedName","src":"17459:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17467:3:14","nodeType":"YulTypedName","src":"17467:3:14","type":""}],"src":"17325:366:14"},{"body":{"nativeSrc":"17868:248:14","nodeType":"YulBlock","src":"17868:248:14","statements":[{"nativeSrc":"17878:26:14","nodeType":"YulAssignment","src":"17878:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"17890:9:14","nodeType":"YulIdentifier","src":"17890:9:14"},{"kind":"number","nativeSrc":"17901:2:14","nodeType":"YulLiteral","src":"17901:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17886:3:14","nodeType":"YulIdentifier","src":"17886:3:14"},"nativeSrc":"17886:18:14","nodeType":"YulFunctionCall","src":"17886:18:14"},"variableNames":[{"name":"tail","nativeSrc":"17878:4:14","nodeType":"YulIdentifier","src":"17878:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17925:9:14","nodeType":"YulIdentifier","src":"17925:9:14"},{"kind":"number","nativeSrc":"17936:1:14","nodeType":"YulLiteral","src":"17936:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17921:3:14","nodeType":"YulIdentifier","src":"17921:3:14"},"nativeSrc":"17921:17:14","nodeType":"YulFunctionCall","src":"17921:17:14"},{"arguments":[{"name":"tail","nativeSrc":"17944:4:14","nodeType":"YulIdentifier","src":"17944:4:14"},{"name":"headStart","nativeSrc":"17950:9:14","nodeType":"YulIdentifier","src":"17950:9:14"}],"functionName":{"name":"sub","nativeSrc":"17940:3:14","nodeType":"YulIdentifier","src":"17940:3:14"},"nativeSrc":"17940:20:14","nodeType":"YulFunctionCall","src":"17940:20:14"}],"functionName":{"name":"mstore","nativeSrc":"17914:6:14","nodeType":"YulIdentifier","src":"17914:6:14"},"nativeSrc":"17914:47:14","nodeType":"YulFunctionCall","src":"17914:47:14"},"nativeSrc":"17914:47:14","nodeType":"YulExpressionStatement","src":"17914:47:14"},{"nativeSrc":"17970:139:14","nodeType":"YulAssignment","src":"17970:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"18104:4:14","nodeType":"YulIdentifier","src":"18104:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nativeSrc":"17978:124:14","nodeType":"YulIdentifier","src":"17978:124:14"},"nativeSrc":"17978:131:14","nodeType":"YulFunctionCall","src":"17978:131:14"},"variableNames":[{"name":"tail","nativeSrc":"17970:4:14","nodeType":"YulIdentifier","src":"17970:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17697:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17848:9:14","nodeType":"YulTypedName","src":"17848:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17863:4:14","nodeType":"YulTypedName","src":"17863:4:14","type":""}],"src":"17697:419:14"},{"body":{"nativeSrc":"18228:117:14","nodeType":"YulBlock","src":"18228:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18250:6:14","nodeType":"YulIdentifier","src":"18250:6:14"},{"kind":"number","nativeSrc":"18258:1:14","nodeType":"YulLiteral","src":"18258:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18246:3:14","nodeType":"YulIdentifier","src":"18246:3:14"},"nativeSrc":"18246:14:14","nodeType":"YulFunctionCall","src":"18246:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nativeSrc":"18262:34:14","nodeType":"YulLiteral","src":"18262:34:14","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nativeSrc":"18239:6:14","nodeType":"YulIdentifier","src":"18239:6:14"},"nativeSrc":"18239:58:14","nodeType":"YulFunctionCall","src":"18239:58:14"},"nativeSrc":"18239:58:14","nodeType":"YulExpressionStatement","src":"18239:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18318:6:14","nodeType":"YulIdentifier","src":"18318:6:14"},{"kind":"number","nativeSrc":"18326:2:14","nodeType":"YulLiteral","src":"18326:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18314:3:14","nodeType":"YulIdentifier","src":"18314:3:14"},"nativeSrc":"18314:15:14","nodeType":"YulFunctionCall","src":"18314:15:14"},{"hexValue":"72657373","kind":"string","nativeSrc":"18331:6:14","nodeType":"YulLiteral","src":"18331:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nativeSrc":"18307:6:14","nodeType":"YulIdentifier","src":"18307:6:14"},"nativeSrc":"18307:31:14","nodeType":"YulFunctionCall","src":"18307:31:14"},"nativeSrc":"18307:31:14","nodeType":"YulExpressionStatement","src":"18307:31:14"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nativeSrc":"18122:223:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18220:6:14","nodeType":"YulTypedName","src":"18220:6:14","type":""}],"src":"18122:223:14"},{"body":{"nativeSrc":"18497:220:14","nodeType":"YulBlock","src":"18497:220:14","statements":[{"nativeSrc":"18507:74:14","nodeType":"YulAssignment","src":"18507:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"18573:3:14","nodeType":"YulIdentifier","src":"18573:3:14"},{"kind":"number","nativeSrc":"18578:2:14","nodeType":"YulLiteral","src":"18578:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18514:58:14","nodeType":"YulIdentifier","src":"18514:58:14"},"nativeSrc":"18514:67:14","nodeType":"YulFunctionCall","src":"18514:67:14"},"variableNames":[{"name":"pos","nativeSrc":"18507:3:14","nodeType":"YulIdentifier","src":"18507:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18679:3:14","nodeType":"YulIdentifier","src":"18679:3:14"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nativeSrc":"18590:88:14","nodeType":"YulIdentifier","src":"18590:88:14"},"nativeSrc":"18590:93:14","nodeType":"YulFunctionCall","src":"18590:93:14"},"nativeSrc":"18590:93:14","nodeType":"YulExpressionStatement","src":"18590:93:14"},{"nativeSrc":"18692:19:14","nodeType":"YulAssignment","src":"18692:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"18703:3:14","nodeType":"YulIdentifier","src":"18703:3:14"},{"kind":"number","nativeSrc":"18708:2:14","nodeType":"YulLiteral","src":"18708:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18699:3:14","nodeType":"YulIdentifier","src":"18699:3:14"},"nativeSrc":"18699:12:14","nodeType":"YulFunctionCall","src":"18699:12:14"},"variableNames":[{"name":"end","nativeSrc":"18692:3:14","nodeType":"YulIdentifier","src":"18692:3:14"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nativeSrc":"18351:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18485:3:14","nodeType":"YulTypedName","src":"18485:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18493:3:14","nodeType":"YulTypedName","src":"18493:3:14","type":""}],"src":"18351:366:14"},{"body":{"nativeSrc":"18894:248:14","nodeType":"YulBlock","src":"18894:248:14","statements":[{"nativeSrc":"18904:26:14","nodeType":"YulAssignment","src":"18904:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"18916:9:14","nodeType":"YulIdentifier","src":"18916:9:14"},{"kind":"number","nativeSrc":"18927:2:14","nodeType":"YulLiteral","src":"18927:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18912:3:14","nodeType":"YulIdentifier","src":"18912:3:14"},"nativeSrc":"18912:18:14","nodeType":"YulFunctionCall","src":"18912:18:14"},"variableNames":[{"name":"tail","nativeSrc":"18904:4:14","nodeType":"YulIdentifier","src":"18904:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18951:9:14","nodeType":"YulIdentifier","src":"18951:9:14"},{"kind":"number","nativeSrc":"18962:1:14","nodeType":"YulLiteral","src":"18962:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18947:3:14","nodeType":"YulIdentifier","src":"18947:3:14"},"nativeSrc":"18947:17:14","nodeType":"YulFunctionCall","src":"18947:17:14"},{"arguments":[{"name":"tail","nativeSrc":"18970:4:14","nodeType":"YulIdentifier","src":"18970:4:14"},{"name":"headStart","nativeSrc":"18976:9:14","nodeType":"YulIdentifier","src":"18976:9:14"}],"functionName":{"name":"sub","nativeSrc":"18966:3:14","nodeType":"YulIdentifier","src":"18966:3:14"},"nativeSrc":"18966:20:14","nodeType":"YulFunctionCall","src":"18966:20:14"}],"functionName":{"name":"mstore","nativeSrc":"18940:6:14","nodeType":"YulIdentifier","src":"18940:6:14"},"nativeSrc":"18940:47:14","nodeType":"YulFunctionCall","src":"18940:47:14"},"nativeSrc":"18940:47:14","nodeType":"YulExpressionStatement","src":"18940:47:14"},{"nativeSrc":"18996:139:14","nodeType":"YulAssignment","src":"18996:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"19130:4:14","nodeType":"YulIdentifier","src":"19130:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nativeSrc":"19004:124:14","nodeType":"YulIdentifier","src":"19004:124:14"},"nativeSrc":"19004:131:14","nodeType":"YulFunctionCall","src":"19004:131:14"},"variableNames":[{"name":"tail","nativeSrc":"18996:4:14","nodeType":"YulIdentifier","src":"18996:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18723:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18874:9:14","nodeType":"YulTypedName","src":"18874:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18889:4:14","nodeType":"YulTypedName","src":"18889:4:14","type":""}],"src":"18723:419:14"},{"body":{"nativeSrc":"19254:69:14","nodeType":"YulBlock","src":"19254:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"19276:6:14","nodeType":"YulIdentifier","src":"19276:6:14"},{"kind":"number","nativeSrc":"19284:1:14","nodeType":"YulLiteral","src":"19284:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19272:3:14","nodeType":"YulIdentifier","src":"19272:3:14"},"nativeSrc":"19272:14:14","nodeType":"YulFunctionCall","src":"19272:14:14"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nativeSrc":"19288:27:14","nodeType":"YulLiteral","src":"19288:27:14","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nativeSrc":"19265:6:14","nodeType":"YulIdentifier","src":"19265:6:14"},"nativeSrc":"19265:51:14","nodeType":"YulFunctionCall","src":"19265:51:14"},"nativeSrc":"19265:51:14","nodeType":"YulExpressionStatement","src":"19265:51:14"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nativeSrc":"19148:175:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"19246:6:14","nodeType":"YulTypedName","src":"19246:6:14","type":""}],"src":"19148:175:14"},{"body":{"nativeSrc":"19475:220:14","nodeType":"YulBlock","src":"19475:220:14","statements":[{"nativeSrc":"19485:74:14","nodeType":"YulAssignment","src":"19485:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"19551:3:14","nodeType":"YulIdentifier","src":"19551:3:14"},{"kind":"number","nativeSrc":"19556:2:14","nodeType":"YulLiteral","src":"19556:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"19492:58:14","nodeType":"YulIdentifier","src":"19492:58:14"},"nativeSrc":"19492:67:14","nodeType":"YulFunctionCall","src":"19492:67:14"},"variableNames":[{"name":"pos","nativeSrc":"19485:3:14","nodeType":"YulIdentifier","src":"19485:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"19657:3:14","nodeType":"YulIdentifier","src":"19657:3:14"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nativeSrc":"19568:88:14","nodeType":"YulIdentifier","src":"19568:88:14"},"nativeSrc":"19568:93:14","nodeType":"YulFunctionCall","src":"19568:93:14"},"nativeSrc":"19568:93:14","nodeType":"YulExpressionStatement","src":"19568:93:14"},{"nativeSrc":"19670:19:14","nodeType":"YulAssignment","src":"19670:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"19681:3:14","nodeType":"YulIdentifier","src":"19681:3:14"},{"kind":"number","nativeSrc":"19686:2:14","nodeType":"YulLiteral","src":"19686:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19677:3:14","nodeType":"YulIdentifier","src":"19677:3:14"},"nativeSrc":"19677:12:14","nodeType":"YulFunctionCall","src":"19677:12:14"},"variableNames":[{"name":"end","nativeSrc":"19670:3:14","nodeType":"YulIdentifier","src":"19670:3:14"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nativeSrc":"19329:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19463:3:14","nodeType":"YulTypedName","src":"19463:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19471:3:14","nodeType":"YulTypedName","src":"19471:3:14","type":""}],"src":"19329:366:14"},{"body":{"nativeSrc":"19872:248:14","nodeType":"YulBlock","src":"19872:248:14","statements":[{"nativeSrc":"19882:26:14","nodeType":"YulAssignment","src":"19882:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"19894:9:14","nodeType":"YulIdentifier","src":"19894:9:14"},{"kind":"number","nativeSrc":"19905:2:14","nodeType":"YulLiteral","src":"19905:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19890:3:14","nodeType":"YulIdentifier","src":"19890:3:14"},"nativeSrc":"19890:18:14","nodeType":"YulFunctionCall","src":"19890:18:14"},"variableNames":[{"name":"tail","nativeSrc":"19882:4:14","nodeType":"YulIdentifier","src":"19882:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19929:9:14","nodeType":"YulIdentifier","src":"19929:9:14"},{"kind":"number","nativeSrc":"19940:1:14","nodeType":"YulLiteral","src":"19940:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19925:3:14","nodeType":"YulIdentifier","src":"19925:3:14"},"nativeSrc":"19925:17:14","nodeType":"YulFunctionCall","src":"19925:17:14"},{"arguments":[{"name":"tail","nativeSrc":"19948:4:14","nodeType":"YulIdentifier","src":"19948:4:14"},{"name":"headStart","nativeSrc":"19954:9:14","nodeType":"YulIdentifier","src":"19954:9:14"}],"functionName":{"name":"sub","nativeSrc":"19944:3:14","nodeType":"YulIdentifier","src":"19944:3:14"},"nativeSrc":"19944:20:14","nodeType":"YulFunctionCall","src":"19944:20:14"}],"functionName":{"name":"mstore","nativeSrc":"19918:6:14","nodeType":"YulIdentifier","src":"19918:6:14"},"nativeSrc":"19918:47:14","nodeType":"YulFunctionCall","src":"19918:47:14"},"nativeSrc":"19918:47:14","nodeType":"YulExpressionStatement","src":"19918:47:14"},{"nativeSrc":"19974:139:14","nodeType":"YulAssignment","src":"19974:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"20108:4:14","nodeType":"YulIdentifier","src":"20108:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nativeSrc":"19982:124:14","nodeType":"YulIdentifier","src":"19982:124:14"},"nativeSrc":"19982:131:14","nodeType":"YulFunctionCall","src":"19982:131:14"},"variableNames":[{"name":"tail","nativeSrc":"19974:4:14","nodeType":"YulIdentifier","src":"19974:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19701:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19852:9:14","nodeType":"YulTypedName","src":"19852:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19867:4:14","nodeType":"YulTypedName","src":"19867:4:14","type":""}],"src":"19701:419:14"},{"body":{"nativeSrc":"20232:131:14","nodeType":"YulBlock","src":"20232:131:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20254:6:14","nodeType":"YulIdentifier","src":"20254:6:14"},{"kind":"number","nativeSrc":"20262:1:14","nodeType":"YulLiteral","src":"20262:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20250:3:14","nodeType":"YulIdentifier","src":"20250:3:14"},"nativeSrc":"20250:14:14","nodeType":"YulFunctionCall","src":"20250:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nativeSrc":"20266:34:14","nodeType":"YulLiteral","src":"20266:34:14","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nativeSrc":"20243:6:14","nodeType":"YulIdentifier","src":"20243:6:14"},"nativeSrc":"20243:58:14","nodeType":"YulFunctionCall","src":"20243:58:14"},"nativeSrc":"20243:58:14","nodeType":"YulExpressionStatement","src":"20243:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20322:6:14","nodeType":"YulIdentifier","src":"20322:6:14"},{"kind":"number","nativeSrc":"20330:2:14","nodeType":"YulLiteral","src":"20330:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20318:3:14","nodeType":"YulIdentifier","src":"20318:3:14"},"nativeSrc":"20318:15:14","nodeType":"YulFunctionCall","src":"20318:15:14"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nativeSrc":"20335:20:14","nodeType":"YulLiteral","src":"20335:20:14","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nativeSrc":"20311:6:14","nodeType":"YulIdentifier","src":"20311:6:14"},"nativeSrc":"20311:45:14","nodeType":"YulFunctionCall","src":"20311:45:14"},"nativeSrc":"20311:45:14","nodeType":"YulExpressionStatement","src":"20311:45:14"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nativeSrc":"20126:237:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20224:6:14","nodeType":"YulTypedName","src":"20224:6:14","type":""}],"src":"20126:237:14"},{"body":{"nativeSrc":"20515:220:14","nodeType":"YulBlock","src":"20515:220:14","statements":[{"nativeSrc":"20525:74:14","nodeType":"YulAssignment","src":"20525:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"20591:3:14","nodeType":"YulIdentifier","src":"20591:3:14"},{"kind":"number","nativeSrc":"20596:2:14","nodeType":"YulLiteral","src":"20596:2:14","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20532:58:14","nodeType":"YulIdentifier","src":"20532:58:14"},"nativeSrc":"20532:67:14","nodeType":"YulFunctionCall","src":"20532:67:14"},"variableNames":[{"name":"pos","nativeSrc":"20525:3:14","nodeType":"YulIdentifier","src":"20525:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20697:3:14","nodeType":"YulIdentifier","src":"20697:3:14"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nativeSrc":"20608:88:14","nodeType":"YulIdentifier","src":"20608:88:14"},"nativeSrc":"20608:93:14","nodeType":"YulFunctionCall","src":"20608:93:14"},"nativeSrc":"20608:93:14","nodeType":"YulExpressionStatement","src":"20608:93:14"},{"nativeSrc":"20710:19:14","nodeType":"YulAssignment","src":"20710:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"20721:3:14","nodeType":"YulIdentifier","src":"20721:3:14"},{"kind":"number","nativeSrc":"20726:2:14","nodeType":"YulLiteral","src":"20726:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20717:3:14","nodeType":"YulIdentifier","src":"20717:3:14"},"nativeSrc":"20717:12:14","nodeType":"YulFunctionCall","src":"20717:12:14"},"variableNames":[{"name":"end","nativeSrc":"20710:3:14","nodeType":"YulIdentifier","src":"20710:3:14"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nativeSrc":"20369:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20503:3:14","nodeType":"YulTypedName","src":"20503:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20511:3:14","nodeType":"YulTypedName","src":"20511:3:14","type":""}],"src":"20369:366:14"},{"body":{"nativeSrc":"20912:248:14","nodeType":"YulBlock","src":"20912:248:14","statements":[{"nativeSrc":"20922:26:14","nodeType":"YulAssignment","src":"20922:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"20934:9:14","nodeType":"YulIdentifier","src":"20934:9:14"},{"kind":"number","nativeSrc":"20945:2:14","nodeType":"YulLiteral","src":"20945:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20930:3:14","nodeType":"YulIdentifier","src":"20930:3:14"},"nativeSrc":"20930:18:14","nodeType":"YulFunctionCall","src":"20930:18:14"},"variableNames":[{"name":"tail","nativeSrc":"20922:4:14","nodeType":"YulIdentifier","src":"20922:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20969:9:14","nodeType":"YulIdentifier","src":"20969:9:14"},{"kind":"number","nativeSrc":"20980:1:14","nodeType":"YulLiteral","src":"20980:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20965:3:14","nodeType":"YulIdentifier","src":"20965:3:14"},"nativeSrc":"20965:17:14","nodeType":"YulFunctionCall","src":"20965:17:14"},{"arguments":[{"name":"tail","nativeSrc":"20988:4:14","nodeType":"YulIdentifier","src":"20988:4:14"},{"name":"headStart","nativeSrc":"20994:9:14","nodeType":"YulIdentifier","src":"20994:9:14"}],"functionName":{"name":"sub","nativeSrc":"20984:3:14","nodeType":"YulIdentifier","src":"20984:3:14"},"nativeSrc":"20984:20:14","nodeType":"YulFunctionCall","src":"20984:20:14"}],"functionName":{"name":"mstore","nativeSrc":"20958:6:14","nodeType":"YulIdentifier","src":"20958:6:14"},"nativeSrc":"20958:47:14","nodeType":"YulFunctionCall","src":"20958:47:14"},"nativeSrc":"20958:47:14","nodeType":"YulExpressionStatement","src":"20958:47:14"},{"nativeSrc":"21014:139:14","nodeType":"YulAssignment","src":"21014:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"21148:4:14","nodeType":"YulIdentifier","src":"21148:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nativeSrc":"21022:124:14","nodeType":"YulIdentifier","src":"21022:124:14"},"nativeSrc":"21022:131:14","nodeType":"YulFunctionCall","src":"21022:131:14"},"variableNames":[{"name":"tail","nativeSrc":"21014:4:14","nodeType":"YulIdentifier","src":"21014:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20741:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20892:9:14","nodeType":"YulTypedName","src":"20892:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20907:4:14","nodeType":"YulTypedName","src":"20907:4:14","type":""}],"src":"20741:419:14"},{"body":{"nativeSrc":"21194:152:14","nodeType":"YulBlock","src":"21194:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"21211:1:14","nodeType":"YulLiteral","src":"21211:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"21214:77:14","nodeType":"YulLiteral","src":"21214:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"21204:6:14","nodeType":"YulIdentifier","src":"21204:6:14"},"nativeSrc":"21204:88:14","nodeType":"YulFunctionCall","src":"21204:88:14"},"nativeSrc":"21204:88:14","nodeType":"YulExpressionStatement","src":"21204:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21308:1:14","nodeType":"YulLiteral","src":"21308:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"21311:4:14","nodeType":"YulLiteral","src":"21311:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"21301:6:14","nodeType":"YulIdentifier","src":"21301:6:14"},"nativeSrc":"21301:15:14","nodeType":"YulFunctionCall","src":"21301:15:14"},"nativeSrc":"21301:15:14","nodeType":"YulExpressionStatement","src":"21301:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"21332:1:14","nodeType":"YulLiteral","src":"21332:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"21335:4:14","nodeType":"YulLiteral","src":"21335:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"21325:6:14","nodeType":"YulIdentifier","src":"21325:6:14"},"nativeSrc":"21325:15:14","nodeType":"YulFunctionCall","src":"21325:15:14"},"nativeSrc":"21325:15:14","nodeType":"YulExpressionStatement","src":"21325:15:14"}]},"name":"panic_error_0x12","nativeSrc":"21166:180:14","nodeType":"YulFunctionDefinition","src":"21166:180:14"},{"body":{"nativeSrc":"21410:40:14","nodeType":"YulBlock","src":"21410:40:14","statements":[{"nativeSrc":"21421:22:14","nodeType":"YulAssignment","src":"21421:22:14","value":{"arguments":[{"name":"value","nativeSrc":"21437:5:14","nodeType":"YulIdentifier","src":"21437:5:14"}],"functionName":{"name":"mload","nativeSrc":"21431:5:14","nodeType":"YulIdentifier","src":"21431:5:14"},"nativeSrc":"21431:12:14","nodeType":"YulFunctionCall","src":"21431:12:14"},"variableNames":[{"name":"length","nativeSrc":"21421:6:14","nodeType":"YulIdentifier","src":"21421:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"21352:98:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21393:5:14","nodeType":"YulTypedName","src":"21393:5:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"21403:6:14","nodeType":"YulTypedName","src":"21403:6:14","type":""}],"src":"21352:98:14"},{"body":{"nativeSrc":"21551:73:14","nodeType":"YulBlock","src":"21551:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"21568:3:14","nodeType":"YulIdentifier","src":"21568:3:14"},{"name":"length","nativeSrc":"21573:6:14","nodeType":"YulIdentifier","src":"21573:6:14"}],"functionName":{"name":"mstore","nativeSrc":"21561:6:14","nodeType":"YulIdentifier","src":"21561:6:14"},"nativeSrc":"21561:19:14","nodeType":"YulFunctionCall","src":"21561:19:14"},"nativeSrc":"21561:19:14","nodeType":"YulExpressionStatement","src":"21561:19:14"},{"nativeSrc":"21589:29:14","nodeType":"YulAssignment","src":"21589:29:14","value":{"arguments":[{"name":"pos","nativeSrc":"21608:3:14","nodeType":"YulIdentifier","src":"21608:3:14"},{"kind":"number","nativeSrc":"21613:4:14","nodeType":"YulLiteral","src":"21613:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21604:3:14","nodeType":"YulIdentifier","src":"21604:3:14"},"nativeSrc":"21604:14:14","nodeType":"YulFunctionCall","src":"21604:14:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"21589:11:14","nodeType":"YulIdentifier","src":"21589:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"21456:168:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21523:3:14","nodeType":"YulTypedName","src":"21523:3:14","type":""},{"name":"length","nativeSrc":"21528:6:14","nodeType":"YulTypedName","src":"21528:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"21539:11:14","nodeType":"YulTypedName","src":"21539:11:14","type":""}],"src":"21456:168:14"},{"body":{"nativeSrc":"21720:283:14","nodeType":"YulBlock","src":"21720:283:14","statements":[{"nativeSrc":"21730:52:14","nodeType":"YulVariableDeclaration","src":"21730:52:14","value":{"arguments":[{"name":"value","nativeSrc":"21776:5:14","nodeType":"YulIdentifier","src":"21776:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"21744:31:14","nodeType":"YulIdentifier","src":"21744:31:14"},"nativeSrc":"21744:38:14","nodeType":"YulFunctionCall","src":"21744:38:14"},"variables":[{"name":"length","nativeSrc":"21734:6:14","nodeType":"YulTypedName","src":"21734:6:14","type":""}]},{"nativeSrc":"21791:77:14","nodeType":"YulAssignment","src":"21791:77:14","value":{"arguments":[{"name":"pos","nativeSrc":"21856:3:14","nodeType":"YulIdentifier","src":"21856:3:14"},{"name":"length","nativeSrc":"21861:6:14","nodeType":"YulIdentifier","src":"21861:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"21798:57:14","nodeType":"YulIdentifier","src":"21798:57:14"},"nativeSrc":"21798:70:14","nodeType":"YulFunctionCall","src":"21798:70:14"},"variableNames":[{"name":"pos","nativeSrc":"21791:3:14","nodeType":"YulIdentifier","src":"21791:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"21916:5:14","nodeType":"YulIdentifier","src":"21916:5:14"},{"kind":"number","nativeSrc":"21923:4:14","nodeType":"YulLiteral","src":"21923:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21912:3:14","nodeType":"YulIdentifier","src":"21912:3:14"},"nativeSrc":"21912:16:14","nodeType":"YulFunctionCall","src":"21912:16:14"},{"name":"pos","nativeSrc":"21930:3:14","nodeType":"YulIdentifier","src":"21930:3:14"},{"name":"length","nativeSrc":"21935:6:14","nodeType":"YulIdentifier","src":"21935:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"21877:34:14","nodeType":"YulIdentifier","src":"21877:34:14"},"nativeSrc":"21877:65:14","nodeType":"YulFunctionCall","src":"21877:65:14"},"nativeSrc":"21877:65:14","nodeType":"YulExpressionStatement","src":"21877:65:14"},{"nativeSrc":"21951:46:14","nodeType":"YulAssignment","src":"21951:46:14","value":{"arguments":[{"name":"pos","nativeSrc":"21962:3:14","nodeType":"YulIdentifier","src":"21962:3:14"},{"arguments":[{"name":"length","nativeSrc":"21989:6:14","nodeType":"YulIdentifier","src":"21989:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"21967:21:14","nodeType":"YulIdentifier","src":"21967:21:14"},"nativeSrc":"21967:29:14","nodeType":"YulFunctionCall","src":"21967:29:14"}],"functionName":{"name":"add","nativeSrc":"21958:3:14","nodeType":"YulIdentifier","src":"21958:3:14"},"nativeSrc":"21958:39:14","nodeType":"YulFunctionCall","src":"21958:39:14"},"variableNames":[{"name":"end","nativeSrc":"21951:3:14","nodeType":"YulIdentifier","src":"21951:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"21630:373:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21701:5:14","nodeType":"YulTypedName","src":"21701:5:14","type":""},{"name":"pos","nativeSrc":"21708:3:14","nodeType":"YulTypedName","src":"21708:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21716:3:14","nodeType":"YulTypedName","src":"21716:3:14","type":""}],"src":"21630:373:14"},{"body":{"nativeSrc":"22209:440:14","nodeType":"YulBlock","src":"22209:440:14","statements":[{"nativeSrc":"22219:27:14","nodeType":"YulAssignment","src":"22219:27:14","value":{"arguments":[{"name":"headStart","nativeSrc":"22231:9:14","nodeType":"YulIdentifier","src":"22231:9:14"},{"kind":"number","nativeSrc":"22242:3:14","nodeType":"YulLiteral","src":"22242:3:14","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22227:3:14","nodeType":"YulIdentifier","src":"22227:3:14"},"nativeSrc":"22227:19:14","nodeType":"YulFunctionCall","src":"22227:19:14"},"variableNames":[{"name":"tail","nativeSrc":"22219:4:14","nodeType":"YulIdentifier","src":"22219:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22300:6:14","nodeType":"YulIdentifier","src":"22300:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"22313:9:14","nodeType":"YulIdentifier","src":"22313:9:14"},{"kind":"number","nativeSrc":"22324:1:14","nodeType":"YulLiteral","src":"22324:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22309:3:14","nodeType":"YulIdentifier","src":"22309:3:14"},"nativeSrc":"22309:17:14","nodeType":"YulFunctionCall","src":"22309:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22256:43:14","nodeType":"YulIdentifier","src":"22256:43:14"},"nativeSrc":"22256:71:14","nodeType":"YulFunctionCall","src":"22256:71:14"},"nativeSrc":"22256:71:14","nodeType":"YulExpressionStatement","src":"22256:71:14"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22381:6:14","nodeType":"YulIdentifier","src":"22381:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"22394:9:14","nodeType":"YulIdentifier","src":"22394:9:14"},{"kind":"number","nativeSrc":"22405:2:14","nodeType":"YulLiteral","src":"22405:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22390:3:14","nodeType":"YulIdentifier","src":"22390:3:14"},"nativeSrc":"22390:18:14","nodeType":"YulFunctionCall","src":"22390:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22337:43:14","nodeType":"YulIdentifier","src":"22337:43:14"},"nativeSrc":"22337:72:14","nodeType":"YulFunctionCall","src":"22337:72:14"},"nativeSrc":"22337:72:14","nodeType":"YulExpressionStatement","src":"22337:72:14"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"22463:6:14","nodeType":"YulIdentifier","src":"22463:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"22476:9:14","nodeType":"YulIdentifier","src":"22476:9:14"},{"kind":"number","nativeSrc":"22487:2:14","nodeType":"YulLiteral","src":"22487:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22472:3:14","nodeType":"YulIdentifier","src":"22472:3:14"},"nativeSrc":"22472:18:14","nodeType":"YulFunctionCall","src":"22472:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22419:43:14","nodeType":"YulIdentifier","src":"22419:43:14"},"nativeSrc":"22419:72:14","nodeType":"YulFunctionCall","src":"22419:72:14"},"nativeSrc":"22419:72:14","nodeType":"YulExpressionStatement","src":"22419:72:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22512:9:14","nodeType":"YulIdentifier","src":"22512:9:14"},{"kind":"number","nativeSrc":"22523:2:14","nodeType":"YulLiteral","src":"22523:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22508:3:14","nodeType":"YulIdentifier","src":"22508:3:14"},"nativeSrc":"22508:18:14","nodeType":"YulFunctionCall","src":"22508:18:14"},{"arguments":[{"name":"tail","nativeSrc":"22532:4:14","nodeType":"YulIdentifier","src":"22532:4:14"},{"name":"headStart","nativeSrc":"22538:9:14","nodeType":"YulIdentifier","src":"22538:9:14"}],"functionName":{"name":"sub","nativeSrc":"22528:3:14","nodeType":"YulIdentifier","src":"22528:3:14"},"nativeSrc":"22528:20:14","nodeType":"YulFunctionCall","src":"22528:20:14"}],"functionName":{"name":"mstore","nativeSrc":"22501:6:14","nodeType":"YulIdentifier","src":"22501:6:14"},"nativeSrc":"22501:48:14","nodeType":"YulFunctionCall","src":"22501:48:14"},"nativeSrc":"22501:48:14","nodeType":"YulExpressionStatement","src":"22501:48:14"},{"nativeSrc":"22558:84:14","nodeType":"YulAssignment","src":"22558:84:14","value":{"arguments":[{"name":"value3","nativeSrc":"22628:6:14","nodeType":"YulIdentifier","src":"22628:6:14"},{"name":"tail","nativeSrc":"22637:4:14","nodeType":"YulIdentifier","src":"22637:4:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"22566:61:14","nodeType":"YulIdentifier","src":"22566:61:14"},"nativeSrc":"22566:76:14","nodeType":"YulFunctionCall","src":"22566:76:14"},"variableNames":[{"name":"tail","nativeSrc":"22558:4:14","nodeType":"YulIdentifier","src":"22558:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"22009:640:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22157:9:14","nodeType":"YulTypedName","src":"22157:9:14","type":""},{"name":"value3","nativeSrc":"22169:6:14","nodeType":"YulTypedName","src":"22169:6:14","type":""},{"name":"value2","nativeSrc":"22177:6:14","nodeType":"YulTypedName","src":"22177:6:14","type":""},{"name":"value1","nativeSrc":"22185:6:14","nodeType":"YulTypedName","src":"22185:6:14","type":""},{"name":"value0","nativeSrc":"22193:6:14","nodeType":"YulTypedName","src":"22193:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22204:4:14","nodeType":"YulTypedName","src":"22204:4:14","type":""}],"src":"22009:640:14"},{"body":{"nativeSrc":"22717:79:14","nodeType":"YulBlock","src":"22717:79:14","statements":[{"nativeSrc":"22727:22:14","nodeType":"YulAssignment","src":"22727:22:14","value":{"arguments":[{"name":"offset","nativeSrc":"22742:6:14","nodeType":"YulIdentifier","src":"22742:6:14"}],"functionName":{"name":"mload","nativeSrc":"22736:5:14","nodeType":"YulIdentifier","src":"22736:5:14"},"nativeSrc":"22736:13:14","nodeType":"YulFunctionCall","src":"22736:13:14"},"variableNames":[{"name":"value","nativeSrc":"22727:5:14","nodeType":"YulIdentifier","src":"22727:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"22784:5:14","nodeType":"YulIdentifier","src":"22784:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"22758:25:14","nodeType":"YulIdentifier","src":"22758:25:14"},"nativeSrc":"22758:32:14","nodeType":"YulFunctionCall","src":"22758:32:14"},"nativeSrc":"22758:32:14","nodeType":"YulExpressionStatement","src":"22758:32:14"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"22655:141:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"22695:6:14","nodeType":"YulTypedName","src":"22695:6:14","type":""},{"name":"end","nativeSrc":"22703:3:14","nodeType":"YulTypedName","src":"22703:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"22711:5:14","nodeType":"YulTypedName","src":"22711:5:14","type":""}],"src":"22655:141:14"},{"body":{"nativeSrc":"22878:273:14","nodeType":"YulBlock","src":"22878:273:14","statements":[{"body":{"nativeSrc":"22924:83:14","nodeType":"YulBlock","src":"22924:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"22926:77:14","nodeType":"YulIdentifier","src":"22926:77:14"},"nativeSrc":"22926:79:14","nodeType":"YulFunctionCall","src":"22926:79:14"},"nativeSrc":"22926:79:14","nodeType":"YulExpressionStatement","src":"22926:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"22899:7:14","nodeType":"YulIdentifier","src":"22899:7:14"},{"name":"headStart","nativeSrc":"22908:9:14","nodeType":"YulIdentifier","src":"22908:9:14"}],"functionName":{"name":"sub","nativeSrc":"22895:3:14","nodeType":"YulIdentifier","src":"22895:3:14"},"nativeSrc":"22895:23:14","nodeType":"YulFunctionCall","src":"22895:23:14"},{"kind":"number","nativeSrc":"22920:2:14","nodeType":"YulLiteral","src":"22920:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"22891:3:14","nodeType":"YulIdentifier","src":"22891:3:14"},"nativeSrc":"22891:32:14","nodeType":"YulFunctionCall","src":"22891:32:14"},"nativeSrc":"22888:119:14","nodeType":"YulIf","src":"22888:119:14"},{"nativeSrc":"23017:127:14","nodeType":"YulBlock","src":"23017:127:14","statements":[{"nativeSrc":"23032:15:14","nodeType":"YulVariableDeclaration","src":"23032:15:14","value":{"kind":"number","nativeSrc":"23046:1:14","nodeType":"YulLiteral","src":"23046:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23036:6:14","nodeType":"YulTypedName","src":"23036:6:14","type":""}]},{"nativeSrc":"23061:73:14","nodeType":"YulAssignment","src":"23061:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23106:9:14","nodeType":"YulIdentifier","src":"23106:9:14"},{"name":"offset","nativeSrc":"23117:6:14","nodeType":"YulIdentifier","src":"23117:6:14"}],"functionName":{"name":"add","nativeSrc":"23102:3:14","nodeType":"YulIdentifier","src":"23102:3:14"},"nativeSrc":"23102:22:14","nodeType":"YulFunctionCall","src":"23102:22:14"},{"name":"dataEnd","nativeSrc":"23126:7:14","nodeType":"YulIdentifier","src":"23126:7:14"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"23071:30:14","nodeType":"YulIdentifier","src":"23071:30:14"},"nativeSrc":"23071:63:14","nodeType":"YulFunctionCall","src":"23071:63:14"},"variableNames":[{"name":"value0","nativeSrc":"23061:6:14","nodeType":"YulIdentifier","src":"23061:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"22802:349:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22848:9:14","nodeType":"YulTypedName","src":"22848:9:14","type":""},{"name":"dataEnd","nativeSrc":"22859:7:14","nodeType":"YulTypedName","src":"22859:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"22871:6:14","nodeType":"YulTypedName","src":"22871:6:14","type":""}],"src":"22802:349:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906114f4565b6102bc565b6040516100fb919061153c565b60405180910390f35b61010c61039e565b60405161011991906115e7565b60405180910390f35b61013c6004803603810190610137919061163f565b610430565b60405161014991906116ad565b60405180910390f35b61016c600480360381019061016791906116f4565b610476565b005b61018860048036038101906101839190611734565b61058d565b005b6101a4600480360381019061019f9190611734565b6105ed565b005b6101c060048036038101906101bb919061163f565b61060d565b6040516101cd91906116ad565b60405180910390f35b6101f060048036038101906101eb9190611787565b610693565b6040516101fd91906117c3565b60405180910390f35b61020e61074a565b60405161021b91906115e7565b60405180910390f35b61023e6004803603810190610239919061180a565b6107dc565b005b61025a6004803603810190610255919061197f565b6107f2565b005b6102766004803603810190610271919061163f565b610854565b60405161028391906115e7565b60405180910390f35b6102a660048036038101906102a19190611a02565b6108bc565b6040516102b3919061153c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610950565b5b9050919050565b6060600080546103ad90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a71565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109ba565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611b14565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a05565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a05565b6108bc565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611ba6565b60405180910390fd5b6105888383610a0d565b505050565b61059e610598610a05565b82610ac6565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611c38565b60405180910390fd5b6105e8838383610b5b565b505050565b610608838383604051806020016040528060008152506107f2565b505050565b60008061061983610e54565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611ca4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611d36565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461078590611a71565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b5050505050905090565b6107ee6107e7610a05565b8383610e91565b5050565b6108036107fd610a05565b83610ac6565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990611c38565b60405180910390fd5b61084e84848484610ffd565b50505050565b606061085f826109ba565b6000610869611059565b9050600081511161088957604051806020016040528060008152506108b4565b8061089384611070565b6040516020016108a4929190611d92565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c38161113e565b610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611ca4565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a808361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b145750610b1381856108bc565b5b80610b5257508373ffffffffffffffffffffffffffffffffffffffff16610b3a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611e28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611eba565b60405180910390fd5b610c4d838383600161117f565b8273ffffffffffffffffffffffffffffffffffffffff16610c6d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cba90611e28565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e4f8383836001611185565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611f26565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff0919061153c565b60405180910390a3505050565b611008848484610b5b565b6110148484848461118b565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611fb8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161107f84611312565b01905060008167ffffffffffffffff81111561109e5761109d611854565b5b6040519080825280601f01601f1916602001820160405280156110d05781602001600182028036833780820191505090505b509050600082602001820190505b600115611133578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112757611126611fd8565b5b049450600085036110de575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116083610e54565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111ac8473ffffffffffffffffffffffffffffffffffffffff16611465565b15611305578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d5610a05565b8786866040518563ffffffff1660e01b81526004016111f7949392919061205c565b6020604051808303816000875af192505050801561123357506040513d601f19601f8201168201806040525081019061123091906120bd565b60015b6112b5573d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5060008151036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490611fb8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061130a565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611370577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161136657611365611fd8565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113ad576d04ee2d6d415b85acef810000000083816113a3576113a2611fd8565b5b0492506020810190505b662386f26fc1000083106113dc57662386f26fc1000083816113d2576113d1611fd8565b5b0492506010810190505b6305f5e1008310611405576305f5e10083816113fb576113fa611fd8565b5b0492506008810190505b612710831061142a5761271083816114205761141f611fd8565b5b0492506004810190505b6064831061144d576064838161144357611442611fd8565b5b0492506002810190505b600a831061145c576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d18161149c565b81146114dc57600080fd5b50565b6000813590506114ee816114c8565b92915050565b60006020828403121561150a57611509611492565b5b6000611518848285016114df565b91505092915050565b60008115159050919050565b61153681611521565b82525050565b6000602082019050611551600083018461152d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611591578082015181840152602081019050611576565b60008484015250505050565b6000601f19601f8301169050919050565b60006115b982611557565b6115c38185611562565b93506115d3818560208601611573565b6115dc8161159d565b840191505092915050565b6000602082019050818103600083015261160181846115ae565b905092915050565b6000819050919050565b61161c81611609565b811461162757600080fd5b50565b60008135905061163981611613565b92915050565b60006020828403121561165557611654611492565b5b60006116638482850161162a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116978261166c565b9050919050565b6116a78161168c565b82525050565b60006020820190506116c2600083018461169e565b92915050565b6116d18161168c565b81146116dc57600080fd5b50565b6000813590506116ee816116c8565b92915050565b6000806040838503121561170b5761170a611492565b5b6000611719858286016116df565b925050602061172a8582860161162a565b9150509250929050565b60008060006060848603121561174d5761174c611492565b5b600061175b868287016116df565b935050602061176c868287016116df565b925050604061177d8682870161162a565b9150509250925092565b60006020828403121561179d5761179c611492565b5b60006117ab848285016116df565b91505092915050565b6117bd81611609565b82525050565b60006020820190506117d860008301846117b4565b92915050565b6117e781611521565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b6000806040838503121561182157611820611492565b5b600061182f858286016116df565b9250506020611840858286016117f5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61188c8261159d565b810181811067ffffffffffffffff821117156118ab576118aa611854565b5b80604052505050565b60006118be611488565b90506118ca8282611883565b919050565b600067ffffffffffffffff8211156118ea576118e9611854565b5b6118f38261159d565b9050602081019050919050565b82818337600083830152505050565b600061192261191d846118cf565b6118b4565b90508281526020810184848401111561193e5761193d61184f565b5b611949848285611900565b509392505050565b600082601f8301126119665761196561184a565b5b813561197684826020860161190f565b91505092915050565b6000806000806080858703121561199957611998611492565b5b60006119a7878288016116df565b94505060206119b8878288016116df565b93505060406119c98782880161162a565b925050606085013567ffffffffffffffff8111156119ea576119e9611497565b5b6119f687828801611951565b91505092959194509250565b60008060408385031215611a1957611a18611492565b5b6000611a27858286016116df565b9250506020611a38858286016116df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a8957607f821691505b602082108103611a9c57611a9b611a42565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611afe602183611562565b9150611b0982611aa2565b604082019050919050565b60006020820190508181036000830152611b2d81611af1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b90603d83611562565b9150611b9b82611b34565b604082019050919050565b60006020820190508181036000830152611bbf81611b83565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c22602d83611562565b9150611c2d82611bc6565b604082019050919050565b60006020820190508181036000830152611c5181611c15565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c8e601883611562565b9150611c9982611c58565b602082019050919050565b60006020820190508181036000830152611cbd81611c81565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d20602983611562565b9150611d2b82611cc4565b604082019050919050565b60006020820190508181036000830152611d4f81611d13565b9050919050565b600081905092915050565b6000611d6c82611557565b611d768185611d56565b9350611d86818560208601611573565b80840191505092915050565b6000611d9e8285611d61565b9150611daa8284611d61565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e12602583611562565b9150611e1d82611db6565b604082019050919050565b60006020820190508181036000830152611e4181611e05565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ea4602483611562565b9150611eaf82611e48565b604082019050919050565b60006020820190508181036000830152611ed381611e97565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f10601983611562565b9150611f1b82611eda565b602082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fa2603283611562565b9150611fad82611f46565b604082019050919050565b60006020820190508181036000830152611fd181611f95565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061202e82612007565b6120388185612012565b9350612048818560208601611573565b6120518161159d565b840191505092915050565b6000608082019050612071600083018761169e565b61207e602083018661169e565b61208b60408301856117b4565b818103606083015261209d8184612023565b905095945050505050565b6000815190506120b7816114c8565b92915050565b6000602082840312156120d3576120d2611492565b5b60006120e1848285016120a8565b9150509291505056fea2646970667358221220e29445cbdd164ba40f91803ac6e3c774980e80d10ed0cd2ae9aa0dbf822e6c9a64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x950 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA05 JUMP JUMPDEST DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x785 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x7E7 PUSH2 0xA05 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7FD PUSH2 0xA05 JUMP JUMPDEST DUP4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85F DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH2 0x893 DUP5 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x113E JUMP JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA80 DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB14 JUMPI POP PUSH2 0xB13 DUP2 DUP6 PUSH2 0x8BC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB52 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE4F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1008 DUP5 DUP5 DUP5 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x107F DUP5 PUSH2 0x1312 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1133 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10DE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1160 DUP4 PUSH2 0xE54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1465 JUMP JUMPDEST ISZERO PUSH2 0x1305 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D5 PUSH2 0xA05 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1233 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x130A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1370 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13AD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13DC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1405 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x142A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x144D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x145C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EE DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP5 DUP3 DUP6 ADD PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1591 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x15C3 DUP2 DUP6 PUSH2 0x1562 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 DUP5 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP5 DUP3 DUP6 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP3 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172A DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175B DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x176C DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x177D DUP7 DUP3 DUP8 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x188C DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1854 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CA DUP3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH2 0x18F3 DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 PUSH2 0x191D DUP5 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP5 DUP3 DUP6 PUSH2 0x1900 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x184A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1976 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19B8 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19C9 DUP8 DUP3 DUP9 ADD PUSH2 0x162A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE PUSH1 0x21 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B09 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2D DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x3D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C22 PUSH1 0x2D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C51 DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x18 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x29 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6C DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1D76 DUP2 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 DUP6 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x25 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x24 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x19 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x32 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x2038 DUP2 DUP6 PUSH2 0x2012 JUMP JUMPDEST SWAP4 POP PUSH2 0x2048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x2051 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x208B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x209D DUP2 DUP5 PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20B7 DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D2 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E1 DUP5 DUP3 DUP6 ADD PUSH2 0x20A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SWAP5 GASLIMIT 0xCB 0xDD AND 0x4B LOG4 0xF SWAP2 DUP1 GASPRICE 0xC6 0xE3 0xC7 PUSH21 0x980E80D10ED0CD2AE9AA0DBF822E6C9A64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ","sourceMap":"628:16377:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:1:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;655:96:6:-;708:7;734:10;727:17;;655:96;:::o;12572:171:1:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;447:696:7:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;7120:126:1:-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;10139:916:10:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;1412:320:5:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:619::-;4969:6;4977;4985;5034:2;5022:9;5013:7;5009:23;5005:32;5002:119;;;5040:79;;:::i;:::-;5002:119;5160:1;5185:53;5230:7;5221:6;5210:9;5206:22;5185:53;:::i;:::-;5175:63;;5131:117;5287:2;5313:53;5358:7;5349:6;5338:9;5334:22;5313:53;:::i;:::-;5303:63;;5258:118;5415:2;5441:53;5486:7;5477:6;5466:9;5462:22;5441:53;:::i;:::-;5431:63;;5386:118;4892:619;;;;;:::o;5517:329::-;5576:6;5625:2;5613:9;5604:7;5600:23;5596:32;5593:119;;;5631:79;;:::i;:::-;5593:119;5751:1;5776:53;5821:7;5812:6;5801:9;5797:22;5776:53;:::i;:::-;5766:63;;5722:117;5517:329;;;;:::o;5852:118::-;5939:24;5957:5;5939:24;:::i;:::-;5934:3;5927:37;5852:118;;:::o;5976:222::-;6069:4;6107:2;6096:9;6092:18;6084:26;;6120:71;6188:1;6177:9;6173:17;6164:6;6120:71;:::i;:::-;5976:222;;;;:::o;6204:116::-;6274:21;6289:5;6274:21;:::i;:::-;6267:5;6264:32;6254:60;;6310:1;6307;6300:12;6254:60;6204:116;:::o;6326:133::-;6369:5;6407:6;6394:20;6385:29;;6423:30;6447:5;6423:30;:::i;:::-;6326:133;;;;:::o;6465:468::-;6530:6;6538;6587:2;6575:9;6566:7;6562:23;6558:32;6555:119;;;6593:79;;:::i;:::-;6555:119;6713:1;6738:53;6783:7;6774:6;6763:9;6759:22;6738:53;:::i;:::-;6728:63;;6684:117;6840:2;6866:50;6908:7;6899:6;6888:9;6884:22;6866:50;:::i;:::-;6856:60;;6811:115;6465:468;;;;;:::o;6939:117::-;7048:1;7045;7038:12;7062:117;7171:1;7168;7161:12;7185:180;7233:77;7230:1;7223:88;7330:4;7327:1;7320:15;7354:4;7351:1;7344:15;7371:281;7454:27;7476:4;7454:27;:::i;:::-;7446:6;7442:40;7584:6;7572:10;7569:22;7548:18;7536:10;7533:34;7530:62;7527:88;;;7595:18;;:::i;:::-;7527:88;7635:10;7631:2;7624:22;7414:238;7371:281;;:::o;7658:129::-;7692:6;7719:20;;:::i;:::-;7709:30;;7748:33;7776:4;7768:6;7748:33;:::i;:::-;7658:129;;;:::o;7793:307::-;7854:4;7944:18;7936:6;7933:30;7930:56;;;7966:18;;:::i;:::-;7930:56;8004:29;8026:6;8004:29;:::i;:::-;7996:37;;8088:4;8082;8078:15;8070:23;;7793:307;;;:::o;8106:148::-;8204:6;8199:3;8194;8181:30;8245:1;8236:6;8231:3;8227:16;8220:27;8106:148;;;:::o;8260:423::-;8337:5;8362:65;8378:48;8419:6;8378:48;:::i;:::-;8362:65;:::i;:::-;8353:74;;8450:6;8443:5;8436:21;8488:4;8481:5;8477:16;8526:3;8517:6;8512:3;8508:16;8505:25;8502:112;;;8533:79;;:::i;:::-;8502:112;8623:54;8670:6;8665:3;8660;8623:54;:::i;:::-;8343:340;8260:423;;;;;:::o;8702:338::-;8757:5;8806:3;8799:4;8791:6;8787:17;8783:27;8773:122;;8814:79;;:::i;:::-;8773:122;8931:6;8918:20;8956:78;9030:3;9022:6;9015:4;9007:6;9003:17;8956:78;:::i;:::-;8947:87;;8763:277;8702:338;;;;:::o;9046:943::-;9141:6;9149;9157;9165;9214:3;9202:9;9193:7;9189:23;9185:33;9182:120;;;9221:79;;:::i;:::-;9182:120;9341:1;9366:53;9411:7;9402:6;9391:9;9387:22;9366:53;:::i;:::-;9356:63;;9312:117;9468:2;9494:53;9539:7;9530:6;9519:9;9515:22;9494:53;:::i;:::-;9484:63;;9439:118;9596:2;9622:53;9667:7;9658:6;9647:9;9643:22;9622:53;:::i;:::-;9612:63;;9567:118;9752:2;9741:9;9737:18;9724:32;9783:18;9775:6;9772:30;9769:117;;;9805:79;;:::i;:::-;9769:117;9910:62;9964:7;9955:6;9944:9;9940:22;9910:62;:::i;:::-;9900:72;;9695:287;9046:943;;;;;;;:::o;9995:474::-;10063:6;10071;10120:2;10108:9;10099:7;10095:23;10091:32;10088:119;;;10126:79;;:::i;:::-;10088:119;10246:1;10271:53;10316:7;10307:6;10296:9;10292:22;10271:53;:::i;:::-;10261:63;;10217:117;10373:2;10399:53;10444:7;10435:6;10424:9;10420:22;10399:53;:::i;:::-;10389:63;;10344:118;9995:474;;;;;:::o;10475:180::-;10523:77;10520:1;10513:88;10620:4;10617:1;10610:15;10644:4;10641:1;10634:15;10661:320;10705:6;10742:1;10736:4;10732:12;10722:22;;10789:1;10783:4;10779:12;10810:18;10800:81;;10866:4;10858:6;10854:17;10844:27;;10800:81;10928:2;10920:6;10917:14;10897:18;10894:38;10891:84;;10947:18;;:::i;:::-;10891:84;10712:269;10661:320;;;:::o;10987:220::-;11127:34;11123:1;11115:6;11111:14;11104:58;11196:3;11191:2;11183:6;11179:15;11172:28;10987:220;:::o;11213:366::-;11355:3;11376:67;11440:2;11435:3;11376:67;:::i;:::-;11369:74;;11452:93;11541:3;11452:93;:::i;:::-;11570:2;11565:3;11561:12;11554:19;;11213:366;;;:::o;11585:419::-;11751:4;11789:2;11778:9;11774:18;11766:26;;11838:9;11832:4;11828:20;11824:1;11813:9;11809:17;11802:47;11866:131;11992:4;11866:131;:::i;:::-;11858:139;;11585:419;;;:::o;12010:248::-;12150:34;12146:1;12138:6;12134:14;12127:58;12219:31;12214:2;12206:6;12202:15;12195:56;12010:248;:::o;12264:366::-;12406:3;12427:67;12491:2;12486:3;12427:67;:::i;:::-;12420:74;;12503:93;12592:3;12503:93;:::i;:::-;12621:2;12616:3;12612:12;12605:19;;12264:366;;;:::o;12636:419::-;12802:4;12840:2;12829:9;12825:18;12817:26;;12889:9;12883:4;12879:20;12875:1;12864:9;12860:17;12853:47;12917:131;13043:4;12917:131;:::i;:::-;12909:139;;12636:419;;;:::o;13061:232::-;13201:34;13197:1;13189:6;13185:14;13178:58;13270:15;13265:2;13257:6;13253:15;13246:40;13061:232;:::o;13299:366::-;13441:3;13462:67;13526:2;13521:3;13462:67;:::i;:::-;13455:74;;13538:93;13627:3;13538:93;:::i;:::-;13656:2;13651:3;13647:12;13640:19;;13299:366;;;:::o;13671:419::-;13837:4;13875:2;13864:9;13860:18;13852:26;;13924:9;13918:4;13914:20;13910:1;13899:9;13895:17;13888:47;13952:131;14078:4;13952:131;:::i;:::-;13944:139;;13671:419;;;:::o;14096:174::-;14236:26;14232:1;14224:6;14220:14;14213:50;14096:174;:::o;14276:366::-;14418:3;14439:67;14503:2;14498:3;14439:67;:::i;:::-;14432:74;;14515:93;14604:3;14515:93;:::i;:::-;14633:2;14628:3;14624:12;14617:19;;14276:366;;;:::o;14648:419::-;14814:4;14852:2;14841:9;14837:18;14829:26;;14901:9;14895:4;14891:20;14887:1;14876:9;14872:17;14865:47;14929:131;15055:4;14929:131;:::i;:::-;14921:139;;14648:419;;;:::o;15073:228::-;15213:34;15209:1;15201:6;15197:14;15190:58;15282:11;15277:2;15269:6;15265:15;15258:36;15073:228;:::o;15307:366::-;15449:3;15470:67;15534:2;15529:3;15470:67;:::i;:::-;15463:74;;15546:93;15635:3;15546:93;:::i;:::-;15664:2;15659:3;15655:12;15648:19;;15307:366;;;:::o;15679:419::-;15845:4;15883:2;15872:9;15868:18;15860:26;;15932:9;15926:4;15922:20;15918:1;15907:9;15903:17;15896:47;15960:131;16086:4;15960:131;:::i;:::-;15952:139;;15679:419;;;:::o;16104:148::-;16206:11;16243:3;16228:18;;16104:148;;;;:::o;16258:390::-;16364:3;16392:39;16425:5;16392:39;:::i;:::-;16447:89;16529:6;16524:3;16447:89;:::i;:::-;16440:96;;16545:65;16603:6;16598:3;16591:4;16584:5;16580:16;16545:65;:::i;:::-;16635:6;16630:3;16626:16;16619:23;;16368:280;16258:390;;;;:::o;16654:435::-;16834:3;16856:95;16947:3;16938:6;16856:95;:::i;:::-;16849:102;;16968:95;17059:3;17050:6;16968:95;:::i;:::-;16961:102;;17080:3;17073:10;;16654:435;;;;;:::o;17095:224::-;17235:34;17231:1;17223:6;17219:14;17212:58;17304:7;17299:2;17291:6;17287:15;17280:32;17095:224;:::o;17325:366::-;17467:3;17488:67;17552:2;17547:3;17488:67;:::i;:::-;17481:74;;17564:93;17653:3;17564:93;:::i;:::-;17682:2;17677:3;17673:12;17666:19;;17325:366;;;:::o;17697:419::-;17863:4;17901:2;17890:9;17886:18;17878:26;;17950:9;17944:4;17940:20;17936:1;17925:9;17921:17;17914:47;17978:131;18104:4;17978:131;:::i;:::-;17970:139;;17697:419;;;:::o;18122:223::-;18262:34;18258:1;18250:6;18246:14;18239:58;18331:6;18326:2;18318:6;18314:15;18307:31;18122:223;:::o;18351:366::-;18493:3;18514:67;18578:2;18573:3;18514:67;:::i;:::-;18507:74;;18590:93;18679:3;18590:93;:::i;:::-;18708:2;18703:3;18699:12;18692:19;;18351:366;;;:::o;18723:419::-;18889:4;18927:2;18916:9;18912:18;18904:26;;18976:9;18970:4;18966:20;18962:1;18951:9;18947:17;18940:47;19004:131;19130:4;19004:131;:::i;:::-;18996:139;;18723:419;;;:::o;19148:175::-;19288:27;19284:1;19276:6;19272:14;19265:51;19148:175;:::o;19329:366::-;19471:3;19492:67;19556:2;19551:3;19492:67;:::i;:::-;19485:74;;19568:93;19657:3;19568:93;:::i;:::-;19686:2;19681:3;19677:12;19670:19;;19329:366;;;:::o;19701:419::-;19867:4;19905:2;19894:9;19890:18;19882:26;;19954:9;19948:4;19944:20;19940:1;19929:9;19925:17;19918:47;19982:131;20108:4;19982:131;:::i;:::-;19974:139;;19701:419;;;:::o;20126:237::-;20266:34;20262:1;20254:6;20250:14;20243:58;20335:20;20330:2;20322:6;20318:15;20311:45;20126:237;:::o;20369:366::-;20511:3;20532:67;20596:2;20591:3;20532:67;:::i;:::-;20525:74;;20608:93;20697:3;20608:93;:::i;:::-;20726:2;20721:3;20717:12;20710:19;;20369:366;;;:::o;20741:419::-;20907:4;20945:2;20934:9;20930:18;20922:26;;20994:9;20988:4;20984:20;20980:1;20969:9;20965:17;20958:47;21022:131;21148:4;21022:131;:::i;:::-;21014:139;;20741:419;;;:::o;21166:180::-;21214:77;21211:1;21204:88;21311:4;21308:1;21301:15;21335:4;21332:1;21325:15;21352:98;21403:6;21437:5;21431:12;21421:22;;21352:98;;;:::o;21456:168::-;21539:11;21573:6;21568:3;21561:19;21613:4;21608:3;21604:14;21589:29;;21456:168;;;;:::o;21630:373::-;21716:3;21744:38;21776:5;21744:38;:::i;:::-;21798:70;21861:6;21856:3;21798:70;:::i;:::-;21791:77;;21877:65;21935:6;21930:3;21923:4;21916:5;21912:16;21877:65;:::i;:::-;21967:29;21989:6;21967:29;:::i;:::-;21962:3;21958:39;21951:46;;21720:283;21630:373;;;;:::o;22009:640::-;22204:4;22242:3;22231:9;22227:19;22219:27;;22256:71;22324:1;22313:9;22309:17;22300:6;22256:71;:::i;:::-;22337:72;22405:2;22394:9;22390:18;22381:6;22337:72;:::i;:::-;22419;22487:2;22476:9;22472:18;22463:6;22419:72;:::i;:::-;22538:9;22532:4;22528:20;22523:2;22512:9;22508:18;22501:48;22566:76;22637:4;22628:6;22566:76;:::i;:::-;22558:84;;22009:640;;;;;;;:::o;22655:141::-;22711:5;22742:6;22736:13;22727:22;;22758:32;22784:5;22758:32;:::i;:::-;22655:141;;;;:::o;22802:349::-;22871:6;22920:2;22908:9;22899:7;22895:23;22891:32;22888:119;;;22926:79;;:::i;:::-;22888:119;23046:1;23071:63;23126:7;23117:6;23106:9;23102:22;23071:63;:::i;:::-;23061:73;;23017:127;22802:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1696000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2921","getApproved(uint256)":"5277","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3022","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3459","transferFrom(address,address,uint256)":"infinite"},"internal":{"__unsafe_increaseBalance(address,uint256)":"infinite","_afterTokenTransfer(address,address,uint256,uint256)":"17","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"17","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2312","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"2248","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":90,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":92,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":96,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":100,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":104,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":110,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026be3b84b0f448bae67878309889f9e89cacf0a9918c0bf886dee7591cbaed4464736f6c63430008190033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xBE EXTCODESIZE DUP5 0xB0 DELEGATECALL BASEFEE 0xBA 0xE6 PUSH25 0x78309889F9E89CACF0A9918C0BF886DEE7591CBAED4464736F PUSH13 0x63430008190033000000000000 ","sourceMap":"194:9169:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122026be3b84b0f448bae67878309889f9e89cacf0a9918c0bf886dee7591cbaed4464736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xBE EXTCODESIZE DUP5 0xB0 DELEGATECALL BASEFEE 0xBA 0xE6 PUSH25 0x78309889F9E89CACF0A9918C0BF886DEE7591CBAED4464736F PUSH13 0x63430008190033000000000000 ","sourceMap":"194:9169:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d3ffd206337833f2ef8a1bc765bc956bc324ab7a9c0be1b9ffbe66d528738da64736f6c63430008190033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE EXTCODEHASH REVERT KECCAK256 PUSH4 0x37833F2E 0xF8 LOG1 0xBC PUSH23 0x5BC956BC324AB7A9C0BE1B9FFBE66D528738DA64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"220:2559:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d3ffd206337833f2ef8a1bc765bc956bc324ab7a9c0be1b9ffbe66d528738da64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE EXTCODEHASH REVERT KECCAK256 PUSH4 0x37833F2E 0xF8 LOG1 0xBC PUSH23 0x5BC956BC324AB7A9C0BE1B9FFBE66D528738DA64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"220:2559:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220805372d2f72a7f2c1156287948d8c495d6f8a911a4df90d8bf9048c4be0eac1864736f6c63430008190033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 MSTORE8 PUSH19 0xD2F72A7F2C1156287948D8C495D6F8A911A4DF SWAP1 0xD8 0xBF SWAP1 BASEFEE 0xC4 0xBE 0xE 0xAC XOR PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"202:12582:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220805372d2f72a7f2c1156287948d8c495d6f8a911a4df90d8bf9048c4be0eac1864736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 MSTORE8 PUSH19 0xD2F72A7F2C1156287948D8C495D6F8A911A4DF SWAP1 0xD8 0xBF SWAP1 BASEFEE 0xC4 0xBE 0xE 0xAC XOR PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"202:12582:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122085d087c0f2592e217581def440f8305b49099f0b7149679809e363216aeb4d2e64736f6c63430008190033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xD0 DUP8 0xC0 CALLCODE MSIZE 0x2E 0x21 PUSH22 0x81DEF440F8305B49099F0B7149679809E363216AEB4D 0x2E PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"215:1047:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122085d087c0f2592e217581def440f8305b49099f0b7149679809e363216aeb4d2e64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xD0 DUP8 0xC0 CALLCODE MSIZE 0x2E 0x21 PUSH22 0x81DEF440F8305B49099F0B7149679809E363216AEB4D 0x2E PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"215:1047:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/Nftmarketplace.sol":{"NftMarketplace":{"abi":[{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"AlreadyListed","type":"error"},{"inputs":[],"name":"NoProceeds","type":"error"},{"inputs":[],"name":"NotApprovedForMarketplace","type":"error"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"NotListed","type":"error"},{"inputs":[],"name":"NotOwner","type":"error"},{"inputs":[],"name":"PriceMustBeAboveZero","type":"error"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"PriceNotMet","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"toeknId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"ItemBought","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ItemCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"ItemListed","type":"event"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"buyItem","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"cancelListing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getListing","outputs":[{"components":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"address","name":"seller","type":"address"}],"internalType":"struct NftMarketplace.Listing","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"seller","type":"address"}],"name":"getProceeds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"listItem","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"updateListing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawProceeds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_18":{"entryPoint":null,"id":18,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50600160008190555061167b806100276000396000f3fe6080604052600436106100705760003560e01c80639038e6931161004e5780639038e693146101185780639f37092a1461012f578063b2ddee061461014b578063f772adf11461017457610070565b806330cfeda91461007557806388700d1c146100b257806389bfd38f146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190611243565b61019d565b6040516100a99190611289565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906112d0565b6101e6565b6040516100e6919061135d565b60405180910390f35b3480156100fb57600080fd5b5061011660048036038101906101119190611378565b6102b1565b005b34801561012457600080fd5b5061012d61070b565b005b610149600480360381019061014491906112d0565b61087e565b005b34801561015757600080fd5b50610172600480360381019061016d91906112d0565b610c6b565b005b34801561018057600080fd5b5061019b60048036038101906101969190611378565b610f4b565b005b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6101ee6111b0565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b8282336000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111156103bf5783836040517f4a5568d50000000000000000000000000000000000000000000000000000000081526004016103b69291906113da565b60405180910390fd5b868633600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016104029190611289565b602060405180830381865afa15801561041f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104439190611418565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146104aa576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a116104e4576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008c90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e6040518263ffffffff1660e01b81526004016105399190611289565b602060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190611418565b73ffffffffffffffffffffffffffffffffffffffff16146105c7576040517f4be3a2c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808c81526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508b8d73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48e6040516106f49190611289565b60405180910390a450505050505050505050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610789576040517fc4d8fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516107f490611476565b60006040518083038185875af1925050503d8060008114610831576040519150601f19603f3d011682016040523d82523d6000602084013e610836565b606091505b505090508061087a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610871906114e8565b60405180910390fd5b5050565b81816000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001511161098a5782826040517f6831488c0000000000000000000000000000000000000000000000000000000081526004016109819291906113da565b60405180910390fd5b610992611157565b6000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060000151341015610aa257858582600001516040517f7c934565000000000000000000000000000000000000000000000000000000008152600401610a9993929190611508565b60405180910390fd5b3460026000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610af5919061156e565b92505081905550600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508573ffffffffffffffffffffffffffffffffffffffff166342842e0e826020015133886040518463ffffffff1660e01b8152600401610bbf939291906115a2565b600060405180830381600087803b158015610bd957600080fd5b505af1158015610bed573d6000803e3d6000fd5b50505050848673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f263223b1dd81e51054a4e6f791d45a4a1ddb4aadcd93a2dfd892615c3fdac1878460000151604051610c539190611289565b60405180910390a450610c646111a6565b5050505050565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610cae9190611289565b602060405180830381865afa158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef9190611418565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d56576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111610e625782826040517f6831488c000000000000000000000000000000000000000000000000000000008152600401610e599291906113da565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050888a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9ba1a3cb55ce8d63d072a886f94d2a744f50cddf82128e897d0661f5ec62315860405160405180910390a450505050505050505050565b82826000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151116110575782826040517f6831488c00000000000000000000000000000000000000000000000000000000815260040161104e9291906113da565b60405180910390fd5b60008403611091576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060000181905550848673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de4876040516111479190611289565b60405180910390a4505050505050565b60026000540361119c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119390611625565b60405180910390fd5b6002600081905550565b6001600081905550565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611210826111e5565b9050919050565b61122081611205565b811461122b57600080fd5b50565b60008135905061123d81611217565b92915050565b600060208284031215611259576112586111e0565b5b60006112678482850161122e565b91505092915050565b6000819050919050565b61128381611270565b82525050565b600060208201905061129e600083018461127a565b92915050565b6112ad81611270565b81146112b857600080fd5b50565b6000813590506112ca816112a4565b92915050565b600080604083850312156112e7576112e66111e0565b5b60006112f58582860161122e565b9250506020611306858286016112bb565b9150509250929050565b61131981611270565b82525050565b61132881611205565b82525050565b6040820160008201516113446000850182611310565b506020820151611357602085018261131f565b50505050565b6000604082019050611372600083018461132e565b92915050565b600080600060608486031215611391576113906111e0565b5b600061139f8682870161122e565b93505060206113b0868287016112bb565b92505060406113c1868287016112bb565b9150509250925092565b6113d481611205565b82525050565b60006040820190506113ef60008301856113cb565b6113fc602083018461127a565b9392505050565b60008151905061141281611217565b92915050565b60006020828403121561142e5761142d6111e0565b5b600061143c84828501611403565b91505092915050565b600081905092915050565b50565b6000611460600083611445565b915061146b82611450565b600082019050919050565b600061148182611453565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006114d2600f8361148b565b91506114dd8261149c565b602082019050919050565b60006020820190508181036000830152611501816114c5565b9050919050565b600060608201905061151d60008301866113cb565b61152a602083018561127a565b611537604083018461127a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061157982611270565b915061158483611270565b925082820190508082111561159c5761159b61153f565b5b92915050565b60006060820190506115b760008301866113cb565b6115c460208301856113cb565b6115d1604083018461127a565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061160f601f8361148b565b915061161a826115d9565b602082019050919050565b6000602082019050818103600083015261163e81611602565b905091905056fea26469706673582212206184db56cf9bfab4e5bf3f72e2c2d5797fdf5f30befcfd5aa726a9d63904d60364736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0x167B DUP1 PUSH2 0x27 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9038E693 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9038E693 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x9F37092A EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xB2DDEE06 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF772ADF1 EQ PUSH2 0x174 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x30CFEDA9 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x88700D1C EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x89BFD38F EQ PUSH2 0xEF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x70B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0xF4B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP3 CALLER PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x3BF JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH32 0x4A5568D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP3 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x41F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP13 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP15 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x556 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4BE3A2C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP12 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD547E933094F12A9159076970143EBE73234E64480317844B0DCB36117116DE4 DUP15 PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC4D8FA8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F4 SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x836 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x871 SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x98A JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP3 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x992 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0xAA2 JUMPI DUP6 DUP6 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x7C93456500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA99 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x156E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP3 PUSH1 0x20 ADD MLOAD CALLER DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x263223B1DD81E51054A4E6F791D45A4A1DDB4AADCD93A2DFD892615C3FDAC187 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0xC64 PUSH2 0x11A6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAE SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0xE62 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE59 SWAP3 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9BA1A3CB55CE8D63D072A886F94D2A744F50CDDF82128E897D0661F5EC623158 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x1057 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP3 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SUB PUSH2 0x1091 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD547E933094F12A9159076970143EBE73234E64480317844B0DCB36117116DE4 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1147 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x119C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1193 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1210 DUP3 PUSH2 0x11E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1220 DUP2 PUSH2 0x1205 JUMP JUMPDEST DUP2 EQ PUSH2 0x122B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x123D DUP2 PUSH2 0x1217 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1259 JUMPI PUSH2 0x1258 PUSH2 0x11E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1267 DUP5 DUP3 DUP6 ADD PUSH2 0x122E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1283 DUP2 PUSH2 0x1270 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AD DUP2 PUSH2 0x1270 JUMP JUMPDEST DUP2 EQ PUSH2 0x12B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12CA DUP2 PUSH2 0x12A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E7 JUMPI PUSH2 0x12E6 PUSH2 0x11E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12F5 DUP6 DUP3 DUP7 ADD PUSH2 0x122E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1306 DUP6 DUP3 DUP7 ADD PUSH2 0x12BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1319 DUP2 PUSH2 0x1270 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1328 DUP2 PUSH2 0x1205 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1344 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1310 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1357 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x131F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1372 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x132E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1391 JUMPI PUSH2 0x1390 PUSH2 0x11E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x139F DUP7 DUP3 DUP8 ADD PUSH2 0x122E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13B0 DUP7 DUP3 DUP8 ADD PUSH2 0x12BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13C1 DUP7 DUP3 DUP8 ADD PUSH2 0x12BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x13D4 DUP2 PUSH2 0x1205 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x13FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1412 DUP2 PUSH2 0x1217 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142E JUMPI PUSH2 0x142D PUSH2 0x11E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x143C DUP5 DUP3 DUP6 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1460 PUSH1 0x0 DUP4 PUSH2 0x1445 JUMP JUMPDEST SWAP2 POP PUSH2 0x146B DUP3 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1481 DUP3 PUSH2 0x1453 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D2 PUSH1 0xF DUP4 PUSH2 0x148B JUMP JUMPDEST SWAP2 POP PUSH2 0x14DD DUP3 PUSH2 0x149C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1501 DUP2 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x151D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x152A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x127A JUMP JUMPDEST PUSH2 0x1537 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1579 DUP3 PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP PUSH2 0x1584 DUP4 PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x159C JUMPI PUSH2 0x159B PUSH2 0x153F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15B7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x15C4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x15D1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160F PUSH1 0x1F DUP4 PUSH2 0x148B JUMP JUMPDEST SWAP2 POP PUSH2 0x161A DUP3 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x163E DUP2 PUSH2 0x1602 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x84DB JUMP 0xCF SWAP12 STATICCALL 0xB4 0xE5 0xBF EXTCODEHASH PUSH19 0xE2C2D5797FDF5F30BEFCFD5AA726A9D63904D6 SUB PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"608:3494:12:-:0;;;;;;;;;;;;;1716:1:0;1821:7;:22;;;;608:3494:12;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_nonReentrantAfter_52":{"entryPoint":4518,"id":52,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_44":{"entryPoint":4439,"id":44,"parameterSlots":0,"returnSlots":0},"@buyItem_3100":{"entryPoint":2174,"id":3100,"parameterSlots":2,"returnSlots":0},"@cancelListing_3027":{"entryPoint":3179,"id":3027,"parameterSlots":2,"returnSlots":0},"@getListing_3200":{"entryPoint":486,"id":3200,"parameterSlots":2,"returnSlots":1},"@getProceeds_3212":{"entryPoint":413,"id":3212,"parameterSlots":1,"returnSlots":1},"@listItem_2966":{"entryPoint":689,"id":2966,"parameterSlots":3,"returnSlots":0},"@updateListing_3139":{"entryPoint":3915,"id":3139,"parameterSlots":3,"returnSlots":0},"@withdrawProceeds_3183":{"entryPoint":1803,"id":3183,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":4654,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":5123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4795,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4675,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5144,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4816,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":4984,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address":{"entryPoint":4895,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5067,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack":{"entryPoint":5317,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5203,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":5634,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Listing_$2794_memory_ptr_to_t_struct$_Listing_$2794_memory_ptr_fromStack":{"entryPoint":4910,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":4880,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4730,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5238,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":5538,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":5082,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5384,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5352,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5669,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Listing_$2794_memory_ptr__to_t_struct$_Listing_$2794_memory_ptr__fromStack_reversed":{"entryPoint":4957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4745,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5189,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5259,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5486,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4613,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4581,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4720,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5439,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4576,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51":{"entryPoint":5276,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":5200,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":5593,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4631,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4772,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:9564:14","nodeType":"YulBlock","src":"0:9564:14","statements":[{"body":{"nativeSrc":"47:35:14","nodeType":"YulBlock","src":"47:35:14","statements":[{"nativeSrc":"57:19:14","nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:14","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:14","nodeType":"YulIdentifier","src":"67:5:14"},"nativeSrc":"67:9:14","nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:14","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:14","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:14","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nativeSrc":"177:28:14","nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:14","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:14","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:14","nodeType":"YulIdentifier","src":"187:6:14"},"nativeSrc":"187:12:14","nodeType":"YulFunctionCall","src":"187:12:14"},"nativeSrc":"187:12:14","nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:14","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nativeSrc":"300:28:14","nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:14","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:14","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:14","nodeType":"YulIdentifier","src":"310:6:14"},"nativeSrc":"310:12:14","nodeType":"YulFunctionCall","src":"310:12:14"},"nativeSrc":"310:12:14","nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:14","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nativeSrc":"379:81:14","nodeType":"YulBlock","src":"379:81:14","statements":[{"nativeSrc":"389:65:14","nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nativeSrc":"404:5:14","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nativeSrc":"411:42:14","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:14","nodeType":"YulIdentifier","src":"400:3:14"},"nativeSrc":"400:54:14","nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:14","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:14","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:14","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nativeSrc":"511:51:14","nodeType":"YulBlock","src":"511:51:14","statements":[{"nativeSrc":"521:35:14","nodeType":"YulAssignment","src":"521:35:14","value":{"arguments":[{"name":"value","nativeSrc":"550:5:14","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:14","nodeType":"YulIdentifier","src":"532:17:14"},"nativeSrc":"532:24:14","nodeType":"YulFunctionCall","src":"532:24:14"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:14","nodeType":"YulIdentifier","src":"521:7:14"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:14","nodeType":"YulTypedName","src":"493:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:14","nodeType":"YulTypedName","src":"503:7:14","type":""}],"src":"466:96:14"},{"body":{"nativeSrc":"611:79:14","nodeType":"YulBlock","src":"611:79:14","statements":[{"body":{"nativeSrc":"668:16:14","nodeType":"YulBlock","src":"668:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:14","nodeType":"YulLiteral","src":"677:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:14","nodeType":"YulLiteral","src":"680:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:14","nodeType":"YulIdentifier","src":"670:6:14"},"nativeSrc":"670:12:14","nodeType":"YulFunctionCall","src":"670:12:14"},"nativeSrc":"670:12:14","nodeType":"YulExpressionStatement","src":"670:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:14","nodeType":"YulIdentifier","src":"634:5:14"},{"arguments":[{"name":"value","nativeSrc":"659:5:14","nodeType":"YulIdentifier","src":"659:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:14","nodeType":"YulIdentifier","src":"641:17:14"},"nativeSrc":"641:24:14","nodeType":"YulFunctionCall","src":"641:24:14"}],"functionName":{"name":"eq","nativeSrc":"631:2:14","nodeType":"YulIdentifier","src":"631:2:14"},"nativeSrc":"631:35:14","nodeType":"YulFunctionCall","src":"631:35:14"}],"functionName":{"name":"iszero","nativeSrc":"624:6:14","nodeType":"YulIdentifier","src":"624:6:14"},"nativeSrc":"624:43:14","nodeType":"YulFunctionCall","src":"624:43:14"},"nativeSrc":"621:63:14","nodeType":"YulIf","src":"621:63:14"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:14","nodeType":"YulTypedName","src":"604:5:14","type":""}],"src":"568:122:14"},{"body":{"nativeSrc":"748:87:14","nodeType":"YulBlock","src":"748:87:14","statements":[{"nativeSrc":"758:29:14","nodeType":"YulAssignment","src":"758:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:14","nodeType":"YulIdentifier","src":"780:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:14","nodeType":"YulIdentifier","src":"767:12:14"},"nativeSrc":"767:20:14","nodeType":"YulFunctionCall","src":"767:20:14"},"variableNames":[{"name":"value","nativeSrc":"758:5:14","nodeType":"YulIdentifier","src":"758:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:14","nodeType":"YulIdentifier","src":"823:5:14"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:14","nodeType":"YulIdentifier","src":"796:26:14"},"nativeSrc":"796:33:14","nodeType":"YulFunctionCall","src":"796:33:14"},"nativeSrc":"796:33:14","nodeType":"YulExpressionStatement","src":"796:33:14"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:14","nodeType":"YulTypedName","src":"726:6:14","type":""},{"name":"end","nativeSrc":"734:3:14","nodeType":"YulTypedName","src":"734:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:14","nodeType":"YulTypedName","src":"742:5:14","type":""}],"src":"696:139:14"},{"body":{"nativeSrc":"907:263:14","nodeType":"YulBlock","src":"907:263:14","statements":[{"body":{"nativeSrc":"953:83:14","nodeType":"YulBlock","src":"953:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"955:77:14","nodeType":"YulIdentifier","src":"955:77:14"},"nativeSrc":"955:79:14","nodeType":"YulFunctionCall","src":"955:79:14"},"nativeSrc":"955:79:14","nodeType":"YulExpressionStatement","src":"955:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"928:7:14","nodeType":"YulIdentifier","src":"928:7:14"},{"name":"headStart","nativeSrc":"937:9:14","nodeType":"YulIdentifier","src":"937:9:14"}],"functionName":{"name":"sub","nativeSrc":"924:3:14","nodeType":"YulIdentifier","src":"924:3:14"},"nativeSrc":"924:23:14","nodeType":"YulFunctionCall","src":"924:23:14"},{"kind":"number","nativeSrc":"949:2:14","nodeType":"YulLiteral","src":"949:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"920:3:14","nodeType":"YulIdentifier","src":"920:3:14"},"nativeSrc":"920:32:14","nodeType":"YulFunctionCall","src":"920:32:14"},"nativeSrc":"917:119:14","nodeType":"YulIf","src":"917:119:14"},{"nativeSrc":"1046:117:14","nodeType":"YulBlock","src":"1046:117:14","statements":[{"nativeSrc":"1061:15:14","nodeType":"YulVariableDeclaration","src":"1061:15:14","value":{"kind":"number","nativeSrc":"1075:1:14","nodeType":"YulLiteral","src":"1075:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1065:6:14","nodeType":"YulTypedName","src":"1065:6:14","type":""}]},{"nativeSrc":"1090:63:14","nodeType":"YulAssignment","src":"1090:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1125:9:14","nodeType":"YulIdentifier","src":"1125:9:14"},{"name":"offset","nativeSrc":"1136:6:14","nodeType":"YulIdentifier","src":"1136:6:14"}],"functionName":{"name":"add","nativeSrc":"1121:3:14","nodeType":"YulIdentifier","src":"1121:3:14"},"nativeSrc":"1121:22:14","nodeType":"YulFunctionCall","src":"1121:22:14"},{"name":"dataEnd","nativeSrc":"1145:7:14","nodeType":"YulIdentifier","src":"1145:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1100:20:14","nodeType":"YulIdentifier","src":"1100:20:14"},"nativeSrc":"1100:53:14","nodeType":"YulFunctionCall","src":"1100:53:14"},"variableNames":[{"name":"value0","nativeSrc":"1090:6:14","nodeType":"YulIdentifier","src":"1090:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"841:329:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"877:9:14","nodeType":"YulTypedName","src":"877:9:14","type":""},{"name":"dataEnd","nativeSrc":"888:7:14","nodeType":"YulTypedName","src":"888:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"900:6:14","nodeType":"YulTypedName","src":"900:6:14","type":""}],"src":"841:329:14"},{"body":{"nativeSrc":"1221:32:14","nodeType":"YulBlock","src":"1221:32:14","statements":[{"nativeSrc":"1231:16:14","nodeType":"YulAssignment","src":"1231:16:14","value":{"name":"value","nativeSrc":"1242:5:14","nodeType":"YulIdentifier","src":"1242:5:14"},"variableNames":[{"name":"cleaned","nativeSrc":"1231:7:14","nodeType":"YulIdentifier","src":"1231:7:14"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1176:77:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1203:5:14","nodeType":"YulTypedName","src":"1203:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1213:7:14","nodeType":"YulTypedName","src":"1213:7:14","type":""}],"src":"1176:77:14"},{"body":{"nativeSrc":"1324:53:14","nodeType":"YulBlock","src":"1324:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1341:3:14","nodeType":"YulIdentifier","src":"1341:3:14"},{"arguments":[{"name":"value","nativeSrc":"1364:5:14","nodeType":"YulIdentifier","src":"1364:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1346:17:14","nodeType":"YulIdentifier","src":"1346:17:14"},"nativeSrc":"1346:24:14","nodeType":"YulFunctionCall","src":"1346:24:14"}],"functionName":{"name":"mstore","nativeSrc":"1334:6:14","nodeType":"YulIdentifier","src":"1334:6:14"},"nativeSrc":"1334:37:14","nodeType":"YulFunctionCall","src":"1334:37:14"},"nativeSrc":"1334:37:14","nodeType":"YulExpressionStatement","src":"1334:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1259:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1312:5:14","nodeType":"YulTypedName","src":"1312:5:14","type":""},{"name":"pos","nativeSrc":"1319:3:14","nodeType":"YulTypedName","src":"1319:3:14","type":""}],"src":"1259:118:14"},{"body":{"nativeSrc":"1481:124:14","nodeType":"YulBlock","src":"1481:124:14","statements":[{"nativeSrc":"1491:26:14","nodeType":"YulAssignment","src":"1491:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"1503:9:14","nodeType":"YulIdentifier","src":"1503:9:14"},{"kind":"number","nativeSrc":"1514:2:14","nodeType":"YulLiteral","src":"1514:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1499:3:14","nodeType":"YulIdentifier","src":"1499:3:14"},"nativeSrc":"1499:18:14","nodeType":"YulFunctionCall","src":"1499:18:14"},"variableNames":[{"name":"tail","nativeSrc":"1491:4:14","nodeType":"YulIdentifier","src":"1491:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1571:6:14","nodeType":"YulIdentifier","src":"1571:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"1584:9:14","nodeType":"YulIdentifier","src":"1584:9:14"},{"kind":"number","nativeSrc":"1595:1:14","nodeType":"YulLiteral","src":"1595:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1580:3:14","nodeType":"YulIdentifier","src":"1580:3:14"},"nativeSrc":"1580:17:14","nodeType":"YulFunctionCall","src":"1580:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1527:43:14","nodeType":"YulIdentifier","src":"1527:43:14"},"nativeSrc":"1527:71:14","nodeType":"YulFunctionCall","src":"1527:71:14"},"nativeSrc":"1527:71:14","nodeType":"YulExpressionStatement","src":"1527:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1383:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1453:9:14","nodeType":"YulTypedName","src":"1453:9:14","type":""},{"name":"value0","nativeSrc":"1465:6:14","nodeType":"YulTypedName","src":"1465:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1476:4:14","nodeType":"YulTypedName","src":"1476:4:14","type":""}],"src":"1383:222:14"},{"body":{"nativeSrc":"1654:79:14","nodeType":"YulBlock","src":"1654:79:14","statements":[{"body":{"nativeSrc":"1711:16:14","nodeType":"YulBlock","src":"1711:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1720:1:14","nodeType":"YulLiteral","src":"1720:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"1723:1:14","nodeType":"YulLiteral","src":"1723:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1713:6:14","nodeType":"YulIdentifier","src":"1713:6:14"},"nativeSrc":"1713:12:14","nodeType":"YulFunctionCall","src":"1713:12:14"},"nativeSrc":"1713:12:14","nodeType":"YulExpressionStatement","src":"1713:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1677:5:14","nodeType":"YulIdentifier","src":"1677:5:14"},{"arguments":[{"name":"value","nativeSrc":"1702:5:14","nodeType":"YulIdentifier","src":"1702:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1684:17:14","nodeType":"YulIdentifier","src":"1684:17:14"},"nativeSrc":"1684:24:14","nodeType":"YulFunctionCall","src":"1684:24:14"}],"functionName":{"name":"eq","nativeSrc":"1674:2:14","nodeType":"YulIdentifier","src":"1674:2:14"},"nativeSrc":"1674:35:14","nodeType":"YulFunctionCall","src":"1674:35:14"}],"functionName":{"name":"iszero","nativeSrc":"1667:6:14","nodeType":"YulIdentifier","src":"1667:6:14"},"nativeSrc":"1667:43:14","nodeType":"YulFunctionCall","src":"1667:43:14"},"nativeSrc":"1664:63:14","nodeType":"YulIf","src":"1664:63:14"}]},"name":"validator_revert_t_uint256","nativeSrc":"1611:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1647:5:14","nodeType":"YulTypedName","src":"1647:5:14","type":""}],"src":"1611:122:14"},{"body":{"nativeSrc":"1791:87:14","nodeType":"YulBlock","src":"1791:87:14","statements":[{"nativeSrc":"1801:29:14","nodeType":"YulAssignment","src":"1801:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"1823:6:14","nodeType":"YulIdentifier","src":"1823:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"1810:12:14","nodeType":"YulIdentifier","src":"1810:12:14"},"nativeSrc":"1810:20:14","nodeType":"YulFunctionCall","src":"1810:20:14"},"variableNames":[{"name":"value","nativeSrc":"1801:5:14","nodeType":"YulIdentifier","src":"1801:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1866:5:14","nodeType":"YulIdentifier","src":"1866:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1839:26:14","nodeType":"YulIdentifier","src":"1839:26:14"},"nativeSrc":"1839:33:14","nodeType":"YulFunctionCall","src":"1839:33:14"},"nativeSrc":"1839:33:14","nodeType":"YulExpressionStatement","src":"1839:33:14"}]},"name":"abi_decode_t_uint256","nativeSrc":"1739:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1769:6:14","nodeType":"YulTypedName","src":"1769:6:14","type":""},{"name":"end","nativeSrc":"1777:3:14","nodeType":"YulTypedName","src":"1777:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1785:5:14","nodeType":"YulTypedName","src":"1785:5:14","type":""}],"src":"1739:139:14"},{"body":{"nativeSrc":"1967:391:14","nodeType":"YulBlock","src":"1967:391:14","statements":[{"body":{"nativeSrc":"2013:83:14","nodeType":"YulBlock","src":"2013:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2015:77:14","nodeType":"YulIdentifier","src":"2015:77:14"},"nativeSrc":"2015:79:14","nodeType":"YulFunctionCall","src":"2015:79:14"},"nativeSrc":"2015:79:14","nodeType":"YulExpressionStatement","src":"2015:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1988:7:14","nodeType":"YulIdentifier","src":"1988:7:14"},{"name":"headStart","nativeSrc":"1997:9:14","nodeType":"YulIdentifier","src":"1997:9:14"}],"functionName":{"name":"sub","nativeSrc":"1984:3:14","nodeType":"YulIdentifier","src":"1984:3:14"},"nativeSrc":"1984:23:14","nodeType":"YulFunctionCall","src":"1984:23:14"},{"kind":"number","nativeSrc":"2009:2:14","nodeType":"YulLiteral","src":"2009:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1980:3:14","nodeType":"YulIdentifier","src":"1980:3:14"},"nativeSrc":"1980:32:14","nodeType":"YulFunctionCall","src":"1980:32:14"},"nativeSrc":"1977:119:14","nodeType":"YulIf","src":"1977:119:14"},{"nativeSrc":"2106:117:14","nodeType":"YulBlock","src":"2106:117:14","statements":[{"nativeSrc":"2121:15:14","nodeType":"YulVariableDeclaration","src":"2121:15:14","value":{"kind":"number","nativeSrc":"2135:1:14","nodeType":"YulLiteral","src":"2135:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2125:6:14","nodeType":"YulTypedName","src":"2125:6:14","type":""}]},{"nativeSrc":"2150:63:14","nodeType":"YulAssignment","src":"2150:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2185:9:14","nodeType":"YulIdentifier","src":"2185:9:14"},{"name":"offset","nativeSrc":"2196:6:14","nodeType":"YulIdentifier","src":"2196:6:14"}],"functionName":{"name":"add","nativeSrc":"2181:3:14","nodeType":"YulIdentifier","src":"2181:3:14"},"nativeSrc":"2181:22:14","nodeType":"YulFunctionCall","src":"2181:22:14"},{"name":"dataEnd","nativeSrc":"2205:7:14","nodeType":"YulIdentifier","src":"2205:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2160:20:14","nodeType":"YulIdentifier","src":"2160:20:14"},"nativeSrc":"2160:53:14","nodeType":"YulFunctionCall","src":"2160:53:14"},"variableNames":[{"name":"value0","nativeSrc":"2150:6:14","nodeType":"YulIdentifier","src":"2150:6:14"}]}]},{"nativeSrc":"2233:118:14","nodeType":"YulBlock","src":"2233:118:14","statements":[{"nativeSrc":"2248:16:14","nodeType":"YulVariableDeclaration","src":"2248:16:14","value":{"kind":"number","nativeSrc":"2262:2:14","nodeType":"YulLiteral","src":"2262:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2252:6:14","nodeType":"YulTypedName","src":"2252:6:14","type":""}]},{"nativeSrc":"2278:63:14","nodeType":"YulAssignment","src":"2278:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2313:9:14","nodeType":"YulIdentifier","src":"2313:9:14"},{"name":"offset","nativeSrc":"2324:6:14","nodeType":"YulIdentifier","src":"2324:6:14"}],"functionName":{"name":"add","nativeSrc":"2309:3:14","nodeType":"YulIdentifier","src":"2309:3:14"},"nativeSrc":"2309:22:14","nodeType":"YulFunctionCall","src":"2309:22:14"},{"name":"dataEnd","nativeSrc":"2333:7:14","nodeType":"YulIdentifier","src":"2333:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2288:20:14","nodeType":"YulIdentifier","src":"2288:20:14"},"nativeSrc":"2288:53:14","nodeType":"YulFunctionCall","src":"2288:53:14"},"variableNames":[{"name":"value1","nativeSrc":"2278:6:14","nodeType":"YulIdentifier","src":"2278:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1884:474:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1929:9:14","nodeType":"YulTypedName","src":"1929:9:14","type":""},{"name":"dataEnd","nativeSrc":"1940:7:14","nodeType":"YulTypedName","src":"1940:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1952:6:14","nodeType":"YulTypedName","src":"1952:6:14","type":""},{"name":"value1","nativeSrc":"1960:6:14","nodeType":"YulTypedName","src":"1960:6:14","type":""}],"src":"1884:474:14"},{"body":{"nativeSrc":"2419:53:14","nodeType":"YulBlock","src":"2419:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2436:3:14","nodeType":"YulIdentifier","src":"2436:3:14"},{"arguments":[{"name":"value","nativeSrc":"2459:5:14","nodeType":"YulIdentifier","src":"2459:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2441:17:14","nodeType":"YulIdentifier","src":"2441:17:14"},"nativeSrc":"2441:24:14","nodeType":"YulFunctionCall","src":"2441:24:14"}],"functionName":{"name":"mstore","nativeSrc":"2429:6:14","nodeType":"YulIdentifier","src":"2429:6:14"},"nativeSrc":"2429:37:14","nodeType":"YulFunctionCall","src":"2429:37:14"},"nativeSrc":"2429:37:14","nodeType":"YulExpressionStatement","src":"2429:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"2364:108:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2407:5:14","nodeType":"YulTypedName","src":"2407:5:14","type":""},{"name":"pos","nativeSrc":"2414:3:14","nodeType":"YulTypedName","src":"2414:3:14","type":""}],"src":"2364:108:14"},{"body":{"nativeSrc":"2533:53:14","nodeType":"YulBlock","src":"2533:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2550:3:14","nodeType":"YulIdentifier","src":"2550:3:14"},{"arguments":[{"name":"value","nativeSrc":"2573:5:14","nodeType":"YulIdentifier","src":"2573:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2555:17:14","nodeType":"YulIdentifier","src":"2555:17:14"},"nativeSrc":"2555:24:14","nodeType":"YulFunctionCall","src":"2555:24:14"}],"functionName":{"name":"mstore","nativeSrc":"2543:6:14","nodeType":"YulIdentifier","src":"2543:6:14"},"nativeSrc":"2543:37:14","nodeType":"YulFunctionCall","src":"2543:37:14"},"nativeSrc":"2543:37:14","nodeType":"YulExpressionStatement","src":"2543:37:14"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"2478:108:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2521:5:14","nodeType":"YulTypedName","src":"2521:5:14","type":""},{"name":"pos","nativeSrc":"2528:3:14","nodeType":"YulTypedName","src":"2528:3:14","type":""}],"src":"2478:108:14"},{"body":{"nativeSrc":"2778:394:14","nodeType":"YulBlock","src":"2778:394:14","statements":[{"nativeSrc":"2788:26:14","nodeType":"YulVariableDeclaration","src":"2788:26:14","value":{"arguments":[{"name":"pos","nativeSrc":"2804:3:14","nodeType":"YulIdentifier","src":"2804:3:14"},{"kind":"number","nativeSrc":"2809:4:14","nodeType":"YulLiteral","src":"2809:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2800:3:14","nodeType":"YulIdentifier","src":"2800:3:14"},"nativeSrc":"2800:14:14","nodeType":"YulFunctionCall","src":"2800:14:14"},"variables":[{"name":"tail","nativeSrc":"2792:4:14","nodeType":"YulTypedName","src":"2792:4:14","type":""}]},{"nativeSrc":"2824:165:14","nodeType":"YulBlock","src":"2824:165:14","statements":[{"nativeSrc":"2860:43:14","nodeType":"YulVariableDeclaration","src":"2860:43:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2890:5:14","nodeType":"YulIdentifier","src":"2890:5:14"},{"kind":"number","nativeSrc":"2897:4:14","nodeType":"YulLiteral","src":"2897:4:14","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"2886:3:14","nodeType":"YulIdentifier","src":"2886:3:14"},"nativeSrc":"2886:16:14","nodeType":"YulFunctionCall","src":"2886:16:14"}],"functionName":{"name":"mload","nativeSrc":"2880:5:14","nodeType":"YulIdentifier","src":"2880:5:14"},"nativeSrc":"2880:23:14","nodeType":"YulFunctionCall","src":"2880:23:14"},"variables":[{"name":"memberValue0","nativeSrc":"2864:12:14","nodeType":"YulTypedName","src":"2864:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"2950:12:14","nodeType":"YulIdentifier","src":"2950:12:14"},{"arguments":[{"name":"pos","nativeSrc":"2968:3:14","nodeType":"YulIdentifier","src":"2968:3:14"},{"kind":"number","nativeSrc":"2973:4:14","nodeType":"YulLiteral","src":"2973:4:14","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"2964:3:14","nodeType":"YulIdentifier","src":"2964:3:14"},"nativeSrc":"2964:14:14","nodeType":"YulFunctionCall","src":"2964:14:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"2916:33:14","nodeType":"YulIdentifier","src":"2916:33:14"},"nativeSrc":"2916:63:14","nodeType":"YulFunctionCall","src":"2916:63:14"},"nativeSrc":"2916:63:14","nodeType":"YulExpressionStatement","src":"2916:63:14"}]},{"nativeSrc":"2999:166:14","nodeType":"YulBlock","src":"2999:166:14","statements":[{"nativeSrc":"3036:43:14","nodeType":"YulVariableDeclaration","src":"3036:43:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3066:5:14","nodeType":"YulIdentifier","src":"3066:5:14"},{"kind":"number","nativeSrc":"3073:4:14","nodeType":"YulLiteral","src":"3073:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3062:3:14","nodeType":"YulIdentifier","src":"3062:3:14"},"nativeSrc":"3062:16:14","nodeType":"YulFunctionCall","src":"3062:16:14"}],"functionName":{"name":"mload","nativeSrc":"3056:5:14","nodeType":"YulIdentifier","src":"3056:5:14"},"nativeSrc":"3056:23:14","nodeType":"YulFunctionCall","src":"3056:23:14"},"variables":[{"name":"memberValue0","nativeSrc":"3040:12:14","nodeType":"YulTypedName","src":"3040:12:14","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"3126:12:14","nodeType":"YulIdentifier","src":"3126:12:14"},{"arguments":[{"name":"pos","nativeSrc":"3144:3:14","nodeType":"YulIdentifier","src":"3144:3:14"},{"kind":"number","nativeSrc":"3149:4:14","nodeType":"YulLiteral","src":"3149:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3140:3:14","nodeType":"YulIdentifier","src":"3140:3:14"},"nativeSrc":"3140:14:14","nodeType":"YulFunctionCall","src":"3140:14:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"3092:33:14","nodeType":"YulIdentifier","src":"3092:33:14"},"nativeSrc":"3092:63:14","nodeType":"YulFunctionCall","src":"3092:63:14"},"nativeSrc":"3092:63:14","nodeType":"YulExpressionStatement","src":"3092:63:14"}]}]},"name":"abi_encode_t_struct$_Listing_$2794_memory_ptr_to_t_struct$_Listing_$2794_memory_ptr_fromStack","nativeSrc":"2662:510:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2765:5:14","nodeType":"YulTypedName","src":"2765:5:14","type":""},{"name":"pos","nativeSrc":"2772:3:14","nodeType":"YulTypedName","src":"2772:3:14","type":""}],"src":"2662:510:14"},{"body":{"nativeSrc":"3326:174:14","nodeType":"YulBlock","src":"3326:174:14","statements":[{"nativeSrc":"3336:26:14","nodeType":"YulAssignment","src":"3336:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"3348:9:14","nodeType":"YulIdentifier","src":"3348:9:14"},{"kind":"number","nativeSrc":"3359:2:14","nodeType":"YulLiteral","src":"3359:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3344:3:14","nodeType":"YulIdentifier","src":"3344:3:14"},"nativeSrc":"3344:18:14","nodeType":"YulFunctionCall","src":"3344:18:14"},"variableNames":[{"name":"tail","nativeSrc":"3336:4:14","nodeType":"YulIdentifier","src":"3336:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3466:6:14","nodeType":"YulIdentifier","src":"3466:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"3479:9:14","nodeType":"YulIdentifier","src":"3479:9:14"},{"kind":"number","nativeSrc":"3490:1:14","nodeType":"YulLiteral","src":"3490:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3475:3:14","nodeType":"YulIdentifier","src":"3475:3:14"},"nativeSrc":"3475:17:14","nodeType":"YulFunctionCall","src":"3475:17:14"}],"functionName":{"name":"abi_encode_t_struct$_Listing_$2794_memory_ptr_to_t_struct$_Listing_$2794_memory_ptr_fromStack","nativeSrc":"3372:93:14","nodeType":"YulIdentifier","src":"3372:93:14"},"nativeSrc":"3372:121:14","nodeType":"YulFunctionCall","src":"3372:121:14"},"nativeSrc":"3372:121:14","nodeType":"YulExpressionStatement","src":"3372:121:14"}]},"name":"abi_encode_tuple_t_struct$_Listing_$2794_memory_ptr__to_t_struct$_Listing_$2794_memory_ptr__fromStack_reversed","nativeSrc":"3178:322:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3298:9:14","nodeType":"YulTypedName","src":"3298:9:14","type":""},{"name":"value0","nativeSrc":"3310:6:14","nodeType":"YulTypedName","src":"3310:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3321:4:14","nodeType":"YulTypedName","src":"3321:4:14","type":""}],"src":"3178:322:14"},{"body":{"nativeSrc":"3606:519:14","nodeType":"YulBlock","src":"3606:519:14","statements":[{"body":{"nativeSrc":"3652:83:14","nodeType":"YulBlock","src":"3652:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3654:77:14","nodeType":"YulIdentifier","src":"3654:77:14"},"nativeSrc":"3654:79:14","nodeType":"YulFunctionCall","src":"3654:79:14"},"nativeSrc":"3654:79:14","nodeType":"YulExpressionStatement","src":"3654:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3627:7:14","nodeType":"YulIdentifier","src":"3627:7:14"},{"name":"headStart","nativeSrc":"3636:9:14","nodeType":"YulIdentifier","src":"3636:9:14"}],"functionName":{"name":"sub","nativeSrc":"3623:3:14","nodeType":"YulIdentifier","src":"3623:3:14"},"nativeSrc":"3623:23:14","nodeType":"YulFunctionCall","src":"3623:23:14"},{"kind":"number","nativeSrc":"3648:2:14","nodeType":"YulLiteral","src":"3648:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3619:3:14","nodeType":"YulIdentifier","src":"3619:3:14"},"nativeSrc":"3619:32:14","nodeType":"YulFunctionCall","src":"3619:32:14"},"nativeSrc":"3616:119:14","nodeType":"YulIf","src":"3616:119:14"},{"nativeSrc":"3745:117:14","nodeType":"YulBlock","src":"3745:117:14","statements":[{"nativeSrc":"3760:15:14","nodeType":"YulVariableDeclaration","src":"3760:15:14","value":{"kind":"number","nativeSrc":"3774:1:14","nodeType":"YulLiteral","src":"3774:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3764:6:14","nodeType":"YulTypedName","src":"3764:6:14","type":""}]},{"nativeSrc":"3789:63:14","nodeType":"YulAssignment","src":"3789:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3824:9:14","nodeType":"YulIdentifier","src":"3824:9:14"},{"name":"offset","nativeSrc":"3835:6:14","nodeType":"YulIdentifier","src":"3835:6:14"}],"functionName":{"name":"add","nativeSrc":"3820:3:14","nodeType":"YulIdentifier","src":"3820:3:14"},"nativeSrc":"3820:22:14","nodeType":"YulFunctionCall","src":"3820:22:14"},{"name":"dataEnd","nativeSrc":"3844:7:14","nodeType":"YulIdentifier","src":"3844:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3799:20:14","nodeType":"YulIdentifier","src":"3799:20:14"},"nativeSrc":"3799:53:14","nodeType":"YulFunctionCall","src":"3799:53:14"},"variableNames":[{"name":"value0","nativeSrc":"3789:6:14","nodeType":"YulIdentifier","src":"3789:6:14"}]}]},{"nativeSrc":"3872:118:14","nodeType":"YulBlock","src":"3872:118:14","statements":[{"nativeSrc":"3887:16:14","nodeType":"YulVariableDeclaration","src":"3887:16:14","value":{"kind":"number","nativeSrc":"3901:2:14","nodeType":"YulLiteral","src":"3901:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3891:6:14","nodeType":"YulTypedName","src":"3891:6:14","type":""}]},{"nativeSrc":"3917:63:14","nodeType":"YulAssignment","src":"3917:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3952:9:14","nodeType":"YulIdentifier","src":"3952:9:14"},{"name":"offset","nativeSrc":"3963:6:14","nodeType":"YulIdentifier","src":"3963:6:14"}],"functionName":{"name":"add","nativeSrc":"3948:3:14","nodeType":"YulIdentifier","src":"3948:3:14"},"nativeSrc":"3948:22:14","nodeType":"YulFunctionCall","src":"3948:22:14"},{"name":"dataEnd","nativeSrc":"3972:7:14","nodeType":"YulIdentifier","src":"3972:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3927:20:14","nodeType":"YulIdentifier","src":"3927:20:14"},"nativeSrc":"3927:53:14","nodeType":"YulFunctionCall","src":"3927:53:14"},"variableNames":[{"name":"value1","nativeSrc":"3917:6:14","nodeType":"YulIdentifier","src":"3917:6:14"}]}]},{"nativeSrc":"4000:118:14","nodeType":"YulBlock","src":"4000:118:14","statements":[{"nativeSrc":"4015:16:14","nodeType":"YulVariableDeclaration","src":"4015:16:14","value":{"kind":"number","nativeSrc":"4029:2:14","nodeType":"YulLiteral","src":"4029:2:14","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4019:6:14","nodeType":"YulTypedName","src":"4019:6:14","type":""}]},{"nativeSrc":"4045:63:14","nodeType":"YulAssignment","src":"4045:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4080:9:14","nodeType":"YulIdentifier","src":"4080:9:14"},{"name":"offset","nativeSrc":"4091:6:14","nodeType":"YulIdentifier","src":"4091:6:14"}],"functionName":{"name":"add","nativeSrc":"4076:3:14","nodeType":"YulIdentifier","src":"4076:3:14"},"nativeSrc":"4076:22:14","nodeType":"YulFunctionCall","src":"4076:22:14"},{"name":"dataEnd","nativeSrc":"4100:7:14","nodeType":"YulIdentifier","src":"4100:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4055:20:14","nodeType":"YulIdentifier","src":"4055:20:14"},"nativeSrc":"4055:53:14","nodeType":"YulFunctionCall","src":"4055:53:14"},"variableNames":[{"name":"value2","nativeSrc":"4045:6:14","nodeType":"YulIdentifier","src":"4045:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nativeSrc":"3506:619:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3560:9:14","nodeType":"YulTypedName","src":"3560:9:14","type":""},{"name":"dataEnd","nativeSrc":"3571:7:14","nodeType":"YulTypedName","src":"3571:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3583:6:14","nodeType":"YulTypedName","src":"3583:6:14","type":""},{"name":"value1","nativeSrc":"3591:6:14","nodeType":"YulTypedName","src":"3591:6:14","type":""},{"name":"value2","nativeSrc":"3599:6:14","nodeType":"YulTypedName","src":"3599:6:14","type":""}],"src":"3506:619:14"},{"body":{"nativeSrc":"4196:53:14","nodeType":"YulBlock","src":"4196:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4213:3:14","nodeType":"YulIdentifier","src":"4213:3:14"},{"arguments":[{"name":"value","nativeSrc":"4236:5:14","nodeType":"YulIdentifier","src":"4236:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4218:17:14","nodeType":"YulIdentifier","src":"4218:17:14"},"nativeSrc":"4218:24:14","nodeType":"YulFunctionCall","src":"4218:24:14"}],"functionName":{"name":"mstore","nativeSrc":"4206:6:14","nodeType":"YulIdentifier","src":"4206:6:14"},"nativeSrc":"4206:37:14","nodeType":"YulFunctionCall","src":"4206:37:14"},"nativeSrc":"4206:37:14","nodeType":"YulExpressionStatement","src":"4206:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4131:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4184:5:14","nodeType":"YulTypedName","src":"4184:5:14","type":""},{"name":"pos","nativeSrc":"4191:3:14","nodeType":"YulTypedName","src":"4191:3:14","type":""}],"src":"4131:118:14"},{"body":{"nativeSrc":"4381:206:14","nodeType":"YulBlock","src":"4381:206:14","statements":[{"nativeSrc":"4391:26:14","nodeType":"YulAssignment","src":"4391:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"4403:9:14","nodeType":"YulIdentifier","src":"4403:9:14"},{"kind":"number","nativeSrc":"4414:2:14","nodeType":"YulLiteral","src":"4414:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4399:3:14","nodeType":"YulIdentifier","src":"4399:3:14"},"nativeSrc":"4399:18:14","nodeType":"YulFunctionCall","src":"4399:18:14"},"variableNames":[{"name":"tail","nativeSrc":"4391:4:14","nodeType":"YulIdentifier","src":"4391:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4471:6:14","nodeType":"YulIdentifier","src":"4471:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"4484:9:14","nodeType":"YulIdentifier","src":"4484:9:14"},{"kind":"number","nativeSrc":"4495:1:14","nodeType":"YulLiteral","src":"4495:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4480:3:14","nodeType":"YulIdentifier","src":"4480:3:14"},"nativeSrc":"4480:17:14","nodeType":"YulFunctionCall","src":"4480:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4427:43:14","nodeType":"YulIdentifier","src":"4427:43:14"},"nativeSrc":"4427:71:14","nodeType":"YulFunctionCall","src":"4427:71:14"},"nativeSrc":"4427:71:14","nodeType":"YulExpressionStatement","src":"4427:71:14"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"4552:6:14","nodeType":"YulIdentifier","src":"4552:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"4565:9:14","nodeType":"YulIdentifier","src":"4565:9:14"},{"kind":"number","nativeSrc":"4576:2:14","nodeType":"YulLiteral","src":"4576:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4561:3:14","nodeType":"YulIdentifier","src":"4561:3:14"},"nativeSrc":"4561:18:14","nodeType":"YulFunctionCall","src":"4561:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4508:43:14","nodeType":"YulIdentifier","src":"4508:43:14"},"nativeSrc":"4508:72:14","nodeType":"YulFunctionCall","src":"4508:72:14"},"nativeSrc":"4508:72:14","nodeType":"YulExpressionStatement","src":"4508:72:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"4255:332:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4345:9:14","nodeType":"YulTypedName","src":"4345:9:14","type":""},{"name":"value1","nativeSrc":"4357:6:14","nodeType":"YulTypedName","src":"4357:6:14","type":""},{"name":"value0","nativeSrc":"4365:6:14","nodeType":"YulTypedName","src":"4365:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4376:4:14","nodeType":"YulTypedName","src":"4376:4:14","type":""}],"src":"4255:332:14"},{"body":{"nativeSrc":"4656:80:14","nodeType":"YulBlock","src":"4656:80:14","statements":[{"nativeSrc":"4666:22:14","nodeType":"YulAssignment","src":"4666:22:14","value":{"arguments":[{"name":"offset","nativeSrc":"4681:6:14","nodeType":"YulIdentifier","src":"4681:6:14"}],"functionName":{"name":"mload","nativeSrc":"4675:5:14","nodeType":"YulIdentifier","src":"4675:5:14"},"nativeSrc":"4675:13:14","nodeType":"YulFunctionCall","src":"4675:13:14"},"variableNames":[{"name":"value","nativeSrc":"4666:5:14","nodeType":"YulIdentifier","src":"4666:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4724:5:14","nodeType":"YulIdentifier","src":"4724:5:14"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4697:26:14","nodeType":"YulIdentifier","src":"4697:26:14"},"nativeSrc":"4697:33:14","nodeType":"YulFunctionCall","src":"4697:33:14"},"nativeSrc":"4697:33:14","nodeType":"YulExpressionStatement","src":"4697:33:14"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"4593:143:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4634:6:14","nodeType":"YulTypedName","src":"4634:6:14","type":""},{"name":"end","nativeSrc":"4642:3:14","nodeType":"YulTypedName","src":"4642:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4650:5:14","nodeType":"YulTypedName","src":"4650:5:14","type":""}],"src":"4593:143:14"},{"body":{"nativeSrc":"4819:274:14","nodeType":"YulBlock","src":"4819:274:14","statements":[{"body":{"nativeSrc":"4865:83:14","nodeType":"YulBlock","src":"4865:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4867:77:14","nodeType":"YulIdentifier","src":"4867:77:14"},"nativeSrc":"4867:79:14","nodeType":"YulFunctionCall","src":"4867:79:14"},"nativeSrc":"4867:79:14","nodeType":"YulExpressionStatement","src":"4867:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4840:7:14","nodeType":"YulIdentifier","src":"4840:7:14"},{"name":"headStart","nativeSrc":"4849:9:14","nodeType":"YulIdentifier","src":"4849:9:14"}],"functionName":{"name":"sub","nativeSrc":"4836:3:14","nodeType":"YulIdentifier","src":"4836:3:14"},"nativeSrc":"4836:23:14","nodeType":"YulFunctionCall","src":"4836:23:14"},{"kind":"number","nativeSrc":"4861:2:14","nodeType":"YulLiteral","src":"4861:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4832:3:14","nodeType":"YulIdentifier","src":"4832:3:14"},"nativeSrc":"4832:32:14","nodeType":"YulFunctionCall","src":"4832:32:14"},"nativeSrc":"4829:119:14","nodeType":"YulIf","src":"4829:119:14"},{"nativeSrc":"4958:128:14","nodeType":"YulBlock","src":"4958:128:14","statements":[{"nativeSrc":"4973:15:14","nodeType":"YulVariableDeclaration","src":"4973:15:14","value":{"kind":"number","nativeSrc":"4987:1:14","nodeType":"YulLiteral","src":"4987:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4977:6:14","nodeType":"YulTypedName","src":"4977:6:14","type":""}]},{"nativeSrc":"5002:74:14","nodeType":"YulAssignment","src":"5002:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5048:9:14","nodeType":"YulIdentifier","src":"5048:9:14"},{"name":"offset","nativeSrc":"5059:6:14","nodeType":"YulIdentifier","src":"5059:6:14"}],"functionName":{"name":"add","nativeSrc":"5044:3:14","nodeType":"YulIdentifier","src":"5044:3:14"},"nativeSrc":"5044:22:14","nodeType":"YulFunctionCall","src":"5044:22:14"},{"name":"dataEnd","nativeSrc":"5068:7:14","nodeType":"YulIdentifier","src":"5068:7:14"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"5012:31:14","nodeType":"YulIdentifier","src":"5012:31:14"},"nativeSrc":"5012:64:14","nodeType":"YulFunctionCall","src":"5012:64:14"},"variableNames":[{"name":"value0","nativeSrc":"5002:6:14","nodeType":"YulIdentifier","src":"5002:6:14"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"4742:351:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4789:9:14","nodeType":"YulTypedName","src":"4789:9:14","type":""},{"name":"dataEnd","nativeSrc":"4800:7:14","nodeType":"YulTypedName","src":"4800:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4812:6:14","nodeType":"YulTypedName","src":"4812:6:14","type":""}],"src":"4742:351:14"},{"body":{"nativeSrc":"5212:34:14","nodeType":"YulBlock","src":"5212:34:14","statements":[{"nativeSrc":"5222:18:14","nodeType":"YulAssignment","src":"5222:18:14","value":{"name":"pos","nativeSrc":"5237:3:14","nodeType":"YulIdentifier","src":"5237:3:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"5222:11:14","nodeType":"YulIdentifier","src":"5222:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5099:147:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5184:3:14","nodeType":"YulTypedName","src":"5184:3:14","type":""},{"name":"length","nativeSrc":"5189:6:14","nodeType":"YulTypedName","src":"5189:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"5200:11:14","nodeType":"YulTypedName","src":"5200:11:14","type":""}],"src":"5099:147:14"},{"body":{"nativeSrc":"5358:8:14","nodeType":"YulBlock","src":"5358:8:14","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"5252:114:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5350:6:14","nodeType":"YulTypedName","src":"5350:6:14","type":""}],"src":"5252:114:14"},{"body":{"nativeSrc":"5535:235:14","nodeType":"YulBlock","src":"5535:235:14","statements":[{"nativeSrc":"5545:90:14","nodeType":"YulAssignment","src":"5545:90:14","value":{"arguments":[{"name":"pos","nativeSrc":"5628:3:14","nodeType":"YulIdentifier","src":"5628:3:14"},{"kind":"number","nativeSrc":"5633:1:14","nodeType":"YulLiteral","src":"5633:1:14","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5552:75:14","nodeType":"YulIdentifier","src":"5552:75:14"},"nativeSrc":"5552:83:14","nodeType":"YulFunctionCall","src":"5552:83:14"},"variableNames":[{"name":"pos","nativeSrc":"5545:3:14","nodeType":"YulIdentifier","src":"5545:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5733:3:14","nodeType":"YulIdentifier","src":"5733:3:14"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"5644:88:14","nodeType":"YulIdentifier","src":"5644:88:14"},"nativeSrc":"5644:93:14","nodeType":"YulFunctionCall","src":"5644:93:14"},"nativeSrc":"5644:93:14","nodeType":"YulExpressionStatement","src":"5644:93:14"},{"nativeSrc":"5746:18:14","nodeType":"YulAssignment","src":"5746:18:14","value":{"arguments":[{"name":"pos","nativeSrc":"5757:3:14","nodeType":"YulIdentifier","src":"5757:3:14"},{"kind":"number","nativeSrc":"5762:1:14","nodeType":"YulLiteral","src":"5762:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5753:3:14","nodeType":"YulIdentifier","src":"5753:3:14"},"nativeSrc":"5753:11:14","nodeType":"YulFunctionCall","src":"5753:11:14"},"variableNames":[{"name":"end","nativeSrc":"5746:3:14","nodeType":"YulIdentifier","src":"5746:3:14"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5372:398:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5523:3:14","nodeType":"YulTypedName","src":"5523:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5531:3:14","nodeType":"YulTypedName","src":"5531:3:14","type":""}],"src":"5372:398:14"},{"body":{"nativeSrc":"5964:191:14","nodeType":"YulBlock","src":"5964:191:14","statements":[{"nativeSrc":"5975:154:14","nodeType":"YulAssignment","src":"5975:154:14","value":{"arguments":[{"name":"pos","nativeSrc":"6125:3:14","nodeType":"YulIdentifier","src":"6125:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5982:141:14","nodeType":"YulIdentifier","src":"5982:141:14"},"nativeSrc":"5982:147:14","nodeType":"YulFunctionCall","src":"5982:147:14"},"variableNames":[{"name":"pos","nativeSrc":"5975:3:14","nodeType":"YulIdentifier","src":"5975:3:14"}]},{"nativeSrc":"6139:10:14","nodeType":"YulAssignment","src":"6139:10:14","value":{"name":"pos","nativeSrc":"6146:3:14","nodeType":"YulIdentifier","src":"6146:3:14"},"variableNames":[{"name":"end","nativeSrc":"6139:3:14","nodeType":"YulIdentifier","src":"6139:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"5776:379:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5951:3:14","nodeType":"YulTypedName","src":"5951:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5960:3:14","nodeType":"YulTypedName","src":"5960:3:14","type":""}],"src":"5776:379:14"},{"body":{"nativeSrc":"6257:73:14","nodeType":"YulBlock","src":"6257:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6274:3:14","nodeType":"YulIdentifier","src":"6274:3:14"},{"name":"length","nativeSrc":"6279:6:14","nodeType":"YulIdentifier","src":"6279:6:14"}],"functionName":{"name":"mstore","nativeSrc":"6267:6:14","nodeType":"YulIdentifier","src":"6267:6:14"},"nativeSrc":"6267:19:14","nodeType":"YulFunctionCall","src":"6267:19:14"},"nativeSrc":"6267:19:14","nodeType":"YulExpressionStatement","src":"6267:19:14"},{"nativeSrc":"6295:29:14","nodeType":"YulAssignment","src":"6295:29:14","value":{"arguments":[{"name":"pos","nativeSrc":"6314:3:14","nodeType":"YulIdentifier","src":"6314:3:14"},{"kind":"number","nativeSrc":"6319:4:14","nodeType":"YulLiteral","src":"6319:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6310:3:14","nodeType":"YulIdentifier","src":"6310:3:14"},"nativeSrc":"6310:14:14","nodeType":"YulFunctionCall","src":"6310:14:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"6295:11:14","nodeType":"YulIdentifier","src":"6295:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6161:169:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6229:3:14","nodeType":"YulTypedName","src":"6229:3:14","type":""},{"name":"length","nativeSrc":"6234:6:14","nodeType":"YulTypedName","src":"6234:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6245:11:14","nodeType":"YulTypedName","src":"6245:11:14","type":""}],"src":"6161:169:14"},{"body":{"nativeSrc":"6442:59:14","nodeType":"YulBlock","src":"6442:59:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6464:6:14","nodeType":"YulIdentifier","src":"6464:6:14"},{"kind":"number","nativeSrc":"6472:1:14","nodeType":"YulLiteral","src":"6472:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6460:3:14","nodeType":"YulIdentifier","src":"6460:3:14"},"nativeSrc":"6460:14:14","nodeType":"YulFunctionCall","src":"6460:14:14"},{"hexValue":"5472616e73666572206661696c6564","kind":"string","nativeSrc":"6476:17:14","nodeType":"YulLiteral","src":"6476:17:14","type":"","value":"Transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"6453:6:14","nodeType":"YulIdentifier","src":"6453:6:14"},"nativeSrc":"6453:41:14","nodeType":"YulFunctionCall","src":"6453:41:14"},"nativeSrc":"6453:41:14","nodeType":"YulExpressionStatement","src":"6453:41:14"}]},"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nativeSrc":"6336:165:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6434:6:14","nodeType":"YulTypedName","src":"6434:6:14","type":""}],"src":"6336:165:14"},{"body":{"nativeSrc":"6653:220:14","nodeType":"YulBlock","src":"6653:220:14","statements":[{"nativeSrc":"6663:74:14","nodeType":"YulAssignment","src":"6663:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"6729:3:14","nodeType":"YulIdentifier","src":"6729:3:14"},{"kind":"number","nativeSrc":"6734:2:14","nodeType":"YulLiteral","src":"6734:2:14","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6670:58:14","nodeType":"YulIdentifier","src":"6670:58:14"},"nativeSrc":"6670:67:14","nodeType":"YulFunctionCall","src":"6670:67:14"},"variableNames":[{"name":"pos","nativeSrc":"6663:3:14","nodeType":"YulIdentifier","src":"6663:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"6835:3:14","nodeType":"YulIdentifier","src":"6835:3:14"}],"functionName":{"name":"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","nativeSrc":"6746:88:14","nodeType":"YulIdentifier","src":"6746:88:14"},"nativeSrc":"6746:93:14","nodeType":"YulFunctionCall","src":"6746:93:14"},"nativeSrc":"6746:93:14","nodeType":"YulExpressionStatement","src":"6746:93:14"},{"nativeSrc":"6848:19:14","nodeType":"YulAssignment","src":"6848:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"6859:3:14","nodeType":"YulIdentifier","src":"6859:3:14"},{"kind":"number","nativeSrc":"6864:2:14","nodeType":"YulLiteral","src":"6864:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6855:3:14","nodeType":"YulIdentifier","src":"6855:3:14"},"nativeSrc":"6855:12:14","nodeType":"YulFunctionCall","src":"6855:12:14"},"variableNames":[{"name":"end","nativeSrc":"6848:3:14","nodeType":"YulIdentifier","src":"6848:3:14"}]}]},"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nativeSrc":"6507:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6641:3:14","nodeType":"YulTypedName","src":"6641:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6649:3:14","nodeType":"YulTypedName","src":"6649:3:14","type":""}],"src":"6507:366:14"},{"body":{"nativeSrc":"7050:248:14","nodeType":"YulBlock","src":"7050:248:14","statements":[{"nativeSrc":"7060:26:14","nodeType":"YulAssignment","src":"7060:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"7072:9:14","nodeType":"YulIdentifier","src":"7072:9:14"},{"kind":"number","nativeSrc":"7083:2:14","nodeType":"YulLiteral","src":"7083:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7068:3:14","nodeType":"YulIdentifier","src":"7068:3:14"},"nativeSrc":"7068:18:14","nodeType":"YulFunctionCall","src":"7068:18:14"},"variableNames":[{"name":"tail","nativeSrc":"7060:4:14","nodeType":"YulIdentifier","src":"7060:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7107:9:14","nodeType":"YulIdentifier","src":"7107:9:14"},{"kind":"number","nativeSrc":"7118:1:14","nodeType":"YulLiteral","src":"7118:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7103:3:14","nodeType":"YulIdentifier","src":"7103:3:14"},"nativeSrc":"7103:17:14","nodeType":"YulFunctionCall","src":"7103:17:14"},{"arguments":[{"name":"tail","nativeSrc":"7126:4:14","nodeType":"YulIdentifier","src":"7126:4:14"},{"name":"headStart","nativeSrc":"7132:9:14","nodeType":"YulIdentifier","src":"7132:9:14"}],"functionName":{"name":"sub","nativeSrc":"7122:3:14","nodeType":"YulIdentifier","src":"7122:3:14"},"nativeSrc":"7122:20:14","nodeType":"YulFunctionCall","src":"7122:20:14"}],"functionName":{"name":"mstore","nativeSrc":"7096:6:14","nodeType":"YulIdentifier","src":"7096:6:14"},"nativeSrc":"7096:47:14","nodeType":"YulFunctionCall","src":"7096:47:14"},"nativeSrc":"7096:47:14","nodeType":"YulExpressionStatement","src":"7096:47:14"},{"nativeSrc":"7152:139:14","nodeType":"YulAssignment","src":"7152:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"7286:4:14","nodeType":"YulIdentifier","src":"7286:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack","nativeSrc":"7160:124:14","nodeType":"YulIdentifier","src":"7160:124:14"},"nativeSrc":"7160:131:14","nodeType":"YulFunctionCall","src":"7160:131:14"},"variableNames":[{"name":"tail","nativeSrc":"7152:4:14","nodeType":"YulIdentifier","src":"7152:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6879:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7030:9:14","nodeType":"YulTypedName","src":"7030:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7045:4:14","nodeType":"YulTypedName","src":"7045:4:14","type":""}],"src":"6879:419:14"},{"body":{"nativeSrc":"7458:288:14","nodeType":"YulBlock","src":"7458:288:14","statements":[{"nativeSrc":"7468:26:14","nodeType":"YulAssignment","src":"7468:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"7480:9:14","nodeType":"YulIdentifier","src":"7480:9:14"},{"kind":"number","nativeSrc":"7491:2:14","nodeType":"YulLiteral","src":"7491:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7476:3:14","nodeType":"YulIdentifier","src":"7476:3:14"},"nativeSrc":"7476:18:14","nodeType":"YulFunctionCall","src":"7476:18:14"},"variableNames":[{"name":"tail","nativeSrc":"7468:4:14","nodeType":"YulIdentifier","src":"7468:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7548:6:14","nodeType":"YulIdentifier","src":"7548:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"7561:9:14","nodeType":"YulIdentifier","src":"7561:9:14"},{"kind":"number","nativeSrc":"7572:1:14","nodeType":"YulLiteral","src":"7572:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7557:3:14","nodeType":"YulIdentifier","src":"7557:3:14"},"nativeSrc":"7557:17:14","nodeType":"YulFunctionCall","src":"7557:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7504:43:14","nodeType":"YulIdentifier","src":"7504:43:14"},"nativeSrc":"7504:71:14","nodeType":"YulFunctionCall","src":"7504:71:14"},"nativeSrc":"7504:71:14","nodeType":"YulExpressionStatement","src":"7504:71:14"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7629:6:14","nodeType":"YulIdentifier","src":"7629:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"7642:9:14","nodeType":"YulIdentifier","src":"7642:9:14"},{"kind":"number","nativeSrc":"7653:2:14","nodeType":"YulLiteral","src":"7653:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7638:3:14","nodeType":"YulIdentifier","src":"7638:3:14"},"nativeSrc":"7638:18:14","nodeType":"YulFunctionCall","src":"7638:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7585:43:14","nodeType":"YulIdentifier","src":"7585:43:14"},"nativeSrc":"7585:72:14","nodeType":"YulFunctionCall","src":"7585:72:14"},"nativeSrc":"7585:72:14","nodeType":"YulExpressionStatement","src":"7585:72:14"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7711:6:14","nodeType":"YulIdentifier","src":"7711:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"7724:9:14","nodeType":"YulIdentifier","src":"7724:9:14"},{"kind":"number","nativeSrc":"7735:2:14","nodeType":"YulLiteral","src":"7735:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7720:3:14","nodeType":"YulIdentifier","src":"7720:3:14"},"nativeSrc":"7720:18:14","nodeType":"YulFunctionCall","src":"7720:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7667:43:14","nodeType":"YulIdentifier","src":"7667:43:14"},"nativeSrc":"7667:72:14","nodeType":"YulFunctionCall","src":"7667:72:14"},"nativeSrc":"7667:72:14","nodeType":"YulExpressionStatement","src":"7667:72:14"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7304:442:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7414:9:14","nodeType":"YulTypedName","src":"7414:9:14","type":""},{"name":"value2","nativeSrc":"7426:6:14","nodeType":"YulTypedName","src":"7426:6:14","type":""},{"name":"value1","nativeSrc":"7434:6:14","nodeType":"YulTypedName","src":"7434:6:14","type":""},{"name":"value0","nativeSrc":"7442:6:14","nodeType":"YulTypedName","src":"7442:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7453:4:14","nodeType":"YulTypedName","src":"7453:4:14","type":""}],"src":"7304:442:14"},{"body":{"nativeSrc":"7780:152:14","nodeType":"YulBlock","src":"7780:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7797:1:14","nodeType":"YulLiteral","src":"7797:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"7800:77:14","nodeType":"YulLiteral","src":"7800:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7790:6:14","nodeType":"YulIdentifier","src":"7790:6:14"},"nativeSrc":"7790:88:14","nodeType":"YulFunctionCall","src":"7790:88:14"},"nativeSrc":"7790:88:14","nodeType":"YulExpressionStatement","src":"7790:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7894:1:14","nodeType":"YulLiteral","src":"7894:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"7897:4:14","nodeType":"YulLiteral","src":"7897:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7887:6:14","nodeType":"YulIdentifier","src":"7887:6:14"},"nativeSrc":"7887:15:14","nodeType":"YulFunctionCall","src":"7887:15:14"},"nativeSrc":"7887:15:14","nodeType":"YulExpressionStatement","src":"7887:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7918:1:14","nodeType":"YulLiteral","src":"7918:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"7921:4:14","nodeType":"YulLiteral","src":"7921:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7911:6:14","nodeType":"YulIdentifier","src":"7911:6:14"},"nativeSrc":"7911:15:14","nodeType":"YulFunctionCall","src":"7911:15:14"},"nativeSrc":"7911:15:14","nodeType":"YulExpressionStatement","src":"7911:15:14"}]},"name":"panic_error_0x11","nativeSrc":"7752:180:14","nodeType":"YulFunctionDefinition","src":"7752:180:14"},{"body":{"nativeSrc":"7982:147:14","nodeType":"YulBlock","src":"7982:147:14","statements":[{"nativeSrc":"7992:25:14","nodeType":"YulAssignment","src":"7992:25:14","value":{"arguments":[{"name":"x","nativeSrc":"8015:1:14","nodeType":"YulIdentifier","src":"8015:1:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7997:17:14","nodeType":"YulIdentifier","src":"7997:17:14"},"nativeSrc":"7997:20:14","nodeType":"YulFunctionCall","src":"7997:20:14"},"variableNames":[{"name":"x","nativeSrc":"7992:1:14","nodeType":"YulIdentifier","src":"7992:1:14"}]},{"nativeSrc":"8026:25:14","nodeType":"YulAssignment","src":"8026:25:14","value":{"arguments":[{"name":"y","nativeSrc":"8049:1:14","nodeType":"YulIdentifier","src":"8049:1:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8031:17:14","nodeType":"YulIdentifier","src":"8031:17:14"},"nativeSrc":"8031:20:14","nodeType":"YulFunctionCall","src":"8031:20:14"},"variableNames":[{"name":"y","nativeSrc":"8026:1:14","nodeType":"YulIdentifier","src":"8026:1:14"}]},{"nativeSrc":"8060:16:14","nodeType":"YulAssignment","src":"8060:16:14","value":{"arguments":[{"name":"x","nativeSrc":"8071:1:14","nodeType":"YulIdentifier","src":"8071:1:14"},{"name":"y","nativeSrc":"8074:1:14","nodeType":"YulIdentifier","src":"8074:1:14"}],"functionName":{"name":"add","nativeSrc":"8067:3:14","nodeType":"YulIdentifier","src":"8067:3:14"},"nativeSrc":"8067:9:14","nodeType":"YulFunctionCall","src":"8067:9:14"},"variableNames":[{"name":"sum","nativeSrc":"8060:3:14","nodeType":"YulIdentifier","src":"8060:3:14"}]},{"body":{"nativeSrc":"8100:22:14","nodeType":"YulBlock","src":"8100:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8102:16:14","nodeType":"YulIdentifier","src":"8102:16:14"},"nativeSrc":"8102:18:14","nodeType":"YulFunctionCall","src":"8102:18:14"},"nativeSrc":"8102:18:14","nodeType":"YulExpressionStatement","src":"8102:18:14"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"8092:1:14","nodeType":"YulIdentifier","src":"8092:1:14"},{"name":"sum","nativeSrc":"8095:3:14","nodeType":"YulIdentifier","src":"8095:3:14"}],"functionName":{"name":"gt","nativeSrc":"8089:2:14","nodeType":"YulIdentifier","src":"8089:2:14"},"nativeSrc":"8089:10:14","nodeType":"YulFunctionCall","src":"8089:10:14"},"nativeSrc":"8086:36:14","nodeType":"YulIf","src":"8086:36:14"}]},"name":"checked_add_t_uint256","nativeSrc":"7938:191:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7969:1:14","nodeType":"YulTypedName","src":"7969:1:14","type":""},{"name":"y","nativeSrc":"7972:1:14","nodeType":"YulTypedName","src":"7972:1:14","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7978:3:14","nodeType":"YulTypedName","src":"7978:3:14","type":""}],"src":"7938:191:14"},{"body":{"nativeSrc":"8289:288:14","nodeType":"YulBlock","src":"8289:288:14","statements":[{"nativeSrc":"8299:26:14","nodeType":"YulAssignment","src":"8299:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"8311:9:14","nodeType":"YulIdentifier","src":"8311:9:14"},{"kind":"number","nativeSrc":"8322:2:14","nodeType":"YulLiteral","src":"8322:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8307:3:14","nodeType":"YulIdentifier","src":"8307:3:14"},"nativeSrc":"8307:18:14","nodeType":"YulFunctionCall","src":"8307:18:14"},"variableNames":[{"name":"tail","nativeSrc":"8299:4:14","nodeType":"YulIdentifier","src":"8299:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8379:6:14","nodeType":"YulIdentifier","src":"8379:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"8392:9:14","nodeType":"YulIdentifier","src":"8392:9:14"},{"kind":"number","nativeSrc":"8403:1:14","nodeType":"YulLiteral","src":"8403:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8388:3:14","nodeType":"YulIdentifier","src":"8388:3:14"},"nativeSrc":"8388:17:14","nodeType":"YulFunctionCall","src":"8388:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8335:43:14","nodeType":"YulIdentifier","src":"8335:43:14"},"nativeSrc":"8335:71:14","nodeType":"YulFunctionCall","src":"8335:71:14"},"nativeSrc":"8335:71:14","nodeType":"YulExpressionStatement","src":"8335:71:14"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8460:6:14","nodeType":"YulIdentifier","src":"8460:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"8473:9:14","nodeType":"YulIdentifier","src":"8473:9:14"},{"kind":"number","nativeSrc":"8484:2:14","nodeType":"YulLiteral","src":"8484:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8469:3:14","nodeType":"YulIdentifier","src":"8469:3:14"},"nativeSrc":"8469:18:14","nodeType":"YulFunctionCall","src":"8469:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8416:43:14","nodeType":"YulIdentifier","src":"8416:43:14"},"nativeSrc":"8416:72:14","nodeType":"YulFunctionCall","src":"8416:72:14"},"nativeSrc":"8416:72:14","nodeType":"YulExpressionStatement","src":"8416:72:14"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"8542:6:14","nodeType":"YulIdentifier","src":"8542:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"8555:9:14","nodeType":"YulIdentifier","src":"8555:9:14"},{"kind":"number","nativeSrc":"8566:2:14","nodeType":"YulLiteral","src":"8566:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8551:3:14","nodeType":"YulIdentifier","src":"8551:3:14"},"nativeSrc":"8551:18:14","nodeType":"YulFunctionCall","src":"8551:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8498:43:14","nodeType":"YulIdentifier","src":"8498:43:14"},"nativeSrc":"8498:72:14","nodeType":"YulFunctionCall","src":"8498:72:14"},"nativeSrc":"8498:72:14","nodeType":"YulExpressionStatement","src":"8498:72:14"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"8135:442:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8245:9:14","nodeType":"YulTypedName","src":"8245:9:14","type":""},{"name":"value2","nativeSrc":"8257:6:14","nodeType":"YulTypedName","src":"8257:6:14","type":""},{"name":"value1","nativeSrc":"8265:6:14","nodeType":"YulTypedName","src":"8265:6:14","type":""},{"name":"value0","nativeSrc":"8273:6:14","nodeType":"YulTypedName","src":"8273:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8284:4:14","nodeType":"YulTypedName","src":"8284:4:14","type":""}],"src":"8135:442:14"},{"body":{"nativeSrc":"8689:75:14","nodeType":"YulBlock","src":"8689:75:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"8711:6:14","nodeType":"YulIdentifier","src":"8711:6:14"},{"kind":"number","nativeSrc":"8719:1:14","nodeType":"YulLiteral","src":"8719:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8707:3:14","nodeType":"YulIdentifier","src":"8707:3:14"},"nativeSrc":"8707:14:14","nodeType":"YulFunctionCall","src":"8707:14:14"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nativeSrc":"8723:33:14","nodeType":"YulLiteral","src":"8723:33:14","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nativeSrc":"8700:6:14","nodeType":"YulIdentifier","src":"8700:6:14"},"nativeSrc":"8700:57:14","nodeType":"YulFunctionCall","src":"8700:57:14"},"nativeSrc":"8700:57:14","nodeType":"YulExpressionStatement","src":"8700:57:14"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nativeSrc":"8583:181:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"8681:6:14","nodeType":"YulTypedName","src":"8681:6:14","type":""}],"src":"8583:181:14"},{"body":{"nativeSrc":"8916:220:14","nodeType":"YulBlock","src":"8916:220:14","statements":[{"nativeSrc":"8926:74:14","nodeType":"YulAssignment","src":"8926:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"8992:3:14","nodeType":"YulIdentifier","src":"8992:3:14"},{"kind":"number","nativeSrc":"8997:2:14","nodeType":"YulLiteral","src":"8997:2:14","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8933:58:14","nodeType":"YulIdentifier","src":"8933:58:14"},"nativeSrc":"8933:67:14","nodeType":"YulFunctionCall","src":"8933:67:14"},"variableNames":[{"name":"pos","nativeSrc":"8926:3:14","nodeType":"YulIdentifier","src":"8926:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9098:3:14","nodeType":"YulIdentifier","src":"9098:3:14"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nativeSrc":"9009:88:14","nodeType":"YulIdentifier","src":"9009:88:14"},"nativeSrc":"9009:93:14","nodeType":"YulFunctionCall","src":"9009:93:14"},"nativeSrc":"9009:93:14","nodeType":"YulExpressionStatement","src":"9009:93:14"},{"nativeSrc":"9111:19:14","nodeType":"YulAssignment","src":"9111:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"9122:3:14","nodeType":"YulIdentifier","src":"9122:3:14"},{"kind":"number","nativeSrc":"9127:2:14","nodeType":"YulLiteral","src":"9127:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9118:3:14","nodeType":"YulIdentifier","src":"9118:3:14"},"nativeSrc":"9118:12:14","nodeType":"YulFunctionCall","src":"9118:12:14"},"variableNames":[{"name":"end","nativeSrc":"9111:3:14","nodeType":"YulIdentifier","src":"9111:3:14"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nativeSrc":"8770:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8904:3:14","nodeType":"YulTypedName","src":"8904:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8912:3:14","nodeType":"YulTypedName","src":"8912:3:14","type":""}],"src":"8770:366:14"},{"body":{"nativeSrc":"9313:248:14","nodeType":"YulBlock","src":"9313:248:14","statements":[{"nativeSrc":"9323:26:14","nodeType":"YulAssignment","src":"9323:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"9335:9:14","nodeType":"YulIdentifier","src":"9335:9:14"},{"kind":"number","nativeSrc":"9346:2:14","nodeType":"YulLiteral","src":"9346:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9331:3:14","nodeType":"YulIdentifier","src":"9331:3:14"},"nativeSrc":"9331:18:14","nodeType":"YulFunctionCall","src":"9331:18:14"},"variableNames":[{"name":"tail","nativeSrc":"9323:4:14","nodeType":"YulIdentifier","src":"9323:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9370:9:14","nodeType":"YulIdentifier","src":"9370:9:14"},{"kind":"number","nativeSrc":"9381:1:14","nodeType":"YulLiteral","src":"9381:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9366:3:14","nodeType":"YulIdentifier","src":"9366:3:14"},"nativeSrc":"9366:17:14","nodeType":"YulFunctionCall","src":"9366:17:14"},{"arguments":[{"name":"tail","nativeSrc":"9389:4:14","nodeType":"YulIdentifier","src":"9389:4:14"},{"name":"headStart","nativeSrc":"9395:9:14","nodeType":"YulIdentifier","src":"9395:9:14"}],"functionName":{"name":"sub","nativeSrc":"9385:3:14","nodeType":"YulIdentifier","src":"9385:3:14"},"nativeSrc":"9385:20:14","nodeType":"YulFunctionCall","src":"9385:20:14"}],"functionName":{"name":"mstore","nativeSrc":"9359:6:14","nodeType":"YulIdentifier","src":"9359:6:14"},"nativeSrc":"9359:47:14","nodeType":"YulFunctionCall","src":"9359:47:14"},"nativeSrc":"9359:47:14","nodeType":"YulExpressionStatement","src":"9359:47:14"},{"nativeSrc":"9415:139:14","nodeType":"YulAssignment","src":"9415:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"9549:4:14","nodeType":"YulIdentifier","src":"9549:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nativeSrc":"9423:124:14","nodeType":"YulIdentifier","src":"9423:124:14"},"nativeSrc":"9423:131:14","nodeType":"YulFunctionCall","src":"9423:131:14"},"variableNames":[{"name":"tail","nativeSrc":"9415:4:14","nodeType":"YulIdentifier","src":"9415:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9142:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9293:9:14","nodeType":"YulTypedName","src":"9293:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9308:4:14","nodeType":"YulTypedName","src":"9308:4:14","type":""}],"src":"9142:419:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct NftMarketplace.Listing -> struct NftMarketplace.Listing\n    function abi_encode_t_struct$_Listing_$2794_memory_ptr_to_t_struct$_Listing_$2794_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Listing_$2794_memory_ptr__to_t_struct$_Listing_$2794_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Listing_$2794_memory_ptr_to_t_struct$_Listing_$2794_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100705760003560e01c80639038e6931161004e5780639038e693146101185780639f37092a1461012f578063b2ddee061461014b578063f772adf11461017457610070565b806330cfeda91461007557806388700d1c146100b257806389bfd38f146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190611243565b61019d565b6040516100a99190611289565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906112d0565b6101e6565b6040516100e6919061135d565b60405180910390f35b3480156100fb57600080fd5b5061011660048036038101906101119190611378565b6102b1565b005b34801561012457600080fd5b5061012d61070b565b005b610149600480360381019061014491906112d0565b61087e565b005b34801561015757600080fd5b50610172600480360381019061016d91906112d0565b610c6b565b005b34801561018057600080fd5b5061019b60048036038101906101969190611378565b610f4b565b005b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6101ee6111b0565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b8282336000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111156103bf5783836040517f4a5568d50000000000000000000000000000000000000000000000000000000081526004016103b69291906113da565b60405180910390fd5b868633600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016104029190611289565b602060405180830381865afa15801561041f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104439190611418565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146104aa576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008a116104e4576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008c90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8e6040518263ffffffff1660e01b81526004016105399190611289565b602060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a9190611418565b73ffffffffffffffffffffffffffffffffffffffff16146105c7576040517f4be3a2c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052808c81526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508b8d73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de48e6040516106f49190611289565b60405180910390a450505050505050505050505050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610789576040517fc4d8fa8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060003373ffffffffffffffffffffffffffffffffffffffff16826040516107f490611476565b60006040518083038185875af1925050503d8060008114610831576040519150601f19603f3d011682016040523d82523d6000602084013e610836565b606091505b505090508061087a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610871906114e8565b60405180910390fd5b5050565b81816000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600081600001511161098a5782826040517f6831488c0000000000000000000000000000000000000000000000000000000081526004016109819291906113da565b60405180910390fd5b610992611157565b6000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060000151341015610aa257858582600001516040517f7c934565000000000000000000000000000000000000000000000000000000008152600401610a9993929190611508565b60405180910390fd5b3460026000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610af5919061156e565b92505081905550600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550508573ffffffffffffffffffffffffffffffffffffffff166342842e0e826020015133886040518463ffffffff1660e01b8152600401610bbf939291906115a2565b600060405180830381600087803b158015610bd957600080fd5b505af1158015610bed573d6000803e3d6000fd5b50505050848673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f263223b1dd81e51054a4e6f791d45a4a1ddb4aadcd93a2dfd892615c3fdac1878460000151604051610c539190611289565b60405180910390a450610c646111a6565b5050505050565b818133600083905060008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401610cae9190611289565b602060405180830381865afa158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef9190611418565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d56576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86866000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000816000015111610e625782826040517f6831488c000000000000000000000000000000000000000000000000000000008152600401610e599291906113da565b60405180910390fd5b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050888a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f9ba1a3cb55ce8d63d072a886f94d2a744f50cddf82128e897d0661f5ec62315860405160405180910390a450505050505050505050565b82826000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060008160000151116110575782826040517f6831488c00000000000000000000000000000000000000000000000000000000815260040161104e9291906113da565b60405180910390fd5b60008403611091576040517fe1abbfc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060000181905550848673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd547e933094f12a9159076970143ebe73234e64480317844b0dcb36117116de4876040516111479190611289565b60405180910390a4505050505050565b60026000540361119c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119390611625565b60405180910390fd5b6002600081905550565b6001600081905550565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611210826111e5565b9050919050565b61122081611205565b811461122b57600080fd5b50565b60008135905061123d81611217565b92915050565b600060208284031215611259576112586111e0565b5b60006112678482850161122e565b91505092915050565b6000819050919050565b61128381611270565b82525050565b600060208201905061129e600083018461127a565b92915050565b6112ad81611270565b81146112b857600080fd5b50565b6000813590506112ca816112a4565b92915050565b600080604083850312156112e7576112e66111e0565b5b60006112f58582860161122e565b9250506020611306858286016112bb565b9150509250929050565b61131981611270565b82525050565b61132881611205565b82525050565b6040820160008201516113446000850182611310565b506020820151611357602085018261131f565b50505050565b6000604082019050611372600083018461132e565b92915050565b600080600060608486031215611391576113906111e0565b5b600061139f8682870161122e565b93505060206113b0868287016112bb565b92505060406113c1868287016112bb565b9150509250925092565b6113d481611205565b82525050565b60006040820190506113ef60008301856113cb565b6113fc602083018461127a565b9392505050565b60008151905061141281611217565b92915050565b60006020828403121561142e5761142d6111e0565b5b600061143c84828501611403565b91505092915050565b600081905092915050565b50565b6000611460600083611445565b915061146b82611450565b600082019050919050565b600061148182611453565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006114d2600f8361148b565b91506114dd8261149c565b602082019050919050565b60006020820190508181036000830152611501816114c5565b9050919050565b600060608201905061151d60008301866113cb565b61152a602083018561127a565b611537604083018461127a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061157982611270565b915061158483611270565b925082820190508082111561159c5761159b61153f565b5b92915050565b60006060820190506115b760008301866113cb565b6115c460208301856113cb565b6115d1604083018461127a565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061160f601f8361148b565b915061161a826115d9565b602082019050919050565b6000602082019050818103600083015261163e81611602565b905091905056fea26469706673582212206184db56cf9bfab4e5bf3f72e2c2d5797fdf5f30befcfd5aa726a9d63904d60364736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9038E693 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x9038E693 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x9F37092A EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xB2DDEE06 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xF772ADF1 EQ PUSH2 0x174 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x30CFEDA9 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x88700D1C EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x89BFD38F EQ PUSH2 0xEF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x1E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x135D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12D PUSH2 0x70B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0xF4B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP3 CALLER PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT ISZERO PUSH2 0x3BF JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH32 0x4A5568D500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B6 SWAP3 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x41F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 GT PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP13 SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP15 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x556 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4BE3A2C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP12 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD547E933094F12A9159076970143EBE73234E64480317844B0DCB36117116DE4 DUP15 PUSH1 0x40 MLOAD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x789 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC4D8FA8700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7F4 SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x836 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x87A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x871 SWAP1 PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x98A JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP3 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x992 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD CALLVALUE LT ISZERO PUSH2 0xAA2 JUMPI DUP6 DUP6 DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x7C93456500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA99 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1508 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAF5 SWAP2 SWAP1 PUSH2 0x156E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP3 PUSH1 0x20 ADD MLOAD CALLER DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x263223B1DD81E51054A4E6F791D45A4A1DDB4AADCD93A2DFD892615C3FDAC187 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0xC64 PUSH2 0x11A6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 CALLER PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAE SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP7 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0xE62 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE59 SWAP3 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9BA1A3CB55CE8D63D072A886F94D2A744F50CDDF82128E897D0661F5EC623158 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD GT PUSH2 0x1057 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6831488C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP3 SWAP2 SWAP1 PUSH2 0x13DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SUB PUSH2 0x1091 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE1ABBFC500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD547E933094F12A9159076970143EBE73234E64480317844B0DCB36117116DE4 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1147 SWAP2 SWAP1 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x119C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1193 SWAP1 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1210 DUP3 PUSH2 0x11E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1220 DUP2 PUSH2 0x1205 JUMP JUMPDEST DUP2 EQ PUSH2 0x122B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x123D DUP2 PUSH2 0x1217 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1259 JUMPI PUSH2 0x1258 PUSH2 0x11E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1267 DUP5 DUP3 DUP6 ADD PUSH2 0x122E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1283 DUP2 PUSH2 0x1270 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x129E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AD DUP2 PUSH2 0x1270 JUMP JUMPDEST DUP2 EQ PUSH2 0x12B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12CA DUP2 PUSH2 0x12A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12E7 JUMPI PUSH2 0x12E6 PUSH2 0x11E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12F5 DUP6 DUP3 DUP7 ADD PUSH2 0x122E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1306 DUP6 DUP3 DUP7 ADD PUSH2 0x12BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1319 DUP2 PUSH2 0x1270 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1328 DUP2 PUSH2 0x1205 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x1344 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x1310 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1357 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x131F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1372 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x132E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1391 JUMPI PUSH2 0x1390 PUSH2 0x11E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x139F DUP7 DUP3 DUP8 ADD PUSH2 0x122E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13B0 DUP7 DUP3 DUP8 ADD PUSH2 0x12BB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13C1 DUP7 DUP3 DUP8 ADD PUSH2 0x12BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x13D4 DUP2 PUSH2 0x1205 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13EF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x13FC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1412 DUP2 PUSH2 0x1217 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142E JUMPI PUSH2 0x142D PUSH2 0x11E0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x143C DUP5 DUP3 DUP6 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1460 PUSH1 0x0 DUP4 PUSH2 0x1445 JUMP JUMPDEST SWAP2 POP PUSH2 0x146B DUP3 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1481 DUP3 PUSH2 0x1453 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D2 PUSH1 0xF DUP4 PUSH2 0x148B JUMP JUMPDEST SWAP2 POP PUSH2 0x14DD DUP3 PUSH2 0x149C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1501 DUP2 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x151D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x152A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x127A JUMP JUMPDEST PUSH2 0x1537 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1579 DUP3 PUSH2 0x1270 JUMP JUMPDEST SWAP2 POP PUSH2 0x1584 DUP4 PUSH2 0x1270 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x159C JUMPI PUSH2 0x159B PUSH2 0x153F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15B7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x15C4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13CB JUMP JUMPDEST PUSH2 0x15D1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x127A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160F PUSH1 0x1F DUP4 PUSH2 0x148B JUMP JUMPDEST SWAP2 POP PUSH2 0x161A DUP3 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x163E DUP2 PUSH2 0x1602 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x84DB JUMP 0xCF SWAP12 STATICCALL 0xB4 0xE5 0xBF EXTCODEHASH PUSH19 0xE2C2D5797FDF5F30BEFCFD5AA726A9D63904D6 SUB PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"608:3494:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3995:104;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3836:156;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1683:517;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3553:280;;;;;;;;;;;;;:::i;:::-;;2676:547;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2414:256;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3226:322;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3995:104;4055:7;4076:10;:18;4087:6;4076:18;;;;;;;;;;;;;;;;4069:25;;3995:104;;;:::o;3836:156::-;3925:14;;:::i;:::-;3956:10;:22;3967:10;3956:22;;;;;;;;;;;;;;;:31;3979:7;3956:31;;;;;;;;;;;3949:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3836:156;;;;:::o;1683:517::-;1795:10;1807:7;1816:10;1299:22;1324:10;:22;1335:10;1324:22;;;;;;;;;;;;;;;:31;1347:7;1324:31;;;;;;;;;;;1299:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1379:1;1363:7;:13;;;:17;1360:75;;;1409:10;1421:7;1395:34;;;;;;;;;;;;:::i;:::-;;;;;;;;1360:75;1839:10:::1;1851:7;1860:10;1539:11;1561:10;1539:33;;1577:13;1593:3;:11;;;1605:7;1593:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:36;;1632:5;1621:16;;:7;:16;;;1618:50;;1652:10;;;;;;;;;;;;;;1618:50;1891:1:::2;1882:5;:10;1879:57;;1908:22;;;;;;;;;;;;;;1879:57;1940:11;1962:10;1940:33;;2017:4;1981:41;;:3;:15;;;1997:7;1981:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;1978:93;;2038:27;;;;;;;;;;;;;;1978:93;2109:26;;;;;;;;2117:5;2109:26;;;;2124:10;2109:26;;;;::::0;2075:10:::2;:22;2086:10;2075:22;;;;;;;;;;;;;;;:31;2098:7;2075:31;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:7;2168:10;2145:50;;2156:10;2145:50;;;2189:5;2145:50;;;;;;:::i;:::-;;;;;;;;1874:326;1534:144:::1;;1439:1;;;1294:151:::0;1683:517;;;;;;:::o;3553:280::-;3595:16;3614:10;:22;3625:10;3614:22;;;;;;;;;;;;;;;;3595:41;;3656:1;3644:8;:13;3641:48;;3671:12;;;;;;;;;;;;;;3641:48;3718:1;3693:10;:22;3704:10;3693:22;;;;;;;;;;;;;;;:26;;;;3727:12;3752:10;3744:24;;3775:8;3744:44;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3726:62;;;3801:7;3793:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;3590:243;;3553:280::o;2676:547::-;2765:10;2777:7;2265:22;2290:10;:22;2301:10;2290:22;;;;;;;;;;;;;;;:31;2313:7;2290:31;;;;;;;;;;;2265:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:1;2329:7;:13;;;:18;2326:72;;2372:10;2384:7;2362:30;;;;;;;;;;;;:::i;:::-;;;;;;;;2326:72;2261:21:0::1;:19;:21::i;:::-;2809:25:12::2;2837:10;:22;2848:10;2837:22;;;;;;;;;;;;;;;:31;2860:7;2837:31;;;;;;;;;;;2809:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;2888:10;:16;;;2876:9;:28;2873:102;;;2931:10;2943:7;2952:10;:16;;;2919:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;2873:102;3013:9;2980:10;:29;2991:10;:17;;;2980:29;;;;;;;;;;;;;;;;:42;;;;;;;:::i;:::-;;;;;;;;3034:10;:22;3045:10;3034:22;;;;;;;;;;;;;;;:31;3057:7;3034:31;;;;;;;;;;;;3027:39:::0;::::2;;;;;;;;;;;;;;;;;;;;;;3079:10;3071:36;;;3108:10;:17;;;3127:10;3139:7;3071:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;3192:7;3180:10;3157:61;;3168:10;3157:61;;;3201:10;:16;;;3157:61;;;;;;:::i;:::-;;;;;;;;2804:419;2303:20:0::1;:18;:20::i;:::-;2260:148:12::0;2676:547;;;;:::o;2414:256::-;2497:10;2509:7;2518:10;1539:11;1561:10;1539:33;;1577:13;1593:3;:11;;;1605:7;1593:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:36;;1632:5;1621:16;;:7;:16;;;1618:50;;1652:10;;;;;;;;;;;;;;1618:50;2542:10:::1;2554:7;2265:22;2290:10;:22;2301:10;2290:22;;;;;;;;;;;;;;;:31;2313:7;2290:31;;;;;;;;;;;2265:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2346:1;2329:7;:13;;;:18;2326:72;;2372:10;2384:7;2362:30;;;;;;;;;;;;:::i;:::-;;;;;;;;2326:72;2578:10:::2;:22;2589:10;2578:22;;;;;;;;;;;;;;;:31;2601:7;2578:31;;;;;;;;;;;;2570:40:::0;::::2;;;;;;;;;;;;;;;;;;;;;;2657:7;2645:10;2620:45;;2633:10;2620:45;;;;;;;;;;;;2260:148:::1;1672:1;;1534:144:::0;;2414:256;;;;;:::o;3226:322::-;3341:10;3353:7;2265:22;2290:10;:22;2301:10;2290:22;;;;;;;;;;;;;;;:31;2313:7;2290:31;;;;;;;;;;;2265:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:1;2329:7;:13;;;:18;2326:72;;2372:10;2384:7;2362:30;;;;;;;;;;;;:::i;:::-;;;;;;;;2326:72;3384:1:::1;3372:8;:13:::0;3369:59:::1;;3400:22;;;;;;;;;;;;;;3369:59;3472:8;3432:10;:22;3443:10;3432:22;;;;;;;;;;;;;;;:31;3455:7;3432:31;;;;;;;;;;;:37;;:48;;;;3525:7;3513:10;3490:53;;3501:10;3490:53;;;3534:8;3490:53;;;;;;:::i;:::-;;;;;;;;2260:148:::0;3226:322;;;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:108::-;2441:24;2459:5;2441:24;:::i;:::-;2436:3;2429:37;2364:108;;:::o;2478:::-;2555:24;2573:5;2555:24;:::i;:::-;2550:3;2543:37;2478:108;;:::o;2662:510::-;2809:4;2804:3;2800:14;2897:4;2890:5;2886:16;2880:23;2916:63;2973:4;2968:3;2964:14;2950:12;2916:63;:::i;:::-;2824:165;3073:4;3066:5;3062:16;3056:23;3092:63;3149:4;3144:3;3140:14;3126:12;3092:63;:::i;:::-;2999:166;2778:394;2662:510;;:::o;3178:322::-;3321:4;3359:2;3348:9;3344:18;3336:26;;3372:121;3490:1;3479:9;3475:17;3466:6;3372:121;:::i;:::-;3178:322;;;;:::o;3506:619::-;3583:6;3591;3599;3648:2;3636:9;3627:7;3623:23;3619:32;3616:119;;;3654:79;;:::i;:::-;3616:119;3774:1;3799:53;3844:7;3835:6;3824:9;3820:22;3799:53;:::i;:::-;3789:63;;3745:117;3901:2;3927:53;3972:7;3963:6;3952:9;3948:22;3927:53;:::i;:::-;3917:63;;3872:118;4029:2;4055:53;4100:7;4091:6;4080:9;4076:22;4055:53;:::i;:::-;4045:63;;4000:118;3506:619;;;;;:::o;4131:118::-;4218:24;4236:5;4218:24;:::i;:::-;4213:3;4206:37;4131:118;;:::o;4255:332::-;4376:4;4414:2;4403:9;4399:18;4391:26;;4427:71;4495:1;4484:9;4480:17;4471:6;4427:71;:::i;:::-;4508:72;4576:2;4565:9;4561:18;4552:6;4508:72;:::i;:::-;4255:332;;;;;:::o;4593:143::-;4650:5;4681:6;4675:13;4666:22;;4697:33;4724:5;4697:33;:::i;:::-;4593:143;;;;:::o;4742:351::-;4812:6;4861:2;4849:9;4840:7;4836:23;4832:32;4829:119;;;4867:79;;:::i;:::-;4829:119;4987:1;5012:64;5068:7;5059:6;5048:9;5044:22;5012:64;:::i;:::-;5002:74;;4958:128;4742:351;;;;:::o;5099:147::-;5200:11;5237:3;5222:18;;5099:147;;;;:::o;5252:114::-;;:::o;5372:398::-;5531:3;5552:83;5633:1;5628:3;5552:83;:::i;:::-;5545:90;;5644:93;5733:3;5644:93;:::i;:::-;5762:1;5757:3;5753:11;5746:18;;5372:398;;;:::o;5776:379::-;5960:3;5982:147;6125:3;5982:147;:::i;:::-;5975:154;;6146:3;6139:10;;5776:379;;;:::o;6161:169::-;6245:11;6279:6;6274:3;6267:19;6319:4;6314:3;6310:14;6295:29;;6161:169;;;;:::o;6336:165::-;6476:17;6472:1;6464:6;6460:14;6453:41;6336:165;:::o;6507:366::-;6649:3;6670:67;6734:2;6729:3;6670:67;:::i;:::-;6663:74;;6746:93;6835:3;6746:93;:::i;:::-;6864:2;6859:3;6855:12;6848:19;;6507:366;;;:::o;6879:419::-;7045:4;7083:2;7072:9;7068:18;7060:26;;7132:9;7126:4;7122:20;7118:1;7107:9;7103:17;7096:47;7160:131;7286:4;7160:131;:::i;:::-;7152:139;;6879:419;;;:::o;7304:442::-;7453:4;7491:2;7480:9;7476:18;7468:26;;7504:71;7572:1;7561:9;7557:17;7548:6;7504:71;:::i;:::-;7585:72;7653:2;7642:9;7638:18;7629:6;7585:72;:::i;:::-;7667;7735:2;7724:9;7720:18;7711:6;7667:72;:::i;:::-;7304:442;;;;;;:::o;7752:180::-;7800:77;7797:1;7790:88;7897:4;7894:1;7887:15;7921:4;7918:1;7911:15;7938:191;7978:3;7997:20;8015:1;7997:20;:::i;:::-;7992:25;;8031:20;8049:1;8031:20;:::i;:::-;8026:25;;8074:1;8071;8067:9;8060:16;;8095:3;8092:1;8089:10;8086:36;;;8102:18;;:::i;:::-;8086:36;7938:191;;;;:::o;8135:442::-;8284:4;8322:2;8311:9;8307:18;8299:26;;8335:71;8403:1;8392:9;8388:17;8379:6;8335:71;:::i;:::-;8416:72;8484:2;8473:9;8469:18;8460:6;8416:72;:::i;:::-;8498;8566:2;8555:9;8551:18;8542:6;8498:72;:::i;:::-;8135:442;;;;;;:::o;8583:181::-;8723:33;8719:1;8711:6;8707:14;8700:57;8583:181;:::o;8770:366::-;8912:3;8933:67;8997:2;8992:3;8933:67;:::i;:::-;8926:74;;9009:93;9098:3;9009:93;:::i;:::-;9127:2;9122:3;9118:12;9111:19;;8770:366;;;:::o;9142:419::-;9308:4;9346:2;9335:9;9331:18;9323:26;;9395:9;9389:4;9385:20;9381:1;9370:9;9366:17;9359:47;9423:131;9549:4;9423:131;:::i;:::-;9415:139;;9142:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1151000","executionCost":"23308","totalCost":"1174308"},"external":{"buyItem(address,uint256)":"infinite","cancelListing(address,uint256)":"infinite","getListing(address,uint256)":"infinite","getProceeds(address)":"2842","listItem(address,uint256,uint256)":"infinite","updateListing(address,uint256,uint256)":"infinite","withdrawProceeds()":"infinite"}},"methodIdentifiers":{"buyItem(address,uint256)":"9f37092a","cancelListing(address,uint256)":"b2ddee06","getListing(address,uint256)":"88700d1c","getProceeds(address)":"30cfeda9","listItem(address,uint256,uint256)":"89bfd38f","updateListing(address,uint256,uint256)":"f772adf1","withdrawProceeds()":"9038e693"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AlreadyListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoProceeds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotApprovedForMarketplace\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NotListed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceMustBeAboveZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceNotMet\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toeknId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ItemCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getListing\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"internalType\":\"struct NftMarketplace.Listing\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"getProceeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updateListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawProceeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Nftmarketplace.sol\":\"NftMarketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/Nftmarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.25;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\n\\r\\nerror PriceNotMet(address nftAddress, uint256 tokenId, uint256 price);\\r\\nerror ItemNotForSale(address nftAddress, uint256 tokenId);\\r\\nerror NotListed(address nftAddress, uint256 tokenId);\\r\\nerror AlreadyListed(address nftAddress, uint256 tokenId);\\r\\nerror NoProceeds();\\r\\nerror NotOwner();\\r\\nerror NotApprovedForMarketplace();\\r\\nerror PriceMustBeAboveZero();\\r\\n\\r\\ncontract NftMarketplace is ReentrancyGuard {\\r\\n\\r\\n  struct Listing {\\r\\n\\t\\tuint256 price;\\r\\n\\t\\taddress seller;\\r\\n\\t}\\r\\n\\tevent ItemListed (\\r\\n\\t\\taddress indexed seller,\\r\\n\\t\\taddress indexed nftAddress,\\r\\n\\t\\tuint256 indexed tokenId,\\r\\n\\t\\tuint256 price\\r\\n\\t);\\r\\n\\tevent ItemCanceled(\\r\\n\\t\\taddress indexed seller,\\r\\n\\t\\taddress indexed nftAddress,\\r\\n\\t\\tuint256 indexed tokenId\\r\\n\\t);\\r\\n\\tevent ItemBought(\\r\\n\\t\\taddress indexed buyer,\\r\\n\\t\\taddress indexed nftAddress,\\r\\n\\t\\tuint256 indexed toeknId,\\r\\n\\t\\tuint256 price\\r\\n\\t);\\r\\n\\r\\n\\tmapping(address => mapping(uint256 => Listing)) private s_listings;\\r\\n\\tmapping(address => uint256) private s_proceeds;\\r\\n\\r\\n\\tmodifier notListed(\\r\\n\\t\\taddress nftAddress,\\r\\n\\t\\tuint256 tokenId,\\r\\n\\t\\taddress owner\\r\\n\\t) {\\r\\n\\t\\tListing memory listing = s_listings[nftAddress][tokenId];\\r\\n\\t\\tif(listing.price > 0) {\\r\\n\\t\\t\\trevert AlreadyListed(nftAddress, tokenId);\\r\\n\\t\\t}\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\t\\r\\n\\tmodifier isOwner(\\r\\n\\t\\taddress nftAddress,\\r\\n\\t\\tuint256 tokenId,\\r\\n\\t\\taddress spender\\r\\n\\t){\\r\\n\\t\\tIERC721 nft = IERC721(nftAddress);\\r\\n\\t\\taddress owner = nft.ownerOf(tokenId);\\r\\n\\t\\tif(spender != owner) {\\r\\n\\t\\t\\trevert NotOwner();\\r\\n\\t\\t}\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\r\\n\\tfunction listItem(\\r\\n\\t\\t\\taddress nftAddress,\\r\\n\\t\\t\\tuint256 tokenId,\\r\\n\\t\\t\\tuint256 price\\r\\n\\t)\\r\\n\\t\\texternal \\r\\n\\t\\tnotListed(nftAddress, tokenId, msg.sender)\\r\\n\\t\\tisOwner(nftAddress, tokenId, msg.sender)\\r\\n\\t{\\r\\n\\t\\tif(price <= 0) {\\r\\n\\t\\t\\t\\trevert PriceMustBeAboveZero();\\r\\n\\t\\t}\\r\\n\\t\\tIERC721 nft = IERC721(nftAddress);\\r\\n\\t\\tif(nft.getApproved(tokenId) != address(this)) {\\r\\n\\t\\t\\t\\trevert NotApprovedForMarketplace();\\r\\n\\t\\t}\\r\\n\\t\\ts_listings[nftAddress][tokenId] = Listing(price, msg.sender);\\r\\n\\t\\temit ItemListed(msg.sender, nftAddress, tokenId, price);\\r\\n\\t}\\r\\n\\r\\n\\tmodifier isListed(address nftAddress, uint256 tokenId) {\\r\\n\\t\\tListing memory listing = s_listings[nftAddress][tokenId];\\r\\n\\t\\tif(listing.price <= 0) {\\r\\n\\t\\t\\trevert NotListed(nftAddress, tokenId);\\r\\n\\t\\t}\\r\\n\\t\\t_;\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction cancelListing(address nftAddress, uint256 tokenId)\\r\\n\\t\\texternal\\r\\n\\t\\tisOwner(nftAddress, tokenId, msg.sender)\\r\\n\\t\\tisListed(nftAddress, tokenId)\\r\\n\\t{\\r\\n\\t\\tdelete (s_listings[nftAddress][tokenId]);\\r\\n\\t\\temit ItemCanceled(msg.sender, nftAddress, tokenId);\\r\\n\\t}\\r\\n\\t\\r\\n\\tfunction buyItem(address nftAddress, uint256 tokenId)\\r\\n\\t\\texternal\\r\\n\\t\\tpayable\\r\\n\\t\\tisListed(nftAddress, tokenId)\\r\\n\\t\\tnonReentrant\\r\\n\\t{\\r\\n\\t\\tListing memory listedItem = s_listings[nftAddress][tokenId];\\r\\n\\t\\tif(msg.value < listedItem.price) {\\r\\n\\t\\t\\trevert PriceNotMet(nftAddress, tokenId, listedItem.price);\\r\\n\\t\\t} \\r\\n\\t\\ts_proceeds[listedItem.seller] += msg.value;\\r\\n\\t\\tdelete(s_listings[nftAddress][tokenId]);\\r\\n\\t\\tIERC721(nftAddress).safeTransferFrom(listedItem.seller, msg.sender, tokenId);\\r\\n\\t\\temit ItemBought(msg.sender, nftAddress, tokenId, listedItem.price);\\r\\n\\t}\\r\\n\\tfunction updateListing(\\r\\n\\t\\taddress nftAddress,\\r\\n\\t\\tuint256 tokenId,\\r\\n\\t\\tuint256 newPrice\\r\\n\\t)\\r\\n\\t\\texternal\\r\\n\\t\\tisListed(nftAddress, tokenId)\\r\\n\\t{\\r\\n\\t\\tif(newPrice == 0) {\\r\\n\\t\\t\\trevert PriceMustBeAboveZero();\\r\\n\\t\\t}\\r\\n\\t\\ts_listings[nftAddress][tokenId].price = newPrice;\\r\\n\\t\\temit ItemListed(msg.sender, nftAddress, tokenId, newPrice);\\r\\n\\t}\\r\\n\\r\\n\\tfunction withdrawProceeds() external {\\r\\n\\t\\tuint256 proceeds = s_proceeds[msg.sender];\\r\\n\\t\\tif(proceeds <= 0){\\r\\n\\t\\t\\trevert NoProceeds();\\r\\n\\t\\t}\\r\\n\\t\\ts_proceeds[msg.sender] = 0;\\r\\n\\r\\n\\t\\t(bool success,) = payable(msg.sender).call{value:proceeds}(\\\"\\\");\\r\\n\\t\\trequire(success, \\\"Transfer failed\\\");\\r\\n\\t}\\r\\n\\tfunction getListing(address nftAddress, uint256 tokenId)\\r\\n\\t\\texternal\\r\\n\\t\\tview\\r\\n\\t\\treturns (Listing memory)\\r\\n\\t{\\r\\n\\t\\t\\treturn s_listings[nftAddress][tokenId];\\r\\n\\t}\\r\\n\\tfunction getProceeds(address seller) external view returns (uint256) {\\r\\n\\t\\treturn s_proceeds[seller];\\r\\n\\t}\\r\\n}\",\"keccak256\":\"0xb09f2cb3d5bfd439cf5a00ac56d073a3c236c4570ea51f010f0497b819ed7aa9\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":10,"contract":"contracts/Nftmarketplace.sol:NftMarketplace","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":2829,"contract":"contracts/Nftmarketplace.sol:NftMarketplace","label":"s_listings","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)2794_storage))"},{"astId":2833,"contract":"contracts/Nftmarketplace.sol:NftMarketplace","label":"s_proceeds","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)2794_storage))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => struct NftMarketplace.Listing))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_struct(Listing)2794_storage)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(Listing)2794_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct NftMarketplace.Listing)","numberOfBytes":"32","value":"t_struct(Listing)2794_storage"},"t_struct(Listing)2794_storage":{"encoding":"inplace","label":"struct NftMarketplace.Listing","members":[{"astId":2791,"contract":"contracts/Nftmarketplace.sol:NftMarketplace","label":"price","offset":0,"slot":"0","type":"t_uint256"},{"astId":2793,"contract":"contracts/Nftmarketplace.sol:NftMarketplace","label":"seller","offset":0,"slot":"1","type":"t_address"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/test/BasicNft.sol":{"BasicNft":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"DogMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"TOKEN_URI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_127":{"entryPoint":null,"id":127,"parameterSlots":2,"returnSlots":0},"@_3239":{"entryPoint":null,"id":3239,"parameterSlots":0,"returnSlots":0},"array_dataslot_t_string_storage":{"entryPoint":326,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":172,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":623,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":458,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":588,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":478,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":764,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":347,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":277,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":736,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":706,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":230,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":183,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":512,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":363,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":693,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":564,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":559,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:5231:14","nodeType":"YulBlock","src":"0:5231:14","statements":[{"body":{"nativeSrc":"66:40:14","nodeType":"YulBlock","src":"66:40:14","statements":[{"nativeSrc":"77:22:14","nodeType":"YulAssignment","src":"77:22:14","value":{"arguments":[{"name":"value","nativeSrc":"93:5:14","nodeType":"YulIdentifier","src":"93:5:14"}],"functionName":{"name":"mload","nativeSrc":"87:5:14","nodeType":"YulIdentifier","src":"87:5:14"},"nativeSrc":"87:12:14","nodeType":"YulFunctionCall","src":"87:12:14"},"variableNames":[{"name":"length","nativeSrc":"77:6:14","nodeType":"YulIdentifier","src":"77:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:14","nodeType":"YulTypedName","src":"49:5:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:14","nodeType":"YulTypedName","src":"59:6:14","type":""}],"src":"7:99:14"},{"body":{"nativeSrc":"140:152:14","nodeType":"YulBlock","src":"140:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"157:1:14","nodeType":"YulLiteral","src":"157:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"160:77:14","nodeType":"YulLiteral","src":"160:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"150:6:14","nodeType":"YulIdentifier","src":"150:6:14"},"nativeSrc":"150:88:14","nodeType":"YulFunctionCall","src":"150:88:14"},"nativeSrc":"150:88:14","nodeType":"YulExpressionStatement","src":"150:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"254:1:14","nodeType":"YulLiteral","src":"254:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"257:4:14","nodeType":"YulLiteral","src":"257:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"247:6:14","nodeType":"YulIdentifier","src":"247:6:14"},"nativeSrc":"247:15:14","nodeType":"YulFunctionCall","src":"247:15:14"},"nativeSrc":"247:15:14","nodeType":"YulExpressionStatement","src":"247:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"278:1:14","nodeType":"YulLiteral","src":"278:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"281:4:14","nodeType":"YulLiteral","src":"281:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"271:6:14","nodeType":"YulIdentifier","src":"271:6:14"},"nativeSrc":"271:15:14","nodeType":"YulFunctionCall","src":"271:15:14"},"nativeSrc":"271:15:14","nodeType":"YulExpressionStatement","src":"271:15:14"}]},"name":"panic_error_0x41","nativeSrc":"112:180:14","nodeType":"YulFunctionDefinition","src":"112:180:14"},{"body":{"nativeSrc":"326:152:14","nodeType":"YulBlock","src":"326:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:14","nodeType":"YulLiteral","src":"343:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"346:77:14","nodeType":"YulLiteral","src":"346:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"336:6:14","nodeType":"YulIdentifier","src":"336:6:14"},"nativeSrc":"336:88:14","nodeType":"YulFunctionCall","src":"336:88:14"},"nativeSrc":"336:88:14","nodeType":"YulExpressionStatement","src":"336:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:14","nodeType":"YulLiteral","src":"440:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"443:4:14","nodeType":"YulLiteral","src":"443:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"433:6:14","nodeType":"YulIdentifier","src":"433:6:14"},"nativeSrc":"433:15:14","nodeType":"YulFunctionCall","src":"433:15:14"},"nativeSrc":"433:15:14","nodeType":"YulExpressionStatement","src":"433:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"464:1:14","nodeType":"YulLiteral","src":"464:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"467:4:14","nodeType":"YulLiteral","src":"467:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"457:6:14","nodeType":"YulIdentifier","src":"457:6:14"},"nativeSrc":"457:15:14","nodeType":"YulFunctionCall","src":"457:15:14"},"nativeSrc":"457:15:14","nodeType":"YulExpressionStatement","src":"457:15:14"}]},"name":"panic_error_0x22","nativeSrc":"298:180:14","nodeType":"YulFunctionDefinition","src":"298:180:14"},{"body":{"nativeSrc":"535:269:14","nodeType":"YulBlock","src":"535:269:14","statements":[{"nativeSrc":"545:22:14","nodeType":"YulAssignment","src":"545:22:14","value":{"arguments":[{"name":"data","nativeSrc":"559:4:14","nodeType":"YulIdentifier","src":"559:4:14"},{"kind":"number","nativeSrc":"565:1:14","nodeType":"YulLiteral","src":"565:1:14","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"555:3:14","nodeType":"YulIdentifier","src":"555:3:14"},"nativeSrc":"555:12:14","nodeType":"YulFunctionCall","src":"555:12:14"},"variableNames":[{"name":"length","nativeSrc":"545:6:14","nodeType":"YulIdentifier","src":"545:6:14"}]},{"nativeSrc":"576:38:14","nodeType":"YulVariableDeclaration","src":"576:38:14","value":{"arguments":[{"name":"data","nativeSrc":"606:4:14","nodeType":"YulIdentifier","src":"606:4:14"},{"kind":"number","nativeSrc":"612:1:14","nodeType":"YulLiteral","src":"612:1:14","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"602:3:14","nodeType":"YulIdentifier","src":"602:3:14"},"nativeSrc":"602:12:14","nodeType":"YulFunctionCall","src":"602:12:14"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"580:18:14","nodeType":"YulTypedName","src":"580:18:14","type":""}]},{"body":{"nativeSrc":"653:51:14","nodeType":"YulBlock","src":"653:51:14","statements":[{"nativeSrc":"667:27:14","nodeType":"YulAssignment","src":"667:27:14","value":{"arguments":[{"name":"length","nativeSrc":"681:6:14","nodeType":"YulIdentifier","src":"681:6:14"},{"kind":"number","nativeSrc":"689:4:14","nodeType":"YulLiteral","src":"689:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"677:3:14","nodeType":"YulIdentifier","src":"677:3:14"},"nativeSrc":"677:17:14","nodeType":"YulFunctionCall","src":"677:17:14"},"variableNames":[{"name":"length","nativeSrc":"667:6:14","nodeType":"YulIdentifier","src":"667:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"633:18:14","nodeType":"YulIdentifier","src":"633:18:14"}],"functionName":{"name":"iszero","nativeSrc":"626:6:14","nodeType":"YulIdentifier","src":"626:6:14"},"nativeSrc":"626:26:14","nodeType":"YulFunctionCall","src":"626:26:14"},"nativeSrc":"623:81:14","nodeType":"YulIf","src":"623:81:14"},{"body":{"nativeSrc":"756:42:14","nodeType":"YulBlock","src":"756:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"770:16:14","nodeType":"YulIdentifier","src":"770:16:14"},"nativeSrc":"770:18:14","nodeType":"YulFunctionCall","src":"770:18:14"},"nativeSrc":"770:18:14","nodeType":"YulExpressionStatement","src":"770:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"720:18:14","nodeType":"YulIdentifier","src":"720:18:14"},{"arguments":[{"name":"length","nativeSrc":"743:6:14","nodeType":"YulIdentifier","src":"743:6:14"},{"kind":"number","nativeSrc":"751:2:14","nodeType":"YulLiteral","src":"751:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"740:2:14","nodeType":"YulIdentifier","src":"740:2:14"},"nativeSrc":"740:14:14","nodeType":"YulFunctionCall","src":"740:14:14"}],"functionName":{"name":"eq","nativeSrc":"717:2:14","nodeType":"YulIdentifier","src":"717:2:14"},"nativeSrc":"717:38:14","nodeType":"YulFunctionCall","src":"717:38:14"},"nativeSrc":"714:84:14","nodeType":"YulIf","src":"714:84:14"}]},"name":"extract_byte_array_length","nativeSrc":"484:320:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"519:4:14","nodeType":"YulTypedName","src":"519:4:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"528:6:14","nodeType":"YulTypedName","src":"528:6:14","type":""}],"src":"484:320:14"},{"body":{"nativeSrc":"864:87:14","nodeType":"YulBlock","src":"864:87:14","statements":[{"nativeSrc":"874:11:14","nodeType":"YulAssignment","src":"874:11:14","value":{"name":"ptr","nativeSrc":"882:3:14","nodeType":"YulIdentifier","src":"882:3:14"},"variableNames":[{"name":"data","nativeSrc":"874:4:14","nodeType":"YulIdentifier","src":"874:4:14"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"902:1:14","nodeType":"YulLiteral","src":"902:1:14","type":"","value":"0"},{"name":"ptr","nativeSrc":"905:3:14","nodeType":"YulIdentifier","src":"905:3:14"}],"functionName":{"name":"mstore","nativeSrc":"895:6:14","nodeType":"YulIdentifier","src":"895:6:14"},"nativeSrc":"895:14:14","nodeType":"YulFunctionCall","src":"895:14:14"},"nativeSrc":"895:14:14","nodeType":"YulExpressionStatement","src":"895:14:14"},{"nativeSrc":"918:26:14","nodeType":"YulAssignment","src":"918:26:14","value":{"arguments":[{"kind":"number","nativeSrc":"936:1:14","nodeType":"YulLiteral","src":"936:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"939:4:14","nodeType":"YulLiteral","src":"939:4:14","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"926:9:14","nodeType":"YulIdentifier","src":"926:9:14"},"nativeSrc":"926:18:14","nodeType":"YulFunctionCall","src":"926:18:14"},"variableNames":[{"name":"data","nativeSrc":"918:4:14","nodeType":"YulIdentifier","src":"918:4:14"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"810:141:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"851:3:14","nodeType":"YulTypedName","src":"851:3:14","type":""}],"returnVariables":[{"name":"data","nativeSrc":"859:4:14","nodeType":"YulTypedName","src":"859:4:14","type":""}],"src":"810:141:14"},{"body":{"nativeSrc":"1001:49:14","nodeType":"YulBlock","src":"1001:49:14","statements":[{"nativeSrc":"1011:33:14","nodeType":"YulAssignment","src":"1011:33:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1029:5:14","nodeType":"YulIdentifier","src":"1029:5:14"},{"kind":"number","nativeSrc":"1036:2:14","nodeType":"YulLiteral","src":"1036:2:14","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1025:3:14","nodeType":"YulIdentifier","src":"1025:3:14"},"nativeSrc":"1025:14:14","nodeType":"YulFunctionCall","src":"1025:14:14"},{"kind":"number","nativeSrc":"1041:2:14","nodeType":"YulLiteral","src":"1041:2:14","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"1021:3:14","nodeType":"YulIdentifier","src":"1021:3:14"},"nativeSrc":"1021:23:14","nodeType":"YulFunctionCall","src":"1021:23:14"},"variableNames":[{"name":"result","nativeSrc":"1011:6:14","nodeType":"YulIdentifier","src":"1011:6:14"}]}]},"name":"divide_by_32_ceil","nativeSrc":"957:93:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"984:5:14","nodeType":"YulTypedName","src":"984:5:14","type":""}],"returnVariables":[{"name":"result","nativeSrc":"994:6:14","nodeType":"YulTypedName","src":"994:6:14","type":""}],"src":"957:93:14"},{"body":{"nativeSrc":"1109:54:14","nodeType":"YulBlock","src":"1109:54:14","statements":[{"nativeSrc":"1119:37:14","nodeType":"YulAssignment","src":"1119:37:14","value":{"arguments":[{"name":"bits","nativeSrc":"1144:4:14","nodeType":"YulIdentifier","src":"1144:4:14"},{"name":"value","nativeSrc":"1150:5:14","nodeType":"YulIdentifier","src":"1150:5:14"}],"functionName":{"name":"shl","nativeSrc":"1140:3:14","nodeType":"YulIdentifier","src":"1140:3:14"},"nativeSrc":"1140:16:14","nodeType":"YulFunctionCall","src":"1140:16:14"},"variableNames":[{"name":"newValue","nativeSrc":"1119:8:14","nodeType":"YulIdentifier","src":"1119:8:14"}]}]},"name":"shift_left_dynamic","nativeSrc":"1056:107:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"1084:4:14","nodeType":"YulTypedName","src":"1084:4:14","type":""},{"name":"value","nativeSrc":"1090:5:14","nodeType":"YulTypedName","src":"1090:5:14","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"1100:8:14","nodeType":"YulTypedName","src":"1100:8:14","type":""}],"src":"1056:107:14"},{"body":{"nativeSrc":"1245:317:14","nodeType":"YulBlock","src":"1245:317:14","statements":[{"nativeSrc":"1255:35:14","nodeType":"YulVariableDeclaration","src":"1255:35:14","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"1276:10:14","nodeType":"YulIdentifier","src":"1276:10:14"},{"kind":"number","nativeSrc":"1288:1:14","nodeType":"YulLiteral","src":"1288:1:14","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"1272:3:14","nodeType":"YulIdentifier","src":"1272:3:14"},"nativeSrc":"1272:18:14","nodeType":"YulFunctionCall","src":"1272:18:14"},"variables":[{"name":"shiftBits","nativeSrc":"1259:9:14","nodeType":"YulTypedName","src":"1259:9:14","type":""}]},{"nativeSrc":"1299:109:14","nodeType":"YulVariableDeclaration","src":"1299:109:14","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1330:9:14","nodeType":"YulIdentifier","src":"1330:9:14"},{"kind":"number","nativeSrc":"1341:66:14","nodeType":"YulLiteral","src":"1341:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1311:18:14","nodeType":"YulIdentifier","src":"1311:18:14"},"nativeSrc":"1311:97:14","nodeType":"YulFunctionCall","src":"1311:97:14"},"variables":[{"name":"mask","nativeSrc":"1303:4:14","nodeType":"YulTypedName","src":"1303:4:14","type":""}]},{"nativeSrc":"1417:51:14","nodeType":"YulAssignment","src":"1417:51:14","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1448:9:14","nodeType":"YulIdentifier","src":"1448:9:14"},{"name":"toInsert","nativeSrc":"1459:8:14","nodeType":"YulIdentifier","src":"1459:8:14"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1429:18:14","nodeType":"YulIdentifier","src":"1429:18:14"},"nativeSrc":"1429:39:14","nodeType":"YulFunctionCall","src":"1429:39:14"},"variableNames":[{"name":"toInsert","nativeSrc":"1417:8:14","nodeType":"YulIdentifier","src":"1417:8:14"}]},{"nativeSrc":"1477:30:14","nodeType":"YulAssignment","src":"1477:30:14","value":{"arguments":[{"name":"value","nativeSrc":"1490:5:14","nodeType":"YulIdentifier","src":"1490:5:14"},{"arguments":[{"name":"mask","nativeSrc":"1501:4:14","nodeType":"YulIdentifier","src":"1501:4:14"}],"functionName":{"name":"not","nativeSrc":"1497:3:14","nodeType":"YulIdentifier","src":"1497:3:14"},"nativeSrc":"1497:9:14","nodeType":"YulFunctionCall","src":"1497:9:14"}],"functionName":{"name":"and","nativeSrc":"1486:3:14","nodeType":"YulIdentifier","src":"1486:3:14"},"nativeSrc":"1486:21:14","nodeType":"YulFunctionCall","src":"1486:21:14"},"variableNames":[{"name":"value","nativeSrc":"1477:5:14","nodeType":"YulIdentifier","src":"1477:5:14"}]},{"nativeSrc":"1516:40:14","nodeType":"YulAssignment","src":"1516:40:14","value":{"arguments":[{"name":"value","nativeSrc":"1529:5:14","nodeType":"YulIdentifier","src":"1529:5:14"},{"arguments":[{"name":"toInsert","nativeSrc":"1540:8:14","nodeType":"YulIdentifier","src":"1540:8:14"},{"name":"mask","nativeSrc":"1550:4:14","nodeType":"YulIdentifier","src":"1550:4:14"}],"functionName":{"name":"and","nativeSrc":"1536:3:14","nodeType":"YulIdentifier","src":"1536:3:14"},"nativeSrc":"1536:19:14","nodeType":"YulFunctionCall","src":"1536:19:14"}],"functionName":{"name":"or","nativeSrc":"1526:2:14","nodeType":"YulIdentifier","src":"1526:2:14"},"nativeSrc":"1526:30:14","nodeType":"YulFunctionCall","src":"1526:30:14"},"variableNames":[{"name":"result","nativeSrc":"1516:6:14","nodeType":"YulIdentifier","src":"1516:6:14"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"1169:393:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1206:5:14","nodeType":"YulTypedName","src":"1206:5:14","type":""},{"name":"shiftBytes","nativeSrc":"1213:10:14","nodeType":"YulTypedName","src":"1213:10:14","type":""},{"name":"toInsert","nativeSrc":"1225:8:14","nodeType":"YulTypedName","src":"1225:8:14","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1238:6:14","nodeType":"YulTypedName","src":"1238:6:14","type":""}],"src":"1169:393:14"},{"body":{"nativeSrc":"1613:32:14","nodeType":"YulBlock","src":"1613:32:14","statements":[{"nativeSrc":"1623:16:14","nodeType":"YulAssignment","src":"1623:16:14","value":{"name":"value","nativeSrc":"1634:5:14","nodeType":"YulIdentifier","src":"1634:5:14"},"variableNames":[{"name":"cleaned","nativeSrc":"1623:7:14","nodeType":"YulIdentifier","src":"1623:7:14"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1568:77:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1595:5:14","nodeType":"YulTypedName","src":"1595:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1605:7:14","nodeType":"YulTypedName","src":"1605:7:14","type":""}],"src":"1568:77:14"},{"body":{"nativeSrc":"1683:28:14","nodeType":"YulBlock","src":"1683:28:14","statements":[{"nativeSrc":"1693:12:14","nodeType":"YulAssignment","src":"1693:12:14","value":{"name":"value","nativeSrc":"1700:5:14","nodeType":"YulIdentifier","src":"1700:5:14"},"variableNames":[{"name":"ret","nativeSrc":"1693:3:14","nodeType":"YulIdentifier","src":"1693:3:14"}]}]},"name":"identity","nativeSrc":"1651:60:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1669:5:14","nodeType":"YulTypedName","src":"1669:5:14","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1679:3:14","nodeType":"YulTypedName","src":"1679:3:14","type":""}],"src":"1651:60:14"},{"body":{"nativeSrc":"1777:82:14","nodeType":"YulBlock","src":"1777:82:14","statements":[{"nativeSrc":"1787:66:14","nodeType":"YulAssignment","src":"1787:66:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1845:5:14","nodeType":"YulIdentifier","src":"1845:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1827:17:14","nodeType":"YulIdentifier","src":"1827:17:14"},"nativeSrc":"1827:24:14","nodeType":"YulFunctionCall","src":"1827:24:14"}],"functionName":{"name":"identity","nativeSrc":"1818:8:14","nodeType":"YulIdentifier","src":"1818:8:14"},"nativeSrc":"1818:34:14","nodeType":"YulFunctionCall","src":"1818:34:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1800:17:14","nodeType":"YulIdentifier","src":"1800:17:14"},"nativeSrc":"1800:53:14","nodeType":"YulFunctionCall","src":"1800:53:14"},"variableNames":[{"name":"converted","nativeSrc":"1787:9:14","nodeType":"YulIdentifier","src":"1787:9:14"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"1717:142:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1757:5:14","nodeType":"YulTypedName","src":"1757:5:14","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1767:9:14","nodeType":"YulTypedName","src":"1767:9:14","type":""}],"src":"1717:142:14"},{"body":{"nativeSrc":"1912:28:14","nodeType":"YulBlock","src":"1912:28:14","statements":[{"nativeSrc":"1922:12:14","nodeType":"YulAssignment","src":"1922:12:14","value":{"name":"value","nativeSrc":"1929:5:14","nodeType":"YulIdentifier","src":"1929:5:14"},"variableNames":[{"name":"ret","nativeSrc":"1922:3:14","nodeType":"YulIdentifier","src":"1922:3:14"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"1865:75:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1898:5:14","nodeType":"YulTypedName","src":"1898:5:14","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1908:3:14","nodeType":"YulTypedName","src":"1908:3:14","type":""}],"src":"1865:75:14"},{"body":{"nativeSrc":"2022:193:14","nodeType":"YulBlock","src":"2022:193:14","statements":[{"nativeSrc":"2032:63:14","nodeType":"YulVariableDeclaration","src":"2032:63:14","value":{"arguments":[{"name":"value_0","nativeSrc":"2087:7:14","nodeType":"YulIdentifier","src":"2087:7:14"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2056:30:14","nodeType":"YulIdentifier","src":"2056:30:14"},"nativeSrc":"2056:39:14","nodeType":"YulFunctionCall","src":"2056:39:14"},"variables":[{"name":"convertedValue_0","nativeSrc":"2036:16:14","nodeType":"YulTypedName","src":"2036:16:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2111:4:14","nodeType":"YulIdentifier","src":"2111:4:14"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2151:4:14","nodeType":"YulIdentifier","src":"2151:4:14"}],"functionName":{"name":"sload","nativeSrc":"2145:5:14","nodeType":"YulIdentifier","src":"2145:5:14"},"nativeSrc":"2145:11:14","nodeType":"YulFunctionCall","src":"2145:11:14"},{"name":"offset","nativeSrc":"2158:6:14","nodeType":"YulIdentifier","src":"2158:6:14"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"2190:16:14","nodeType":"YulIdentifier","src":"2190:16:14"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"2166:23:14","nodeType":"YulIdentifier","src":"2166:23:14"},"nativeSrc":"2166:41:14","nodeType":"YulFunctionCall","src":"2166:41:14"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"2117:27:14","nodeType":"YulIdentifier","src":"2117:27:14"},"nativeSrc":"2117:91:14","nodeType":"YulFunctionCall","src":"2117:91:14"}],"functionName":{"name":"sstore","nativeSrc":"2104:6:14","nodeType":"YulIdentifier","src":"2104:6:14"},"nativeSrc":"2104:105:14","nodeType":"YulFunctionCall","src":"2104:105:14"},"nativeSrc":"2104:105:14","nodeType":"YulExpressionStatement","src":"2104:105:14"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"1946:269:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1999:4:14","nodeType":"YulTypedName","src":"1999:4:14","type":""},{"name":"offset","nativeSrc":"2005:6:14","nodeType":"YulTypedName","src":"2005:6:14","type":""},{"name":"value_0","nativeSrc":"2013:7:14","nodeType":"YulTypedName","src":"2013:7:14","type":""}],"src":"1946:269:14"},{"body":{"nativeSrc":"2270:24:14","nodeType":"YulBlock","src":"2270:24:14","statements":[{"nativeSrc":"2280:8:14","nodeType":"YulAssignment","src":"2280:8:14","value":{"kind":"number","nativeSrc":"2287:1:14","nodeType":"YulLiteral","src":"2287:1:14","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"2280:3:14","nodeType":"YulIdentifier","src":"2280:3:14"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"2221:73:14","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"2266:3:14","nodeType":"YulTypedName","src":"2266:3:14","type":""}],"src":"2221:73:14"},{"body":{"nativeSrc":"2353:136:14","nodeType":"YulBlock","src":"2353:136:14","statements":[{"nativeSrc":"2363:46:14","nodeType":"YulVariableDeclaration","src":"2363:46:14","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"2377:30:14","nodeType":"YulIdentifier","src":"2377:30:14"},"nativeSrc":"2377:32:14","nodeType":"YulFunctionCall","src":"2377:32:14"},"variables":[{"name":"zero_0","nativeSrc":"2367:6:14","nodeType":"YulTypedName","src":"2367:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2462:4:14","nodeType":"YulIdentifier","src":"2462:4:14"},{"name":"offset","nativeSrc":"2468:6:14","nodeType":"YulIdentifier","src":"2468:6:14"},{"name":"zero_0","nativeSrc":"2476:6:14","nodeType":"YulIdentifier","src":"2476:6:14"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2418:43:14","nodeType":"YulIdentifier","src":"2418:43:14"},"nativeSrc":"2418:65:14","nodeType":"YulFunctionCall","src":"2418:65:14"},"nativeSrc":"2418:65:14","nodeType":"YulExpressionStatement","src":"2418:65:14"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"2300:189:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2339:4:14","nodeType":"YulTypedName","src":"2339:4:14","type":""},{"name":"offset","nativeSrc":"2345:6:14","nodeType":"YulTypedName","src":"2345:6:14","type":""}],"src":"2300:189:14"},{"body":{"nativeSrc":"2545:136:14","nodeType":"YulBlock","src":"2545:136:14","statements":[{"body":{"nativeSrc":"2612:63:14","nodeType":"YulBlock","src":"2612:63:14","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2656:5:14","nodeType":"YulIdentifier","src":"2656:5:14"},{"kind":"number","nativeSrc":"2663:1:14","nodeType":"YulLiteral","src":"2663:1:14","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"2626:29:14","nodeType":"YulIdentifier","src":"2626:29:14"},"nativeSrc":"2626:39:14","nodeType":"YulFunctionCall","src":"2626:39:14"},"nativeSrc":"2626:39:14","nodeType":"YulExpressionStatement","src":"2626:39:14"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2565:5:14","nodeType":"YulIdentifier","src":"2565:5:14"},{"name":"end","nativeSrc":"2572:3:14","nodeType":"YulIdentifier","src":"2572:3:14"}],"functionName":{"name":"lt","nativeSrc":"2562:2:14","nodeType":"YulIdentifier","src":"2562:2:14"},"nativeSrc":"2562:14:14","nodeType":"YulFunctionCall","src":"2562:14:14"},"nativeSrc":"2555:120:14","nodeType":"YulForLoop","post":{"nativeSrc":"2577:26:14","nodeType":"YulBlock","src":"2577:26:14","statements":[{"nativeSrc":"2579:22:14","nodeType":"YulAssignment","src":"2579:22:14","value":{"arguments":[{"name":"start","nativeSrc":"2592:5:14","nodeType":"YulIdentifier","src":"2592:5:14"},{"kind":"number","nativeSrc":"2599:1:14","nodeType":"YulLiteral","src":"2599:1:14","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2588:3:14","nodeType":"YulIdentifier","src":"2588:3:14"},"nativeSrc":"2588:13:14","nodeType":"YulFunctionCall","src":"2588:13:14"},"variableNames":[{"name":"start","nativeSrc":"2579:5:14","nodeType":"YulIdentifier","src":"2579:5:14"}]}]},"pre":{"nativeSrc":"2559:2:14","nodeType":"YulBlock","src":"2559:2:14","statements":[]},"src":"2555:120:14"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"2495:186:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"2533:5:14","nodeType":"YulTypedName","src":"2533:5:14","type":""},{"name":"end","nativeSrc":"2540:3:14","nodeType":"YulTypedName","src":"2540:3:14","type":""}],"src":"2495:186:14"},{"body":{"nativeSrc":"2766:464:14","nodeType":"YulBlock","src":"2766:464:14","statements":[{"body":{"nativeSrc":"2792:431:14","nodeType":"YulBlock","src":"2792:431:14","statements":[{"nativeSrc":"2806:54:14","nodeType":"YulVariableDeclaration","src":"2806:54:14","value":{"arguments":[{"name":"array","nativeSrc":"2854:5:14","nodeType":"YulIdentifier","src":"2854:5:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"2822:31:14","nodeType":"YulIdentifier","src":"2822:31:14"},"nativeSrc":"2822:38:14","nodeType":"YulFunctionCall","src":"2822:38:14"},"variables":[{"name":"dataArea","nativeSrc":"2810:8:14","nodeType":"YulTypedName","src":"2810:8:14","type":""}]},{"nativeSrc":"2873:63:14","nodeType":"YulVariableDeclaration","src":"2873:63:14","value":{"arguments":[{"name":"dataArea","nativeSrc":"2896:8:14","nodeType":"YulIdentifier","src":"2896:8:14"},{"arguments":[{"name":"startIndex","nativeSrc":"2924:10:14","nodeType":"YulIdentifier","src":"2924:10:14"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"2906:17:14","nodeType":"YulIdentifier","src":"2906:17:14"},"nativeSrc":"2906:29:14","nodeType":"YulFunctionCall","src":"2906:29:14"}],"functionName":{"name":"add","nativeSrc":"2892:3:14","nodeType":"YulIdentifier","src":"2892:3:14"},"nativeSrc":"2892:44:14","nodeType":"YulFunctionCall","src":"2892:44:14"},"variables":[{"name":"deleteStart","nativeSrc":"2877:11:14","nodeType":"YulTypedName","src":"2877:11:14","type":""}]},{"body":{"nativeSrc":"3093:27:14","nodeType":"YulBlock","src":"3093:27:14","statements":[{"nativeSrc":"3095:23:14","nodeType":"YulAssignment","src":"3095:23:14","value":{"name":"dataArea","nativeSrc":"3110:8:14","nodeType":"YulIdentifier","src":"3110:8:14"},"variableNames":[{"name":"deleteStart","nativeSrc":"3095:11:14","nodeType":"YulIdentifier","src":"3095:11:14"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3077:10:14","nodeType":"YulIdentifier","src":"3077:10:14"},{"kind":"number","nativeSrc":"3089:2:14","nodeType":"YulLiteral","src":"3089:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3074:2:14","nodeType":"YulIdentifier","src":"3074:2:14"},"nativeSrc":"3074:18:14","nodeType":"YulFunctionCall","src":"3074:18:14"},"nativeSrc":"3071:49:14","nodeType":"YulIf","src":"3071:49:14"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"3162:11:14","nodeType":"YulIdentifier","src":"3162:11:14"},{"arguments":[{"name":"dataArea","nativeSrc":"3179:8:14","nodeType":"YulIdentifier","src":"3179:8:14"},{"arguments":[{"name":"len","nativeSrc":"3207:3:14","nodeType":"YulIdentifier","src":"3207:3:14"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3189:17:14","nodeType":"YulIdentifier","src":"3189:17:14"},"nativeSrc":"3189:22:14","nodeType":"YulFunctionCall","src":"3189:22:14"}],"functionName":{"name":"add","nativeSrc":"3175:3:14","nodeType":"YulIdentifier","src":"3175:3:14"},"nativeSrc":"3175:37:14","nodeType":"YulFunctionCall","src":"3175:37:14"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"3133:28:14","nodeType":"YulIdentifier","src":"3133:28:14"},"nativeSrc":"3133:80:14","nodeType":"YulFunctionCall","src":"3133:80:14"},"nativeSrc":"3133:80:14","nodeType":"YulExpressionStatement","src":"3133:80:14"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2783:3:14","nodeType":"YulIdentifier","src":"2783:3:14"},{"kind":"number","nativeSrc":"2788:2:14","nodeType":"YulLiteral","src":"2788:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2780:2:14","nodeType":"YulIdentifier","src":"2780:2:14"},"nativeSrc":"2780:11:14","nodeType":"YulFunctionCall","src":"2780:11:14"},"nativeSrc":"2777:446:14","nodeType":"YulIf","src":"2777:446:14"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"2687:543:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2742:5:14","nodeType":"YulTypedName","src":"2742:5:14","type":""},{"name":"len","nativeSrc":"2749:3:14","nodeType":"YulTypedName","src":"2749:3:14","type":""},{"name":"startIndex","nativeSrc":"2754:10:14","nodeType":"YulTypedName","src":"2754:10:14","type":""}],"src":"2687:543:14"},{"body":{"nativeSrc":"3299:54:14","nodeType":"YulBlock","src":"3299:54:14","statements":[{"nativeSrc":"3309:37:14","nodeType":"YulAssignment","src":"3309:37:14","value":{"arguments":[{"name":"bits","nativeSrc":"3334:4:14","nodeType":"YulIdentifier","src":"3334:4:14"},{"name":"value","nativeSrc":"3340:5:14","nodeType":"YulIdentifier","src":"3340:5:14"}],"functionName":{"name":"shr","nativeSrc":"3330:3:14","nodeType":"YulIdentifier","src":"3330:3:14"},"nativeSrc":"3330:16:14","nodeType":"YulFunctionCall","src":"3330:16:14"},"variableNames":[{"name":"newValue","nativeSrc":"3309:8:14","nodeType":"YulIdentifier","src":"3309:8:14"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"3236:117:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3274:4:14","nodeType":"YulTypedName","src":"3274:4:14","type":""},{"name":"value","nativeSrc":"3280:5:14","nodeType":"YulTypedName","src":"3280:5:14","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3290:8:14","nodeType":"YulTypedName","src":"3290:8:14","type":""}],"src":"3236:117:14"},{"body":{"nativeSrc":"3410:118:14","nodeType":"YulBlock","src":"3410:118:14","statements":[{"nativeSrc":"3420:68:14","nodeType":"YulVariableDeclaration","src":"3420:68:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3469:1:14","nodeType":"YulLiteral","src":"3469:1:14","type":"","value":"8"},{"name":"bytes","nativeSrc":"3472:5:14","nodeType":"YulIdentifier","src":"3472:5:14"}],"functionName":{"name":"mul","nativeSrc":"3465:3:14","nodeType":"YulIdentifier","src":"3465:3:14"},"nativeSrc":"3465:13:14","nodeType":"YulFunctionCall","src":"3465:13:14"},{"arguments":[{"kind":"number","nativeSrc":"3484:1:14","nodeType":"YulLiteral","src":"3484:1:14","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3480:3:14","nodeType":"YulIdentifier","src":"3480:3:14"},"nativeSrc":"3480:6:14","nodeType":"YulFunctionCall","src":"3480:6:14"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"3436:28:14","nodeType":"YulIdentifier","src":"3436:28:14"},"nativeSrc":"3436:51:14","nodeType":"YulFunctionCall","src":"3436:51:14"}],"functionName":{"name":"not","nativeSrc":"3432:3:14","nodeType":"YulIdentifier","src":"3432:3:14"},"nativeSrc":"3432:56:14","nodeType":"YulFunctionCall","src":"3432:56:14"},"variables":[{"name":"mask","nativeSrc":"3424:4:14","nodeType":"YulTypedName","src":"3424:4:14","type":""}]},{"nativeSrc":"3497:25:14","nodeType":"YulAssignment","src":"3497:25:14","value":{"arguments":[{"name":"data","nativeSrc":"3511:4:14","nodeType":"YulIdentifier","src":"3511:4:14"},{"name":"mask","nativeSrc":"3517:4:14","nodeType":"YulIdentifier","src":"3517:4:14"}],"functionName":{"name":"and","nativeSrc":"3507:3:14","nodeType":"YulIdentifier","src":"3507:3:14"},"nativeSrc":"3507:15:14","nodeType":"YulFunctionCall","src":"3507:15:14"},"variableNames":[{"name":"result","nativeSrc":"3497:6:14","nodeType":"YulIdentifier","src":"3497:6:14"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"3359:169:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3387:4:14","nodeType":"YulTypedName","src":"3387:4:14","type":""},{"name":"bytes","nativeSrc":"3393:5:14","nodeType":"YulTypedName","src":"3393:5:14","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3403:6:14","nodeType":"YulTypedName","src":"3403:6:14","type":""}],"src":"3359:169:14"},{"body":{"nativeSrc":"3614:214:14","nodeType":"YulBlock","src":"3614:214:14","statements":[{"nativeSrc":"3747:37:14","nodeType":"YulAssignment","src":"3747:37:14","value":{"arguments":[{"name":"data","nativeSrc":"3774:4:14","nodeType":"YulIdentifier","src":"3774:4:14"},{"name":"len","nativeSrc":"3780:3:14","nodeType":"YulIdentifier","src":"3780:3:14"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"3755:18:14","nodeType":"YulIdentifier","src":"3755:18:14"},"nativeSrc":"3755:29:14","nodeType":"YulFunctionCall","src":"3755:29:14"},"variableNames":[{"name":"data","nativeSrc":"3747:4:14","nodeType":"YulIdentifier","src":"3747:4:14"}]},{"nativeSrc":"3793:29:14","nodeType":"YulAssignment","src":"3793:29:14","value":{"arguments":[{"name":"data","nativeSrc":"3804:4:14","nodeType":"YulIdentifier","src":"3804:4:14"},{"arguments":[{"kind":"number","nativeSrc":"3814:1:14","nodeType":"YulLiteral","src":"3814:1:14","type":"","value":"2"},{"name":"len","nativeSrc":"3817:3:14","nodeType":"YulIdentifier","src":"3817:3:14"}],"functionName":{"name":"mul","nativeSrc":"3810:3:14","nodeType":"YulIdentifier","src":"3810:3:14"},"nativeSrc":"3810:11:14","nodeType":"YulFunctionCall","src":"3810:11:14"}],"functionName":{"name":"or","nativeSrc":"3801:2:14","nodeType":"YulIdentifier","src":"3801:2:14"},"nativeSrc":"3801:21:14","nodeType":"YulFunctionCall","src":"3801:21:14"},"variableNames":[{"name":"used","nativeSrc":"3793:4:14","nodeType":"YulIdentifier","src":"3793:4:14"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3533:295:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3595:4:14","nodeType":"YulTypedName","src":"3595:4:14","type":""},{"name":"len","nativeSrc":"3601:3:14","nodeType":"YulTypedName","src":"3601:3:14","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3609:4:14","nodeType":"YulTypedName","src":"3609:4:14","type":""}],"src":"3533:295:14"},{"body":{"nativeSrc":"3925:1303:14","nodeType":"YulBlock","src":"3925:1303:14","statements":[{"nativeSrc":"3936:51:14","nodeType":"YulVariableDeclaration","src":"3936:51:14","value":{"arguments":[{"name":"src","nativeSrc":"3983:3:14","nodeType":"YulIdentifier","src":"3983:3:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3950:32:14","nodeType":"YulIdentifier","src":"3950:32:14"},"nativeSrc":"3950:37:14","nodeType":"YulFunctionCall","src":"3950:37:14"},"variables":[{"name":"newLen","nativeSrc":"3940:6:14","nodeType":"YulTypedName","src":"3940:6:14","type":""}]},{"body":{"nativeSrc":"4072:22:14","nodeType":"YulBlock","src":"4072:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4074:16:14","nodeType":"YulIdentifier","src":"4074:16:14"},"nativeSrc":"4074:18:14","nodeType":"YulFunctionCall","src":"4074:18:14"},"nativeSrc":"4074:18:14","nodeType":"YulExpressionStatement","src":"4074:18:14"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4044:6:14","nodeType":"YulIdentifier","src":"4044:6:14"},{"kind":"number","nativeSrc":"4052:18:14","nodeType":"YulLiteral","src":"4052:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4041:2:14","nodeType":"YulIdentifier","src":"4041:2:14"},"nativeSrc":"4041:30:14","nodeType":"YulFunctionCall","src":"4041:30:14"},"nativeSrc":"4038:56:14","nodeType":"YulIf","src":"4038:56:14"},{"nativeSrc":"4104:52:14","nodeType":"YulVariableDeclaration","src":"4104:52:14","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4150:4:14","nodeType":"YulIdentifier","src":"4150:4:14"}],"functionName":{"name":"sload","nativeSrc":"4144:5:14","nodeType":"YulIdentifier","src":"4144:5:14"},"nativeSrc":"4144:11:14","nodeType":"YulFunctionCall","src":"4144:11:14"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4118:25:14","nodeType":"YulIdentifier","src":"4118:25:14"},"nativeSrc":"4118:38:14","nodeType":"YulFunctionCall","src":"4118:38:14"},"variables":[{"name":"oldLen","nativeSrc":"4108:6:14","nodeType":"YulTypedName","src":"4108:6:14","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4249:4:14","nodeType":"YulIdentifier","src":"4249:4:14"},{"name":"oldLen","nativeSrc":"4255:6:14","nodeType":"YulIdentifier","src":"4255:6:14"},{"name":"newLen","nativeSrc":"4263:6:14","nodeType":"YulIdentifier","src":"4263:6:14"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4203:45:14","nodeType":"YulIdentifier","src":"4203:45:14"},"nativeSrc":"4203:67:14","nodeType":"YulFunctionCall","src":"4203:67:14"},"nativeSrc":"4203:67:14","nodeType":"YulExpressionStatement","src":"4203:67:14"},{"nativeSrc":"4280:18:14","nodeType":"YulVariableDeclaration","src":"4280:18:14","value":{"kind":"number","nativeSrc":"4297:1:14","nodeType":"YulLiteral","src":"4297:1:14","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4284:9:14","nodeType":"YulTypedName","src":"4284:9:14","type":""}]},{"nativeSrc":"4308:17:14","nodeType":"YulAssignment","src":"4308:17:14","value":{"kind":"number","nativeSrc":"4321:4:14","nodeType":"YulLiteral","src":"4321:4:14","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4308:9:14","nodeType":"YulIdentifier","src":"4308:9:14"}]},{"cases":[{"body":{"nativeSrc":"4372:611:14","nodeType":"YulBlock","src":"4372:611:14","statements":[{"nativeSrc":"4386:37:14","nodeType":"YulVariableDeclaration","src":"4386:37:14","value":{"arguments":[{"name":"newLen","nativeSrc":"4405:6:14","nodeType":"YulIdentifier","src":"4405:6:14"},{"arguments":[{"kind":"number","nativeSrc":"4417:4:14","nodeType":"YulLiteral","src":"4417:4:14","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"4413:3:14","nodeType":"YulIdentifier","src":"4413:3:14"},"nativeSrc":"4413:9:14","nodeType":"YulFunctionCall","src":"4413:9:14"}],"functionName":{"name":"and","nativeSrc":"4401:3:14","nodeType":"YulIdentifier","src":"4401:3:14"},"nativeSrc":"4401:22:14","nodeType":"YulFunctionCall","src":"4401:22:14"},"variables":[{"name":"loopEnd","nativeSrc":"4390:7:14","nodeType":"YulTypedName","src":"4390:7:14","type":""}]},{"nativeSrc":"4437:51:14","nodeType":"YulVariableDeclaration","src":"4437:51:14","value":{"arguments":[{"name":"slot","nativeSrc":"4483:4:14","nodeType":"YulIdentifier","src":"4483:4:14"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4451:31:14","nodeType":"YulIdentifier","src":"4451:31:14"},"nativeSrc":"4451:37:14","nodeType":"YulFunctionCall","src":"4451:37:14"},"variables":[{"name":"dstPtr","nativeSrc":"4441:6:14","nodeType":"YulTypedName","src":"4441:6:14","type":""}]},{"nativeSrc":"4501:10:14","nodeType":"YulVariableDeclaration","src":"4501:10:14","value":{"kind":"number","nativeSrc":"4510:1:14","nodeType":"YulLiteral","src":"4510:1:14","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4505:1:14","nodeType":"YulTypedName","src":"4505:1:14","type":""}]},{"body":{"nativeSrc":"4569:163:14","nodeType":"YulBlock","src":"4569:163:14","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4594:6:14","nodeType":"YulIdentifier","src":"4594:6:14"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4612:3:14","nodeType":"YulIdentifier","src":"4612:3:14"},{"name":"srcOffset","nativeSrc":"4617:9:14","nodeType":"YulIdentifier","src":"4617:9:14"}],"functionName":{"name":"add","nativeSrc":"4608:3:14","nodeType":"YulIdentifier","src":"4608:3:14"},"nativeSrc":"4608:19:14","nodeType":"YulFunctionCall","src":"4608:19:14"}],"functionName":{"name":"mload","nativeSrc":"4602:5:14","nodeType":"YulIdentifier","src":"4602:5:14"},"nativeSrc":"4602:26:14","nodeType":"YulFunctionCall","src":"4602:26:14"}],"functionName":{"name":"sstore","nativeSrc":"4587:6:14","nodeType":"YulIdentifier","src":"4587:6:14"},"nativeSrc":"4587:42:14","nodeType":"YulFunctionCall","src":"4587:42:14"},"nativeSrc":"4587:42:14","nodeType":"YulExpressionStatement","src":"4587:42:14"},{"nativeSrc":"4646:24:14","nodeType":"YulAssignment","src":"4646:24:14","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4660:6:14","nodeType":"YulIdentifier","src":"4660:6:14"},{"kind":"number","nativeSrc":"4668:1:14","nodeType":"YulLiteral","src":"4668:1:14","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4656:3:14","nodeType":"YulIdentifier","src":"4656:3:14"},"nativeSrc":"4656:14:14","nodeType":"YulFunctionCall","src":"4656:14:14"},"variableNames":[{"name":"dstPtr","nativeSrc":"4646:6:14","nodeType":"YulIdentifier","src":"4646:6:14"}]},{"nativeSrc":"4687:31:14","nodeType":"YulAssignment","src":"4687:31:14","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4704:9:14","nodeType":"YulIdentifier","src":"4704:9:14"},{"kind":"number","nativeSrc":"4715:2:14","nodeType":"YulLiteral","src":"4715:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:14","nodeType":"YulIdentifier","src":"4700:3:14"},"nativeSrc":"4700:18:14","nodeType":"YulFunctionCall","src":"4700:18:14"},"variableNames":[{"name":"srcOffset","nativeSrc":"4687:9:14","nodeType":"YulIdentifier","src":"4687:9:14"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4535:1:14","nodeType":"YulIdentifier","src":"4535:1:14"},{"name":"loopEnd","nativeSrc":"4538:7:14","nodeType":"YulIdentifier","src":"4538:7:14"}],"functionName":{"name":"lt","nativeSrc":"4532:2:14","nodeType":"YulIdentifier","src":"4532:2:14"},"nativeSrc":"4532:14:14","nodeType":"YulFunctionCall","src":"4532:14:14"},"nativeSrc":"4524:208:14","nodeType":"YulForLoop","post":{"nativeSrc":"4547:21:14","nodeType":"YulBlock","src":"4547:21:14","statements":[{"nativeSrc":"4549:17:14","nodeType":"YulAssignment","src":"4549:17:14","value":{"arguments":[{"name":"i","nativeSrc":"4558:1:14","nodeType":"YulIdentifier","src":"4558:1:14"},{"kind":"number","nativeSrc":"4561:4:14","nodeType":"YulLiteral","src":"4561:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4554:3:14","nodeType":"YulIdentifier","src":"4554:3:14"},"nativeSrc":"4554:12:14","nodeType":"YulFunctionCall","src":"4554:12:14"},"variableNames":[{"name":"i","nativeSrc":"4549:1:14","nodeType":"YulIdentifier","src":"4549:1:14"}]}]},"pre":{"nativeSrc":"4528:3:14","nodeType":"YulBlock","src":"4528:3:14","statements":[]},"src":"4524:208:14"},{"body":{"nativeSrc":"4768:156:14","nodeType":"YulBlock","src":"4768:156:14","statements":[{"nativeSrc":"4786:43:14","nodeType":"YulVariableDeclaration","src":"4786:43:14","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4813:3:14","nodeType":"YulIdentifier","src":"4813:3:14"},{"name":"srcOffset","nativeSrc":"4818:9:14","nodeType":"YulIdentifier","src":"4818:9:14"}],"functionName":{"name":"add","nativeSrc":"4809:3:14","nodeType":"YulIdentifier","src":"4809:3:14"},"nativeSrc":"4809:19:14","nodeType":"YulFunctionCall","src":"4809:19:14"}],"functionName":{"name":"mload","nativeSrc":"4803:5:14","nodeType":"YulIdentifier","src":"4803:5:14"},"nativeSrc":"4803:26:14","nodeType":"YulFunctionCall","src":"4803:26:14"},"variables":[{"name":"lastValue","nativeSrc":"4790:9:14","nodeType":"YulTypedName","src":"4790:9:14","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4853:6:14","nodeType":"YulIdentifier","src":"4853:6:14"},{"arguments":[{"name":"lastValue","nativeSrc":"4880:9:14","nodeType":"YulIdentifier","src":"4880:9:14"},{"arguments":[{"name":"newLen","nativeSrc":"4895:6:14","nodeType":"YulIdentifier","src":"4895:6:14"},{"kind":"number","nativeSrc":"4903:4:14","nodeType":"YulLiteral","src":"4903:4:14","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"4891:3:14","nodeType":"YulIdentifier","src":"4891:3:14"},"nativeSrc":"4891:17:14","nodeType":"YulFunctionCall","src":"4891:17:14"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4861:18:14","nodeType":"YulIdentifier","src":"4861:18:14"},"nativeSrc":"4861:48:14","nodeType":"YulFunctionCall","src":"4861:48:14"}],"functionName":{"name":"sstore","nativeSrc":"4846:6:14","nodeType":"YulIdentifier","src":"4846:6:14"},"nativeSrc":"4846:64:14","nodeType":"YulFunctionCall","src":"4846:64:14"},"nativeSrc":"4846:64:14","nodeType":"YulExpressionStatement","src":"4846:64:14"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4751:7:14","nodeType":"YulIdentifier","src":"4751:7:14"},{"name":"newLen","nativeSrc":"4760:6:14","nodeType":"YulIdentifier","src":"4760:6:14"}],"functionName":{"name":"lt","nativeSrc":"4748:2:14","nodeType":"YulIdentifier","src":"4748:2:14"},"nativeSrc":"4748:19:14","nodeType":"YulFunctionCall","src":"4748:19:14"},"nativeSrc":"4745:179:14","nodeType":"YulIf","src":"4745:179:14"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4944:4:14","nodeType":"YulIdentifier","src":"4944:4:14"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"4958:6:14","nodeType":"YulIdentifier","src":"4958:6:14"},{"kind":"number","nativeSrc":"4966:1:14","nodeType":"YulLiteral","src":"4966:1:14","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"4954:3:14","nodeType":"YulIdentifier","src":"4954:3:14"},"nativeSrc":"4954:14:14","nodeType":"YulFunctionCall","src":"4954:14:14"},{"kind":"number","nativeSrc":"4970:1:14","nodeType":"YulLiteral","src":"4970:1:14","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4950:3:14","nodeType":"YulIdentifier","src":"4950:3:14"},"nativeSrc":"4950:22:14","nodeType":"YulFunctionCall","src":"4950:22:14"}],"functionName":{"name":"sstore","nativeSrc":"4937:6:14","nodeType":"YulIdentifier","src":"4937:6:14"},"nativeSrc":"4937:36:14","nodeType":"YulFunctionCall","src":"4937:36:14"},"nativeSrc":"4937:36:14","nodeType":"YulExpressionStatement","src":"4937:36:14"}]},"nativeSrc":"4365:618:14","nodeType":"YulCase","src":"4365:618:14","value":{"kind":"number","nativeSrc":"4370:1:14","nodeType":"YulLiteral","src":"4370:1:14","type":"","value":"1"}},{"body":{"nativeSrc":"5000:222:14","nodeType":"YulBlock","src":"5000:222:14","statements":[{"nativeSrc":"5014:14:14","nodeType":"YulVariableDeclaration","src":"5014:14:14","value":{"kind":"number","nativeSrc":"5027:1:14","nodeType":"YulLiteral","src":"5027:1:14","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5018:5:14","nodeType":"YulTypedName","src":"5018:5:14","type":""}]},{"body":{"nativeSrc":"5051:67:14","nodeType":"YulBlock","src":"5051:67:14","statements":[{"nativeSrc":"5069:35:14","nodeType":"YulAssignment","src":"5069:35:14","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5088:3:14","nodeType":"YulIdentifier","src":"5088:3:14"},{"name":"srcOffset","nativeSrc":"5093:9:14","nodeType":"YulIdentifier","src":"5093:9:14"}],"functionName":{"name":"add","nativeSrc":"5084:3:14","nodeType":"YulIdentifier","src":"5084:3:14"},"nativeSrc":"5084:19:14","nodeType":"YulFunctionCall","src":"5084:19:14"}],"functionName":{"name":"mload","nativeSrc":"5078:5:14","nodeType":"YulIdentifier","src":"5078:5:14"},"nativeSrc":"5078:26:14","nodeType":"YulFunctionCall","src":"5078:26:14"},"variableNames":[{"name":"value","nativeSrc":"5069:5:14","nodeType":"YulIdentifier","src":"5069:5:14"}]}]},"condition":{"name":"newLen","nativeSrc":"5044:6:14","nodeType":"YulIdentifier","src":"5044:6:14"},"nativeSrc":"5041:77:14","nodeType":"YulIf","src":"5041:77:14"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5138:4:14","nodeType":"YulIdentifier","src":"5138:4:14"},{"arguments":[{"name":"value","nativeSrc":"5197:5:14","nodeType":"YulIdentifier","src":"5197:5:14"},{"name":"newLen","nativeSrc":"5204:6:14","nodeType":"YulIdentifier","src":"5204:6:14"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5144:52:14","nodeType":"YulIdentifier","src":"5144:52:14"},"nativeSrc":"5144:67:14","nodeType":"YulFunctionCall","src":"5144:67:14"}],"functionName":{"name":"sstore","nativeSrc":"5131:6:14","nodeType":"YulIdentifier","src":"5131:6:14"},"nativeSrc":"5131:81:14","nodeType":"YulFunctionCall","src":"5131:81:14"},"nativeSrc":"5131:81:14","nodeType":"YulExpressionStatement","src":"5131:81:14"}]},"nativeSrc":"4992:230:14","nodeType":"YulCase","src":"4992:230:14","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4345:6:14","nodeType":"YulIdentifier","src":"4345:6:14"},{"kind":"number","nativeSrc":"4353:2:14","nodeType":"YulLiteral","src":"4353:2:14","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4342:2:14","nodeType":"YulIdentifier","src":"4342:2:14"},"nativeSrc":"4342:14:14","nodeType":"YulFunctionCall","src":"4342:14:14"},"nativeSrc":"4335:887:14","nodeType":"YulSwitch","src":"4335:887:14"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3833:1395:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3914:4:14","nodeType":"YulTypedName","src":"3914:4:14","type":""},{"name":"src","nativeSrc":"3920:3:14","nodeType":"YulTypedName","src":"3920:3:14","type":""}],"src":"3833:1395:14"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446F676965000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444F470000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x140 JUMPI PUSH2 0x13F PUSH2 0xE6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x16B JUMP JUMPDEST PUSH2 0x1B2 DUP7 DUP4 PUSH2 0x16B JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9 PUSH2 0x1F4 PUSH2 0x1EF DUP5 PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x1D4 JUMP JUMPDEST PUSH2 0x1CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213 DUP4 PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x227 PUSH2 0x21F DUP3 PUSH2 0x200 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x178 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x22F JUMP JUMPDEST PUSH2 0x247 DUP2 DUP5 DUP5 PUSH2 0x20A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH2 0x260 PUSH1 0x0 DUP3 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x281 DUP2 PUSH2 0x146 JUMP JUMPDEST PUSH2 0x28A DUP5 PUSH2 0x15B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x299 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2AD PUSH2 0x2A5 DUP6 PUSH2 0x15B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x24C JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D3 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2B5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC DUP4 DUP4 PUSH2 0x2C2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x305 DUP3 PUSH2 0xAC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31E JUMPI PUSH2 0x31D PUSH2 0xB7 JUMP JUMPDEST JUMPDEST PUSH2 0x328 DUP3 SLOAD PUSH2 0x115 JUMP JUMPDEST PUSH2 0x333 DUP3 DUP3 DUP6 PUSH2 0x26F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x354 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x35E DUP6 DUP3 PUSH2 0x2E0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x374 DUP7 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x39C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x377 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3B9 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3B5 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2C2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2404 DUP1 PUSH2 0x3DD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x303 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1900 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH2 0x879 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x8F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40E JUMPI POP PUSH2 0x40D DUP3 PUSH2 0xA41 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x472 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x480 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B2 DUP3 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55F SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x587 PUSH2 0xAF6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B6 JUMPI POP PUSH2 0x5B5 DUP2 PUSH2 0x5B0 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST JUMPDEST PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FF DUP4 DUP4 PUSH2 0xAFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x615 PUSH2 0x60F PUSH2 0xAF6 JUMP JUMPDEST DUP3 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64B SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65F DUP4 DUP4 DUP4 PUSH2 0xC4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x67F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x88F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x690 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2378 PUSH1 0x57 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7F6 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x822 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x86F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x844 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x86F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x852 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88B PUSH2 0x884 PUSH2 0xAF6 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF82 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0x89A PUSH2 0xAF6 JUMP JUMPDEST DUP4 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EB DUP5 DUP5 DUP5 DUP5 PUSH2 0x10EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8FD CALLER PUSH1 0x6 SLOAD PUSH2 0x114A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH32 0xEF1DA42F89C42F48BEFA143007E6F5EFD84A2D1CC3DC97C5EDD2D3373220F66D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x94E DUP3 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x98D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x984 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2378 PUSH1 0x57 SWAP2 CODECOPY SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB4 DUP2 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEA SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB71 DUP4 PUSH2 0x684 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBC3 DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC05 JUMPI POP PUSH2 0xC04 DUP2 DUP6 PUSH2 0x9AD JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC43 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC2B DUP5 PUSH2 0x4A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6C DUP3 PUSH2 0x684 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB9 SWAP1 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD28 SWAP1 PUSH2 0x209E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD3E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11A9 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5E DUP3 PUSH2 0x684 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAB SWAP1 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF40 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE7 SWAP1 PUSH2 0x210A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10F9 DUP5 DUP5 DUP5 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x1105 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x1144 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1164 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x133C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x118A DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1397 JUMP JUMPDEST ISZERO PUSH2 0x132F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11FF PUSH2 0xAF6 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1221 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x125D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x125A SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12DF JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CE SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1346 DUP4 DUP4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x1353 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x1392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1389 SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1429 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1420 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1432 DUP2 PUSH2 0x1168 JUMP JUMPDEST ISZERO PUSH2 0x1472 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1469 SWAP1 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1480 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x1489 DUP2 PUSH2 0x1168 JUMP JUMPDEST ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C0 SWAP1 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x15D3 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1620 DUP2 PUSH2 0x15EB JUMP JUMPDEST DUP2 EQ PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x163D DUP2 PUSH2 0x1617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1667 DUP5 DUP3 DUP6 ADD PUSH2 0x162E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1685 DUP2 PUSH2 0x1670 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x167C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16C5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1708 DUP3 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x1712 DUP2 DUP6 PUSH2 0x16B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1722 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x16EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1750 DUP2 DUP5 PUSH2 0x16FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x176B DUP2 PUSH2 0x1758 JUMP JUMPDEST DUP2 EQ PUSH2 0x1776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1788 DUP2 PUSH2 0x1762 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A4 JUMPI PUSH2 0x17A3 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B2 DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E6 DUP3 PUSH2 0x17BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F6 DUP2 PUSH2 0x17DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1811 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1820 DUP2 PUSH2 0x17DB JUMP JUMPDEST DUP2 EQ PUSH2 0x182B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183D DUP2 PUSH2 0x1817 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x185A JUMPI PUSH2 0x1859 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1879 DUP6 DUP3 DUP7 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x189C JUMPI PUSH2 0x189B PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18AA DUP7 DUP3 DUP8 ADD PUSH2 0x182E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18BB DUP7 DUP3 DUP8 ADD PUSH2 0x182E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18CC DUP7 DUP3 DUP8 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x18DF DUP2 PUSH2 0x1758 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1916 JUMPI PUSH2 0x1915 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1924 DUP5 DUP3 DUP6 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x1670 JUMP JUMPDEST DUP2 EQ PUSH2 0x1941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1953 DUP2 PUSH2 0x192D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x196F PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x197E DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x198F DUP6 DUP3 DUP7 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x19DB DUP3 PUSH2 0x16EC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19FA JUMPI PUSH2 0x19F9 PUSH2 0x19A3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0D PUSH2 0x15D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A19 DUP3 DUP3 PUSH2 0x19D2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A39 JUMPI PUSH2 0x1A38 PUSH2 0x19A3 JUMP JUMPDEST JUMPDEST PUSH2 0x1A42 DUP3 PUSH2 0x16EC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A71 PUSH2 0x1A6C DUP5 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x1A03 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A8D JUMPI PUSH2 0x1A8C PUSH2 0x199E JUMP JUMPDEST JUMPDEST PUSH2 0x1A98 DUP5 DUP3 DUP6 PUSH2 0x1A4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AB5 JUMPI PUSH2 0x1AB4 PUSH2 0x1999 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AC5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AE8 JUMPI PUSH2 0x1AE7 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF6 DUP8 DUP3 DUP9 ADD PUSH2 0x182E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B07 DUP8 DUP3 DUP9 ADD PUSH2 0x182E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B18 DUP8 DUP3 DUP9 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B39 JUMPI PUSH2 0x1B38 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1B45 DUP8 DUP3 DUP9 ADD PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B68 JUMPI PUSH2 0x1B67 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B76 DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B87 DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BD8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BEB JUMPI PUSH2 0x1BEA PUSH2 0x1B91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4D PUSH1 0x21 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C58 DUP3 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7C DUP2 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDF PUSH1 0x3D DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEA DUP3 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D0E DUP2 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D71 PUSH1 0x2D DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7C DUP3 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA0 DUP2 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDD PUSH1 0x18 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE8 DUP3 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E0C DUP2 PUSH2 0x1DD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6F PUSH1 0x29 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7A DUP3 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E9E DUP2 PUSH2 0x1E62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EDF DUP3 PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEA DUP4 PUSH2 0x1758 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F02 JUMPI PUSH2 0x1F01 PUSH2 0x1EA5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F64 PUSH1 0x2F DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F6F DUP3 PUSH2 0x1F08 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F93 DUP2 PUSH2 0x1F57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF6 PUSH1 0x25 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2001 DUP3 PUSH2 0x1F9A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2025 DUP2 PUSH2 0x1FE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2088 PUSH1 0x24 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2093 DUP3 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20B7 DUP2 PUSH2 0x207B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F4 PUSH1 0x19 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FF DUP3 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2123 DUP2 PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2186 PUSH1 0x32 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2191 DUP3 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B5 DUP2 PUSH2 0x2179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E3 DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x21ED DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x21FD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2206 DUP2 PUSH2 0x16EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2226 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x2233 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x2240 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18D6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2252 DUP2 DUP5 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x226C DUP2 PUSH2 0x1617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2288 JUMPI PUSH2 0x2287 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2296 DUP5 DUP3 DUP6 ADD PUSH2 0x225D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D5 PUSH1 0x20 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E0 DUP3 PUSH2 0x229F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2304 DUP2 PUSH2 0x22C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2341 PUSH1 0x1C DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x234C DUP3 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2370 DUP2 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH10 0x7066733A2F2F62616679 PUSH3 0x656967 CALLER CALLDATACOPY PUSH10 0x6F6972373673376D6735 PUSH16 0x6F6265746E636F6A636D336333687861 PUSH20 0x79643472766964346A71687934676B6168656734 0x2F EXTCODEHASH PUSH7 0x696C656E616D65 RETURNDATASIZE ADDRESS 0x2D POP SSTORE SELFBALANCE 0x2E PUSH11 0x736F6EA264697066735822 SLT KECCAK256 EXTCODESIZE 0xAB 0xAC 0xE0 0x24 SAR 0xB4 0x29 PUSH24 0x90998F1931EA3FB57827A6EF82E4BB27640A06F49FEE564 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"123:752:13:-:0;;;367:67;;;;;;;;;;1390:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;427:1:13::1;410:14;:18;;;;123:752:::0;;7:99:14;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;123:752:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@TOKEN_URI_3221":{"entryPoint":1995,"id":3221,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_975":{"entryPoint":4527,"id":975,"parameterSlots":4,"returnSlots":0},"@_approve_841":{"entryPoint":2814,"id":841,"parameterSlots":2,"returnSlots":0},"@_beforeTokenTransfer_962":{"entryPoint":4521,"id":962,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_949":{"entryPoint":4533,"id":949,"parameterSlots":4,"returnSlots":1},"@_exists_510":{"entryPoint":4456,"id":510,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_544":{"entryPoint":2999,"id":544,"parameterSlots":2,"returnSlots":1},"@_mint_665":{"entryPoint":5050,"id":665,"parameterSlots":2,"returnSlots":0},"@_msgSender_1494":{"entryPoint":2806,"id":1494,"parameterSlots":0,"returnSlots":1},"@_ownerOf_492":{"entryPoint":3909,"id":492,"parameterSlots":1,"returnSlots":1},"@_requireMinted_887":{"entryPoint":2731,"id":887,"parameterSlots":1,"returnSlots":0},"@_safeMint_559":{"entryPoint":4426,"id":559,"parameterSlots":2,"returnSlots":0},"@_safeMint_588":{"entryPoint":4924,"id":588,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_479":{"entryPoint":4334,"id":479,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_873":{"entryPoint":3970,"id":873,"parameterSlots":3,"returnSlots":0},"@_transfer_817":{"entryPoint":3148,"id":817,"parameterSlots":3,"returnSlots":0},"@approve_321":{"entryPoint":1261,"id":321,"parameterSlots":2,"returnSlots":0},"@balanceOf_182":{"entryPoint":1812,"id":182,"parameterSlots":1,"returnSlots":1},"@getApproved_339":{"entryPoint":1191,"id":339,"parameterSlots":1,"returnSlots":1},"@getTokenCounter_3285":{"entryPoint":1802,"id":3285,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_374":{"entryPoint":2477,"id":374,"parameterSlots":2,"returnSlots":1},"@isContract_1170":{"entryPoint":5015,"id":1170,"parameterSlots":1,"returnSlots":1},"@mintNft_3259":{"entryPoint":2289,"id":3259,"parameterSlots":0,"returnSlots":0},"@name_220":{"entryPoint":1045,"id":220,"parameterSlots":0,"returnSlots":1},"@ownerOf_210":{"entryPoint":1668,"id":210,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_420":{"entryPoint":1636,"id":420,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_450":{"entryPoint":2191,"id":450,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_356":{"entryPoint":2169,"id":356,"parameterSlots":2,"returnSlots":0},"@supportsInterface_158":{"entryPoint":819,"id":158,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1764":{"entryPoint":2625,"id":1764,"parameterSlots":1,"returnSlots":1},"@symbol_230":{"entryPoint":2023,"id":230,"parameterSlots":0,"returnSlots":1},"@tokenURI_3277":{"entryPoint":2371,"id":3277,"parameterSlots":1,"returnSlots":1},"@transferFrom_401":{"entryPoint":1540,"id":401,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6750,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6009,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6400,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6993,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6275,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6862,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6489,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6211,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8818,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6030,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6125,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5756,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8664,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7524,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":8169,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":9012,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":8315,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":8423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7778,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":8904,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack":{"entryPoint":8023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7632,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":7232,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7378,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6358,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6140,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8721,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5942,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7559,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8604,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8204,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9047,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8350,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8458,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7813,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8939,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7667,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7267,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7413,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6373,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6659,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5591,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6686,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8636,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5798,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8647,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5809,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7892,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6107,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5744,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5611,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6075,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5976,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6735,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5826,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7104,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6610,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":7845,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7057,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6563,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6553,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6558,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5606,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5601,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5868,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7445,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8490,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":8090,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":8971,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8236,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8382,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7699,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":8863,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb":{"entryPoint":7944,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7591,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":7153,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":7299,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6167,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6445,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5655,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5986,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:25363:14","nodeType":"YulBlock","src":"0:25363:14","statements":[{"body":{"nativeSrc":"47:35:14","nodeType":"YulBlock","src":"47:35:14","statements":[{"nativeSrc":"57:19:14","nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:14","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:14","nodeType":"YulIdentifier","src":"67:5:14"},"nativeSrc":"67:9:14","nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:14","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:14","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:14","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nativeSrc":"177:28:14","nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:14","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:14","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:14","nodeType":"YulIdentifier","src":"187:6:14"},"nativeSrc":"187:12:14","nodeType":"YulFunctionCall","src":"187:12:14"},"nativeSrc":"187:12:14","nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:14","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nativeSrc":"300:28:14","nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:14","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:14","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:14","nodeType":"YulIdentifier","src":"310:6:14"},"nativeSrc":"310:12:14","nodeType":"YulFunctionCall","src":"310:12:14"},"nativeSrc":"310:12:14","nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:14","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nativeSrc":"378:105:14","nodeType":"YulBlock","src":"378:105:14","statements":[{"nativeSrc":"388:89:14","nodeType":"YulAssignment","src":"388:89:14","value":{"arguments":[{"name":"value","nativeSrc":"403:5:14","nodeType":"YulIdentifier","src":"403:5:14"},{"kind":"number","nativeSrc":"410:66:14","nodeType":"YulLiteral","src":"410:66:14","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:14","nodeType":"YulIdentifier","src":"399:3:14"},"nativeSrc":"399:78:14","nodeType":"YulFunctionCall","src":"399:78:14"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:14","nodeType":"YulIdentifier","src":"388:7:14"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:14","nodeType":"YulTypedName","src":"360:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:14","nodeType":"YulTypedName","src":"370:7:14","type":""}],"src":"334:149:14"},{"body":{"nativeSrc":"531:78:14","nodeType":"YulBlock","src":"531:78:14","statements":[{"body":{"nativeSrc":"587:16:14","nodeType":"YulBlock","src":"587:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:14","nodeType":"YulLiteral","src":"596:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:14","nodeType":"YulLiteral","src":"599:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:14","nodeType":"YulIdentifier","src":"589:6:14"},"nativeSrc":"589:12:14","nodeType":"YulFunctionCall","src":"589:12:14"},"nativeSrc":"589:12:14","nodeType":"YulExpressionStatement","src":"589:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:14","nodeType":"YulIdentifier","src":"554:5:14"},{"arguments":[{"name":"value","nativeSrc":"578:5:14","nodeType":"YulIdentifier","src":"578:5:14"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:14","nodeType":"YulIdentifier","src":"561:16:14"},"nativeSrc":"561:23:14","nodeType":"YulFunctionCall","src":"561:23:14"}],"functionName":{"name":"eq","nativeSrc":"551:2:14","nodeType":"YulIdentifier","src":"551:2:14"},"nativeSrc":"551:34:14","nodeType":"YulFunctionCall","src":"551:34:14"}],"functionName":{"name":"iszero","nativeSrc":"544:6:14","nodeType":"YulIdentifier","src":"544:6:14"},"nativeSrc":"544:42:14","nodeType":"YulFunctionCall","src":"544:42:14"},"nativeSrc":"541:62:14","nodeType":"YulIf","src":"541:62:14"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:14","nodeType":"YulTypedName","src":"524:5:14","type":""}],"src":"489:120:14"},{"body":{"nativeSrc":"666:86:14","nodeType":"YulBlock","src":"666:86:14","statements":[{"nativeSrc":"676:29:14","nodeType":"YulAssignment","src":"676:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:14","nodeType":"YulIdentifier","src":"698:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:14","nodeType":"YulIdentifier","src":"685:12:14"},"nativeSrc":"685:20:14","nodeType":"YulFunctionCall","src":"685:20:14"},"variableNames":[{"name":"value","nativeSrc":"676:5:14","nodeType":"YulIdentifier","src":"676:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:14","nodeType":"YulIdentifier","src":"740:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:14","nodeType":"YulIdentifier","src":"714:25:14"},"nativeSrc":"714:32:14","nodeType":"YulFunctionCall","src":"714:32:14"},"nativeSrc":"714:32:14","nodeType":"YulExpressionStatement","src":"714:32:14"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:14","nodeType":"YulTypedName","src":"644:6:14","type":""},{"name":"end","nativeSrc":"652:3:14","nodeType":"YulTypedName","src":"652:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:14","nodeType":"YulTypedName","src":"660:5:14","type":""}],"src":"615:137:14"},{"body":{"nativeSrc":"823:262:14","nodeType":"YulBlock","src":"823:262:14","statements":[{"body":{"nativeSrc":"869:83:14","nodeType":"YulBlock","src":"869:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:14","nodeType":"YulIdentifier","src":"871:77:14"},"nativeSrc":"871:79:14","nodeType":"YulFunctionCall","src":"871:79:14"},"nativeSrc":"871:79:14","nodeType":"YulExpressionStatement","src":"871:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:14","nodeType":"YulIdentifier","src":"844:7:14"},{"name":"headStart","nativeSrc":"853:9:14","nodeType":"YulIdentifier","src":"853:9:14"}],"functionName":{"name":"sub","nativeSrc":"840:3:14","nodeType":"YulIdentifier","src":"840:3:14"},"nativeSrc":"840:23:14","nodeType":"YulFunctionCall","src":"840:23:14"},{"kind":"number","nativeSrc":"865:2:14","nodeType":"YulLiteral","src":"865:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:14","nodeType":"YulIdentifier","src":"836:3:14"},"nativeSrc":"836:32:14","nodeType":"YulFunctionCall","src":"836:32:14"},"nativeSrc":"833:119:14","nodeType":"YulIf","src":"833:119:14"},{"nativeSrc":"962:116:14","nodeType":"YulBlock","src":"962:116:14","statements":[{"nativeSrc":"977:15:14","nodeType":"YulVariableDeclaration","src":"977:15:14","value":{"kind":"number","nativeSrc":"991:1:14","nodeType":"YulLiteral","src":"991:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:14","nodeType":"YulTypedName","src":"981:6:14","type":""}]},{"nativeSrc":"1006:62:14","nodeType":"YulAssignment","src":"1006:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:14","nodeType":"YulIdentifier","src":"1040:9:14"},{"name":"offset","nativeSrc":"1051:6:14","nodeType":"YulIdentifier","src":"1051:6:14"}],"functionName":{"name":"add","nativeSrc":"1036:3:14","nodeType":"YulIdentifier","src":"1036:3:14"},"nativeSrc":"1036:22:14","nodeType":"YulFunctionCall","src":"1036:22:14"},{"name":"dataEnd","nativeSrc":"1060:7:14","nodeType":"YulIdentifier","src":"1060:7:14"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:14","nodeType":"YulIdentifier","src":"1016:19:14"},"nativeSrc":"1016:52:14","nodeType":"YulFunctionCall","src":"1016:52:14"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:14","nodeType":"YulIdentifier","src":"1006:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:14","nodeType":"YulTypedName","src":"793:9:14","type":""},{"name":"dataEnd","nativeSrc":"804:7:14","nodeType":"YulTypedName","src":"804:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:14","nodeType":"YulTypedName","src":"816:6:14","type":""}],"src":"758:327:14"},{"body":{"nativeSrc":"1133:48:14","nodeType":"YulBlock","src":"1133:48:14","statements":[{"nativeSrc":"1143:32:14","nodeType":"YulAssignment","src":"1143:32:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:14","nodeType":"YulIdentifier","src":"1168:5:14"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:14","nodeType":"YulIdentifier","src":"1161:6:14"},"nativeSrc":"1161:13:14","nodeType":"YulFunctionCall","src":"1161:13:14"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:14","nodeType":"YulIdentifier","src":"1154:6:14"},"nativeSrc":"1154:21:14","nodeType":"YulFunctionCall","src":"1154:21:14"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:14","nodeType":"YulIdentifier","src":"1143:7:14"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:14","nodeType":"YulTypedName","src":"1115:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:14","nodeType":"YulTypedName","src":"1125:7:14","type":""}],"src":"1091:90:14"},{"body":{"nativeSrc":"1246:50:14","nodeType":"YulBlock","src":"1246:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:14","nodeType":"YulIdentifier","src":"1263:3:14"},{"arguments":[{"name":"value","nativeSrc":"1283:5:14","nodeType":"YulIdentifier","src":"1283:5:14"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:14","nodeType":"YulIdentifier","src":"1268:14:14"},"nativeSrc":"1268:21:14","nodeType":"YulFunctionCall","src":"1268:21:14"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:14","nodeType":"YulIdentifier","src":"1256:6:14"},"nativeSrc":"1256:34:14","nodeType":"YulFunctionCall","src":"1256:34:14"},"nativeSrc":"1256:34:14","nodeType":"YulExpressionStatement","src":"1256:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:14","nodeType":"YulTypedName","src":"1234:5:14","type":""},{"name":"pos","nativeSrc":"1241:3:14","nodeType":"YulTypedName","src":"1241:3:14","type":""}],"src":"1187:109:14"},{"body":{"nativeSrc":"1394:118:14","nodeType":"YulBlock","src":"1394:118:14","statements":[{"nativeSrc":"1404:26:14","nodeType":"YulAssignment","src":"1404:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:14","nodeType":"YulIdentifier","src":"1416:9:14"},{"kind":"number","nativeSrc":"1427:2:14","nodeType":"YulLiteral","src":"1427:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:14","nodeType":"YulIdentifier","src":"1412:3:14"},"nativeSrc":"1412:18:14","nodeType":"YulFunctionCall","src":"1412:18:14"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:14","nodeType":"YulIdentifier","src":"1404:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:14","nodeType":"YulIdentifier","src":"1478:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:14","nodeType":"YulIdentifier","src":"1491:9:14"},{"kind":"number","nativeSrc":"1502:1:14","nodeType":"YulLiteral","src":"1502:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:14","nodeType":"YulIdentifier","src":"1487:3:14"},"nativeSrc":"1487:17:14","nodeType":"YulFunctionCall","src":"1487:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:14","nodeType":"YulIdentifier","src":"1440:37:14"},"nativeSrc":"1440:65:14","nodeType":"YulFunctionCall","src":"1440:65:14"},"nativeSrc":"1440:65:14","nodeType":"YulExpressionStatement","src":"1440:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:14","nodeType":"YulTypedName","src":"1366:9:14","type":""},{"name":"value0","nativeSrc":"1378:6:14","nodeType":"YulTypedName","src":"1378:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:14","nodeType":"YulTypedName","src":"1389:4:14","type":""}],"src":"1302:210:14"},{"body":{"nativeSrc":"1577:40:14","nodeType":"YulBlock","src":"1577:40:14","statements":[{"nativeSrc":"1588:22:14","nodeType":"YulAssignment","src":"1588:22:14","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:14","nodeType":"YulIdentifier","src":"1604:5:14"}],"functionName":{"name":"mload","nativeSrc":"1598:5:14","nodeType":"YulIdentifier","src":"1598:5:14"},"nativeSrc":"1598:12:14","nodeType":"YulFunctionCall","src":"1598:12:14"},"variableNames":[{"name":"length","nativeSrc":"1588:6:14","nodeType":"YulIdentifier","src":"1588:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:14","nodeType":"YulTypedName","src":"1560:5:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:14","nodeType":"YulTypedName","src":"1570:6:14","type":""}],"src":"1518:99:14"},{"body":{"nativeSrc":"1719:73:14","nodeType":"YulBlock","src":"1719:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:14","nodeType":"YulIdentifier","src":"1736:3:14"},{"name":"length","nativeSrc":"1741:6:14","nodeType":"YulIdentifier","src":"1741:6:14"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:14","nodeType":"YulIdentifier","src":"1729:6:14"},"nativeSrc":"1729:19:14","nodeType":"YulFunctionCall","src":"1729:19:14"},"nativeSrc":"1729:19:14","nodeType":"YulExpressionStatement","src":"1729:19:14"},{"nativeSrc":"1757:29:14","nodeType":"YulAssignment","src":"1757:29:14","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:14","nodeType":"YulIdentifier","src":"1776:3:14"},{"kind":"number","nativeSrc":"1781:4:14","nodeType":"YulLiteral","src":"1781:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:14","nodeType":"YulIdentifier","src":"1772:3:14"},"nativeSrc":"1772:14:14","nodeType":"YulFunctionCall","src":"1772:14:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:14","nodeType":"YulIdentifier","src":"1757:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:14","nodeType":"YulTypedName","src":"1691:3:14","type":""},{"name":"length","nativeSrc":"1696:6:14","nodeType":"YulTypedName","src":"1696:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:14","nodeType":"YulTypedName","src":"1707:11:14","type":""}],"src":"1623:169:14"},{"body":{"nativeSrc":"1860:186:14","nodeType":"YulBlock","src":"1860:186:14","statements":[{"nativeSrc":"1871:10:14","nodeType":"YulVariableDeclaration","src":"1871:10:14","value":{"kind":"number","nativeSrc":"1880:1:14","nodeType":"YulLiteral","src":"1880:1:14","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:14","nodeType":"YulTypedName","src":"1875:1:14","type":""}]},{"body":{"nativeSrc":"1940:63:14","nodeType":"YulBlock","src":"1940:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:14","nodeType":"YulIdentifier","src":"1965:3:14"},{"name":"i","nativeSrc":"1970:1:14","nodeType":"YulIdentifier","src":"1970:1:14"}],"functionName":{"name":"add","nativeSrc":"1961:3:14","nodeType":"YulIdentifier","src":"1961:3:14"},"nativeSrc":"1961:11:14","nodeType":"YulFunctionCall","src":"1961:11:14"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:14","nodeType":"YulIdentifier","src":"1984:3:14"},{"name":"i","nativeSrc":"1989:1:14","nodeType":"YulIdentifier","src":"1989:1:14"}],"functionName":{"name":"add","nativeSrc":"1980:3:14","nodeType":"YulIdentifier","src":"1980:3:14"},"nativeSrc":"1980:11:14","nodeType":"YulFunctionCall","src":"1980:11:14"}],"functionName":{"name":"mload","nativeSrc":"1974:5:14","nodeType":"YulIdentifier","src":"1974:5:14"},"nativeSrc":"1974:18:14","nodeType":"YulFunctionCall","src":"1974:18:14"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:14","nodeType":"YulIdentifier","src":"1954:6:14"},"nativeSrc":"1954:39:14","nodeType":"YulFunctionCall","src":"1954:39:14"},"nativeSrc":"1954:39:14","nodeType":"YulExpressionStatement","src":"1954:39:14"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:14","nodeType":"YulIdentifier","src":"1901:1:14"},{"name":"length","nativeSrc":"1904:6:14","nodeType":"YulIdentifier","src":"1904:6:14"}],"functionName":{"name":"lt","nativeSrc":"1898:2:14","nodeType":"YulIdentifier","src":"1898:2:14"},"nativeSrc":"1898:13:14","nodeType":"YulFunctionCall","src":"1898:13:14"},"nativeSrc":"1890:113:14","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:14","nodeType":"YulBlock","src":"1912:19:14","statements":[{"nativeSrc":"1914:15:14","nodeType":"YulAssignment","src":"1914:15:14","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:14","nodeType":"YulIdentifier","src":"1923:1:14"},{"kind":"number","nativeSrc":"1926:2:14","nodeType":"YulLiteral","src":"1926:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:14","nodeType":"YulIdentifier","src":"1919:3:14"},"nativeSrc":"1919:10:14","nodeType":"YulFunctionCall","src":"1919:10:14"},"variableNames":[{"name":"i","nativeSrc":"1914:1:14","nodeType":"YulIdentifier","src":"1914:1:14"}]}]},"pre":{"nativeSrc":"1894:3:14","nodeType":"YulBlock","src":"1894:3:14","statements":[]},"src":"1890:113:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:14","nodeType":"YulIdentifier","src":"2023:3:14"},{"name":"length","nativeSrc":"2028:6:14","nodeType":"YulIdentifier","src":"2028:6:14"}],"functionName":{"name":"add","nativeSrc":"2019:3:14","nodeType":"YulIdentifier","src":"2019:3:14"},"nativeSrc":"2019:16:14","nodeType":"YulFunctionCall","src":"2019:16:14"},{"kind":"number","nativeSrc":"2037:1:14","nodeType":"YulLiteral","src":"2037:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:14","nodeType":"YulIdentifier","src":"2012:6:14"},"nativeSrc":"2012:27:14","nodeType":"YulFunctionCall","src":"2012:27:14"},"nativeSrc":"2012:27:14","nodeType":"YulExpressionStatement","src":"2012:27:14"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:14","nodeType":"YulTypedName","src":"1842:3:14","type":""},{"name":"dst","nativeSrc":"1847:3:14","nodeType":"YulTypedName","src":"1847:3:14","type":""},{"name":"length","nativeSrc":"1852:6:14","nodeType":"YulTypedName","src":"1852:6:14","type":""}],"src":"1798:248:14"},{"body":{"nativeSrc":"2100:54:14","nodeType":"YulBlock","src":"2100:54:14","statements":[{"nativeSrc":"2110:38:14","nodeType":"YulAssignment","src":"2110:38:14","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:14","nodeType":"YulIdentifier","src":"2128:5:14"},{"kind":"number","nativeSrc":"2135:2:14","nodeType":"YulLiteral","src":"2135:2:14","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:14","nodeType":"YulIdentifier","src":"2124:3:14"},"nativeSrc":"2124:14:14","nodeType":"YulFunctionCall","src":"2124:14:14"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:14","nodeType":"YulLiteral","src":"2144:2:14","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:14","nodeType":"YulIdentifier","src":"2140:3:14"},"nativeSrc":"2140:7:14","nodeType":"YulFunctionCall","src":"2140:7:14"}],"functionName":{"name":"and","nativeSrc":"2120:3:14","nodeType":"YulIdentifier","src":"2120:3:14"},"nativeSrc":"2120:28:14","nodeType":"YulFunctionCall","src":"2120:28:14"},"variableNames":[{"name":"result","nativeSrc":"2110:6:14","nodeType":"YulIdentifier","src":"2110:6:14"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:14","nodeType":"YulTypedName","src":"2083:5:14","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:14","nodeType":"YulTypedName","src":"2093:6:14","type":""}],"src":"2052:102:14"},{"body":{"nativeSrc":"2252:285:14","nodeType":"YulBlock","src":"2252:285:14","statements":[{"nativeSrc":"2262:53:14","nodeType":"YulVariableDeclaration","src":"2262:53:14","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:14","nodeType":"YulIdentifier","src":"2309:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:14","nodeType":"YulIdentifier","src":"2276:32:14"},"nativeSrc":"2276:39:14","nodeType":"YulFunctionCall","src":"2276:39:14"},"variables":[{"name":"length","nativeSrc":"2266:6:14","nodeType":"YulTypedName","src":"2266:6:14","type":""}]},{"nativeSrc":"2324:78:14","nodeType":"YulAssignment","src":"2324:78:14","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:14","nodeType":"YulIdentifier","src":"2390:3:14"},{"name":"length","nativeSrc":"2395:6:14","nodeType":"YulIdentifier","src":"2395:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:14","nodeType":"YulIdentifier","src":"2331:58:14"},"nativeSrc":"2331:71:14","nodeType":"YulFunctionCall","src":"2331:71:14"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:14","nodeType":"YulIdentifier","src":"2324:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:14","nodeType":"YulIdentifier","src":"2450:5:14"},{"kind":"number","nativeSrc":"2457:4:14","nodeType":"YulLiteral","src":"2457:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:14","nodeType":"YulIdentifier","src":"2446:3:14"},"nativeSrc":"2446:16:14","nodeType":"YulFunctionCall","src":"2446:16:14"},{"name":"pos","nativeSrc":"2464:3:14","nodeType":"YulIdentifier","src":"2464:3:14"},{"name":"length","nativeSrc":"2469:6:14","nodeType":"YulIdentifier","src":"2469:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:14","nodeType":"YulIdentifier","src":"2411:34:14"},"nativeSrc":"2411:65:14","nodeType":"YulFunctionCall","src":"2411:65:14"},"nativeSrc":"2411:65:14","nodeType":"YulExpressionStatement","src":"2411:65:14"},{"nativeSrc":"2485:46:14","nodeType":"YulAssignment","src":"2485:46:14","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:14","nodeType":"YulIdentifier","src":"2496:3:14"},{"arguments":[{"name":"length","nativeSrc":"2523:6:14","nodeType":"YulIdentifier","src":"2523:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:14","nodeType":"YulIdentifier","src":"2501:21:14"},"nativeSrc":"2501:29:14","nodeType":"YulFunctionCall","src":"2501:29:14"}],"functionName":{"name":"add","nativeSrc":"2492:3:14","nodeType":"YulIdentifier","src":"2492:3:14"},"nativeSrc":"2492:39:14","nodeType":"YulFunctionCall","src":"2492:39:14"},"variableNames":[{"name":"end","nativeSrc":"2485:3:14","nodeType":"YulIdentifier","src":"2485:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:14","nodeType":"YulTypedName","src":"2233:5:14","type":""},{"name":"pos","nativeSrc":"2240:3:14","nodeType":"YulTypedName","src":"2240:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:14","nodeType":"YulTypedName","src":"2248:3:14","type":""}],"src":"2160:377:14"},{"body":{"nativeSrc":"2661:195:14","nodeType":"YulBlock","src":"2661:195:14","statements":[{"nativeSrc":"2671:26:14","nodeType":"YulAssignment","src":"2671:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:14","nodeType":"YulIdentifier","src":"2683:9:14"},{"kind":"number","nativeSrc":"2694:2:14","nodeType":"YulLiteral","src":"2694:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:14","nodeType":"YulIdentifier","src":"2679:3:14"},"nativeSrc":"2679:18:14","nodeType":"YulFunctionCall","src":"2679:18:14"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:14","nodeType":"YulIdentifier","src":"2671:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:14","nodeType":"YulIdentifier","src":"2718:9:14"},{"kind":"number","nativeSrc":"2729:1:14","nodeType":"YulLiteral","src":"2729:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:14","nodeType":"YulIdentifier","src":"2714:3:14"},"nativeSrc":"2714:17:14","nodeType":"YulFunctionCall","src":"2714:17:14"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:14","nodeType":"YulIdentifier","src":"2737:4:14"},{"name":"headStart","nativeSrc":"2743:9:14","nodeType":"YulIdentifier","src":"2743:9:14"}],"functionName":{"name":"sub","nativeSrc":"2733:3:14","nodeType":"YulIdentifier","src":"2733:3:14"},"nativeSrc":"2733:20:14","nodeType":"YulFunctionCall","src":"2733:20:14"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:14","nodeType":"YulIdentifier","src":"2707:6:14"},"nativeSrc":"2707:47:14","nodeType":"YulFunctionCall","src":"2707:47:14"},"nativeSrc":"2707:47:14","nodeType":"YulExpressionStatement","src":"2707:47:14"},{"nativeSrc":"2763:86:14","nodeType":"YulAssignment","src":"2763:86:14","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:14","nodeType":"YulIdentifier","src":"2835:6:14"},{"name":"tail","nativeSrc":"2844:4:14","nodeType":"YulIdentifier","src":"2844:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:14","nodeType":"YulIdentifier","src":"2771:63:14"},"nativeSrc":"2771:78:14","nodeType":"YulFunctionCall","src":"2771:78:14"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:14","nodeType":"YulIdentifier","src":"2763:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:14","nodeType":"YulTypedName","src":"2633:9:14","type":""},{"name":"value0","nativeSrc":"2645:6:14","nodeType":"YulTypedName","src":"2645:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:14","nodeType":"YulTypedName","src":"2656:4:14","type":""}],"src":"2543:313:14"},{"body":{"nativeSrc":"2907:32:14","nodeType":"YulBlock","src":"2907:32:14","statements":[{"nativeSrc":"2917:16:14","nodeType":"YulAssignment","src":"2917:16:14","value":{"name":"value","nativeSrc":"2928:5:14","nodeType":"YulIdentifier","src":"2928:5:14"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:14","nodeType":"YulIdentifier","src":"2917:7:14"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:14","nodeType":"YulTypedName","src":"2889:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:14","nodeType":"YulTypedName","src":"2899:7:14","type":""}],"src":"2862:77:14"},{"body":{"nativeSrc":"2988:79:14","nodeType":"YulBlock","src":"2988:79:14","statements":[{"body":{"nativeSrc":"3045:16:14","nodeType":"YulBlock","src":"3045:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:14","nodeType":"YulLiteral","src":"3054:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:14","nodeType":"YulLiteral","src":"3057:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:14","nodeType":"YulIdentifier","src":"3047:6:14"},"nativeSrc":"3047:12:14","nodeType":"YulFunctionCall","src":"3047:12:14"},"nativeSrc":"3047:12:14","nodeType":"YulExpressionStatement","src":"3047:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3011:5:14","nodeType":"YulIdentifier","src":"3011:5:14"},{"arguments":[{"name":"value","nativeSrc":"3036:5:14","nodeType":"YulIdentifier","src":"3036:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3018:17:14","nodeType":"YulIdentifier","src":"3018:17:14"},"nativeSrc":"3018:24:14","nodeType":"YulFunctionCall","src":"3018:24:14"}],"functionName":{"name":"eq","nativeSrc":"3008:2:14","nodeType":"YulIdentifier","src":"3008:2:14"},"nativeSrc":"3008:35:14","nodeType":"YulFunctionCall","src":"3008:35:14"}],"functionName":{"name":"iszero","nativeSrc":"3001:6:14","nodeType":"YulIdentifier","src":"3001:6:14"},"nativeSrc":"3001:43:14","nodeType":"YulFunctionCall","src":"3001:43:14"},"nativeSrc":"2998:63:14","nodeType":"YulIf","src":"2998:63:14"}]},"name":"validator_revert_t_uint256","nativeSrc":"2945:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2981:5:14","nodeType":"YulTypedName","src":"2981:5:14","type":""}],"src":"2945:122:14"},{"body":{"nativeSrc":"3125:87:14","nodeType":"YulBlock","src":"3125:87:14","statements":[{"nativeSrc":"3135:29:14","nodeType":"YulAssignment","src":"3135:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"3157:6:14","nodeType":"YulIdentifier","src":"3157:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"3144:12:14","nodeType":"YulIdentifier","src":"3144:12:14"},"nativeSrc":"3144:20:14","nodeType":"YulFunctionCall","src":"3144:20:14"},"variableNames":[{"name":"value","nativeSrc":"3135:5:14","nodeType":"YulIdentifier","src":"3135:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3200:5:14","nodeType":"YulIdentifier","src":"3200:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3173:26:14","nodeType":"YulIdentifier","src":"3173:26:14"},"nativeSrc":"3173:33:14","nodeType":"YulFunctionCall","src":"3173:33:14"},"nativeSrc":"3173:33:14","nodeType":"YulExpressionStatement","src":"3173:33:14"}]},"name":"abi_decode_t_uint256","nativeSrc":"3073:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3103:6:14","nodeType":"YulTypedName","src":"3103:6:14","type":""},{"name":"end","nativeSrc":"3111:3:14","nodeType":"YulTypedName","src":"3111:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3119:5:14","nodeType":"YulTypedName","src":"3119:5:14","type":""}],"src":"3073:139:14"},{"body":{"nativeSrc":"3284:263:14","nodeType":"YulBlock","src":"3284:263:14","statements":[{"body":{"nativeSrc":"3330:83:14","nodeType":"YulBlock","src":"3330:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3332:77:14","nodeType":"YulIdentifier","src":"3332:77:14"},"nativeSrc":"3332:79:14","nodeType":"YulFunctionCall","src":"3332:79:14"},"nativeSrc":"3332:79:14","nodeType":"YulExpressionStatement","src":"3332:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3305:7:14","nodeType":"YulIdentifier","src":"3305:7:14"},{"name":"headStart","nativeSrc":"3314:9:14","nodeType":"YulIdentifier","src":"3314:9:14"}],"functionName":{"name":"sub","nativeSrc":"3301:3:14","nodeType":"YulIdentifier","src":"3301:3:14"},"nativeSrc":"3301:23:14","nodeType":"YulFunctionCall","src":"3301:23:14"},{"kind":"number","nativeSrc":"3326:2:14","nodeType":"YulLiteral","src":"3326:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3297:3:14","nodeType":"YulIdentifier","src":"3297:3:14"},"nativeSrc":"3297:32:14","nodeType":"YulFunctionCall","src":"3297:32:14"},"nativeSrc":"3294:119:14","nodeType":"YulIf","src":"3294:119:14"},{"nativeSrc":"3423:117:14","nodeType":"YulBlock","src":"3423:117:14","statements":[{"nativeSrc":"3438:15:14","nodeType":"YulVariableDeclaration","src":"3438:15:14","value":{"kind":"number","nativeSrc":"3452:1:14","nodeType":"YulLiteral","src":"3452:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3442:6:14","nodeType":"YulTypedName","src":"3442:6:14","type":""}]},{"nativeSrc":"3467:63:14","nodeType":"YulAssignment","src":"3467:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3502:9:14","nodeType":"YulIdentifier","src":"3502:9:14"},{"name":"offset","nativeSrc":"3513:6:14","nodeType":"YulIdentifier","src":"3513:6:14"}],"functionName":{"name":"add","nativeSrc":"3498:3:14","nodeType":"YulIdentifier","src":"3498:3:14"},"nativeSrc":"3498:22:14","nodeType":"YulFunctionCall","src":"3498:22:14"},{"name":"dataEnd","nativeSrc":"3522:7:14","nodeType":"YulIdentifier","src":"3522:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3477:20:14","nodeType":"YulIdentifier","src":"3477:20:14"},"nativeSrc":"3477:53:14","nodeType":"YulFunctionCall","src":"3477:53:14"},"variableNames":[{"name":"value0","nativeSrc":"3467:6:14","nodeType":"YulIdentifier","src":"3467:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3218:329:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3254:9:14","nodeType":"YulTypedName","src":"3254:9:14","type":""},{"name":"dataEnd","nativeSrc":"3265:7:14","nodeType":"YulTypedName","src":"3265:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3277:6:14","nodeType":"YulTypedName","src":"3277:6:14","type":""}],"src":"3218:329:14"},{"body":{"nativeSrc":"3598:81:14","nodeType":"YulBlock","src":"3598:81:14","statements":[{"nativeSrc":"3608:65:14","nodeType":"YulAssignment","src":"3608:65:14","value":{"arguments":[{"name":"value","nativeSrc":"3623:5:14","nodeType":"YulIdentifier","src":"3623:5:14"},{"kind":"number","nativeSrc":"3630:42:14","nodeType":"YulLiteral","src":"3630:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3619:3:14","nodeType":"YulIdentifier","src":"3619:3:14"},"nativeSrc":"3619:54:14","nodeType":"YulFunctionCall","src":"3619:54:14"},"variableNames":[{"name":"cleaned","nativeSrc":"3608:7:14","nodeType":"YulIdentifier","src":"3608:7:14"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3553:126:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:14","nodeType":"YulTypedName","src":"3580:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3590:7:14","nodeType":"YulTypedName","src":"3590:7:14","type":""}],"src":"3553:126:14"},{"body":{"nativeSrc":"3730:51:14","nodeType":"YulBlock","src":"3730:51:14","statements":[{"nativeSrc":"3740:35:14","nodeType":"YulAssignment","src":"3740:35:14","value":{"arguments":[{"name":"value","nativeSrc":"3769:5:14","nodeType":"YulIdentifier","src":"3769:5:14"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3751:17:14","nodeType":"YulIdentifier","src":"3751:17:14"},"nativeSrc":"3751:24:14","nodeType":"YulFunctionCall","src":"3751:24:14"},"variableNames":[{"name":"cleaned","nativeSrc":"3740:7:14","nodeType":"YulIdentifier","src":"3740:7:14"}]}]},"name":"cleanup_t_address","nativeSrc":"3685:96:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:14","nodeType":"YulTypedName","src":"3712:5:14","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3722:7:14","nodeType":"YulTypedName","src":"3722:7:14","type":""}],"src":"3685:96:14"},{"body":{"nativeSrc":"3852:53:14","nodeType":"YulBlock","src":"3852:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3869:3:14","nodeType":"YulIdentifier","src":"3869:3:14"},{"arguments":[{"name":"value","nativeSrc":"3892:5:14","nodeType":"YulIdentifier","src":"3892:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3874:17:14","nodeType":"YulIdentifier","src":"3874:17:14"},"nativeSrc":"3874:24:14","nodeType":"YulFunctionCall","src":"3874:24:14"}],"functionName":{"name":"mstore","nativeSrc":"3862:6:14","nodeType":"YulIdentifier","src":"3862:6:14"},"nativeSrc":"3862:37:14","nodeType":"YulFunctionCall","src":"3862:37:14"},"nativeSrc":"3862:37:14","nodeType":"YulExpressionStatement","src":"3862:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3787:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3840:5:14","nodeType":"YulTypedName","src":"3840:5:14","type":""},{"name":"pos","nativeSrc":"3847:3:14","nodeType":"YulTypedName","src":"3847:3:14","type":""}],"src":"3787:118:14"},{"body":{"nativeSrc":"4009:124:14","nodeType":"YulBlock","src":"4009:124:14","statements":[{"nativeSrc":"4019:26:14","nodeType":"YulAssignment","src":"4019:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"4031:9:14","nodeType":"YulIdentifier","src":"4031:9:14"},{"kind":"number","nativeSrc":"4042:2:14","nodeType":"YulLiteral","src":"4042:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:14","nodeType":"YulIdentifier","src":"4027:3:14"},"nativeSrc":"4027:18:14","nodeType":"YulFunctionCall","src":"4027:18:14"},"variableNames":[{"name":"tail","nativeSrc":"4019:4:14","nodeType":"YulIdentifier","src":"4019:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4099:6:14","nodeType":"YulIdentifier","src":"4099:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"4112:9:14","nodeType":"YulIdentifier","src":"4112:9:14"},{"kind":"number","nativeSrc":"4123:1:14","nodeType":"YulLiteral","src":"4123:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4108:3:14","nodeType":"YulIdentifier","src":"4108:3:14"},"nativeSrc":"4108:17:14","nodeType":"YulFunctionCall","src":"4108:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4055:43:14","nodeType":"YulIdentifier","src":"4055:43:14"},"nativeSrc":"4055:71:14","nodeType":"YulFunctionCall","src":"4055:71:14"},"nativeSrc":"4055:71:14","nodeType":"YulExpressionStatement","src":"4055:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3911:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3981:9:14","nodeType":"YulTypedName","src":"3981:9:14","type":""},{"name":"value0","nativeSrc":"3993:6:14","nodeType":"YulTypedName","src":"3993:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4004:4:14","nodeType":"YulTypedName","src":"4004:4:14","type":""}],"src":"3911:222:14"},{"body":{"nativeSrc":"4182:79:14","nodeType":"YulBlock","src":"4182:79:14","statements":[{"body":{"nativeSrc":"4239:16:14","nodeType":"YulBlock","src":"4239:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4248:1:14","nodeType":"YulLiteral","src":"4248:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"4251:1:14","nodeType":"YulLiteral","src":"4251:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4241:6:14","nodeType":"YulIdentifier","src":"4241:6:14"},"nativeSrc":"4241:12:14","nodeType":"YulFunctionCall","src":"4241:12:14"},"nativeSrc":"4241:12:14","nodeType":"YulExpressionStatement","src":"4241:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4205:5:14","nodeType":"YulIdentifier","src":"4205:5:14"},{"arguments":[{"name":"value","nativeSrc":"4230:5:14","nodeType":"YulIdentifier","src":"4230:5:14"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4212:17:14","nodeType":"YulIdentifier","src":"4212:17:14"},"nativeSrc":"4212:24:14","nodeType":"YulFunctionCall","src":"4212:24:14"}],"functionName":{"name":"eq","nativeSrc":"4202:2:14","nodeType":"YulIdentifier","src":"4202:2:14"},"nativeSrc":"4202:35:14","nodeType":"YulFunctionCall","src":"4202:35:14"}],"functionName":{"name":"iszero","nativeSrc":"4195:6:14","nodeType":"YulIdentifier","src":"4195:6:14"},"nativeSrc":"4195:43:14","nodeType":"YulFunctionCall","src":"4195:43:14"},"nativeSrc":"4192:63:14","nodeType":"YulIf","src":"4192:63:14"}]},"name":"validator_revert_t_address","nativeSrc":"4139:122:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4175:5:14","nodeType":"YulTypedName","src":"4175:5:14","type":""}],"src":"4139:122:14"},{"body":{"nativeSrc":"4319:87:14","nodeType":"YulBlock","src":"4319:87:14","statements":[{"nativeSrc":"4329:29:14","nodeType":"YulAssignment","src":"4329:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"4351:6:14","nodeType":"YulIdentifier","src":"4351:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"4338:12:14","nodeType":"YulIdentifier","src":"4338:12:14"},"nativeSrc":"4338:20:14","nodeType":"YulFunctionCall","src":"4338:20:14"},"variableNames":[{"name":"value","nativeSrc":"4329:5:14","nodeType":"YulIdentifier","src":"4329:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4394:5:14","nodeType":"YulIdentifier","src":"4394:5:14"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4367:26:14","nodeType":"YulIdentifier","src":"4367:26:14"},"nativeSrc":"4367:33:14","nodeType":"YulFunctionCall","src":"4367:33:14"},"nativeSrc":"4367:33:14","nodeType":"YulExpressionStatement","src":"4367:33:14"}]},"name":"abi_decode_t_address","nativeSrc":"4267:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4297:6:14","nodeType":"YulTypedName","src":"4297:6:14","type":""},{"name":"end","nativeSrc":"4305:3:14","nodeType":"YulTypedName","src":"4305:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4313:5:14","nodeType":"YulTypedName","src":"4313:5:14","type":""}],"src":"4267:139:14"},{"body":{"nativeSrc":"4495:391:14","nodeType":"YulBlock","src":"4495:391:14","statements":[{"body":{"nativeSrc":"4541:83:14","nodeType":"YulBlock","src":"4541:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4543:77:14","nodeType":"YulIdentifier","src":"4543:77:14"},"nativeSrc":"4543:79:14","nodeType":"YulFunctionCall","src":"4543:79:14"},"nativeSrc":"4543:79:14","nodeType":"YulExpressionStatement","src":"4543:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4516:7:14","nodeType":"YulIdentifier","src":"4516:7:14"},{"name":"headStart","nativeSrc":"4525:9:14","nodeType":"YulIdentifier","src":"4525:9:14"}],"functionName":{"name":"sub","nativeSrc":"4512:3:14","nodeType":"YulIdentifier","src":"4512:3:14"},"nativeSrc":"4512:23:14","nodeType":"YulFunctionCall","src":"4512:23:14"},{"kind":"number","nativeSrc":"4537:2:14","nodeType":"YulLiteral","src":"4537:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4508:3:14","nodeType":"YulIdentifier","src":"4508:3:14"},"nativeSrc":"4508:32:14","nodeType":"YulFunctionCall","src":"4508:32:14"},"nativeSrc":"4505:119:14","nodeType":"YulIf","src":"4505:119:14"},{"nativeSrc":"4634:117:14","nodeType":"YulBlock","src":"4634:117:14","statements":[{"nativeSrc":"4649:15:14","nodeType":"YulVariableDeclaration","src":"4649:15:14","value":{"kind":"number","nativeSrc":"4663:1:14","nodeType":"YulLiteral","src":"4663:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4653:6:14","nodeType":"YulTypedName","src":"4653:6:14","type":""}]},{"nativeSrc":"4678:63:14","nodeType":"YulAssignment","src":"4678:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4713:9:14","nodeType":"YulIdentifier","src":"4713:9:14"},{"name":"offset","nativeSrc":"4724:6:14","nodeType":"YulIdentifier","src":"4724:6:14"}],"functionName":{"name":"add","nativeSrc":"4709:3:14","nodeType":"YulIdentifier","src":"4709:3:14"},"nativeSrc":"4709:22:14","nodeType":"YulFunctionCall","src":"4709:22:14"},{"name":"dataEnd","nativeSrc":"4733:7:14","nodeType":"YulIdentifier","src":"4733:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4688:20:14","nodeType":"YulIdentifier","src":"4688:20:14"},"nativeSrc":"4688:53:14","nodeType":"YulFunctionCall","src":"4688:53:14"},"variableNames":[{"name":"value0","nativeSrc":"4678:6:14","nodeType":"YulIdentifier","src":"4678:6:14"}]}]},{"nativeSrc":"4761:118:14","nodeType":"YulBlock","src":"4761:118:14","statements":[{"nativeSrc":"4776:16:14","nodeType":"YulVariableDeclaration","src":"4776:16:14","value":{"kind":"number","nativeSrc":"4790:2:14","nodeType":"YulLiteral","src":"4790:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4780:6:14","nodeType":"YulTypedName","src":"4780:6:14","type":""}]},{"nativeSrc":"4806:63:14","nodeType":"YulAssignment","src":"4806:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4841:9:14","nodeType":"YulIdentifier","src":"4841:9:14"},{"name":"offset","nativeSrc":"4852:6:14","nodeType":"YulIdentifier","src":"4852:6:14"}],"functionName":{"name":"add","nativeSrc":"4837:3:14","nodeType":"YulIdentifier","src":"4837:3:14"},"nativeSrc":"4837:22:14","nodeType":"YulFunctionCall","src":"4837:22:14"},{"name":"dataEnd","nativeSrc":"4861:7:14","nodeType":"YulIdentifier","src":"4861:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4816:20:14","nodeType":"YulIdentifier","src":"4816:20:14"},"nativeSrc":"4816:53:14","nodeType":"YulFunctionCall","src":"4816:53:14"},"variableNames":[{"name":"value1","nativeSrc":"4806:6:14","nodeType":"YulIdentifier","src":"4806:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4412:474:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:14","nodeType":"YulTypedName","src":"4457:9:14","type":""},{"name":"dataEnd","nativeSrc":"4468:7:14","nodeType":"YulTypedName","src":"4468:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4480:6:14","nodeType":"YulTypedName","src":"4480:6:14","type":""},{"name":"value1","nativeSrc":"4488:6:14","nodeType":"YulTypedName","src":"4488:6:14","type":""}],"src":"4412:474:14"},{"body":{"nativeSrc":"4992:519:14","nodeType":"YulBlock","src":"4992:519:14","statements":[{"body":{"nativeSrc":"5038:83:14","nodeType":"YulBlock","src":"5038:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5040:77:14","nodeType":"YulIdentifier","src":"5040:77:14"},"nativeSrc":"5040:79:14","nodeType":"YulFunctionCall","src":"5040:79:14"},"nativeSrc":"5040:79:14","nodeType":"YulExpressionStatement","src":"5040:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5013:7:14","nodeType":"YulIdentifier","src":"5013:7:14"},{"name":"headStart","nativeSrc":"5022:9:14","nodeType":"YulIdentifier","src":"5022:9:14"}],"functionName":{"name":"sub","nativeSrc":"5009:3:14","nodeType":"YulIdentifier","src":"5009:3:14"},"nativeSrc":"5009:23:14","nodeType":"YulFunctionCall","src":"5009:23:14"},{"kind":"number","nativeSrc":"5034:2:14","nodeType":"YulLiteral","src":"5034:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5005:3:14","nodeType":"YulIdentifier","src":"5005:3:14"},"nativeSrc":"5005:32:14","nodeType":"YulFunctionCall","src":"5005:32:14"},"nativeSrc":"5002:119:14","nodeType":"YulIf","src":"5002:119:14"},{"nativeSrc":"5131:117:14","nodeType":"YulBlock","src":"5131:117:14","statements":[{"nativeSrc":"5146:15:14","nodeType":"YulVariableDeclaration","src":"5146:15:14","value":{"kind":"number","nativeSrc":"5160:1:14","nodeType":"YulLiteral","src":"5160:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5150:6:14","nodeType":"YulTypedName","src":"5150:6:14","type":""}]},{"nativeSrc":"5175:63:14","nodeType":"YulAssignment","src":"5175:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5210:9:14","nodeType":"YulIdentifier","src":"5210:9:14"},{"name":"offset","nativeSrc":"5221:6:14","nodeType":"YulIdentifier","src":"5221:6:14"}],"functionName":{"name":"add","nativeSrc":"5206:3:14","nodeType":"YulIdentifier","src":"5206:3:14"},"nativeSrc":"5206:22:14","nodeType":"YulFunctionCall","src":"5206:22:14"},{"name":"dataEnd","nativeSrc":"5230:7:14","nodeType":"YulIdentifier","src":"5230:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5185:20:14","nodeType":"YulIdentifier","src":"5185:20:14"},"nativeSrc":"5185:53:14","nodeType":"YulFunctionCall","src":"5185:53:14"},"variableNames":[{"name":"value0","nativeSrc":"5175:6:14","nodeType":"YulIdentifier","src":"5175:6:14"}]}]},{"nativeSrc":"5258:118:14","nodeType":"YulBlock","src":"5258:118:14","statements":[{"nativeSrc":"5273:16:14","nodeType":"YulVariableDeclaration","src":"5273:16:14","value":{"kind":"number","nativeSrc":"5287:2:14","nodeType":"YulLiteral","src":"5287:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5277:6:14","nodeType":"YulTypedName","src":"5277:6:14","type":""}]},{"nativeSrc":"5303:63:14","nodeType":"YulAssignment","src":"5303:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5338:9:14","nodeType":"YulIdentifier","src":"5338:9:14"},{"name":"offset","nativeSrc":"5349:6:14","nodeType":"YulIdentifier","src":"5349:6:14"}],"functionName":{"name":"add","nativeSrc":"5334:3:14","nodeType":"YulIdentifier","src":"5334:3:14"},"nativeSrc":"5334:22:14","nodeType":"YulFunctionCall","src":"5334:22:14"},{"name":"dataEnd","nativeSrc":"5358:7:14","nodeType":"YulIdentifier","src":"5358:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5313:20:14","nodeType":"YulIdentifier","src":"5313:20:14"},"nativeSrc":"5313:53:14","nodeType":"YulFunctionCall","src":"5313:53:14"},"variableNames":[{"name":"value1","nativeSrc":"5303:6:14","nodeType":"YulIdentifier","src":"5303:6:14"}]}]},{"nativeSrc":"5386:118:14","nodeType":"YulBlock","src":"5386:118:14","statements":[{"nativeSrc":"5401:16:14","nodeType":"YulVariableDeclaration","src":"5401:16:14","value":{"kind":"number","nativeSrc":"5415:2:14","nodeType":"YulLiteral","src":"5415:2:14","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5405:6:14","nodeType":"YulTypedName","src":"5405:6:14","type":""}]},{"nativeSrc":"5431:63:14","nodeType":"YulAssignment","src":"5431:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5466:9:14","nodeType":"YulIdentifier","src":"5466:9:14"},{"name":"offset","nativeSrc":"5477:6:14","nodeType":"YulIdentifier","src":"5477:6:14"}],"functionName":{"name":"add","nativeSrc":"5462:3:14","nodeType":"YulIdentifier","src":"5462:3:14"},"nativeSrc":"5462:22:14","nodeType":"YulFunctionCall","src":"5462:22:14"},{"name":"dataEnd","nativeSrc":"5486:7:14","nodeType":"YulIdentifier","src":"5486:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5441:20:14","nodeType":"YulIdentifier","src":"5441:20:14"},"nativeSrc":"5441:53:14","nodeType":"YulFunctionCall","src":"5441:53:14"},"variableNames":[{"name":"value2","nativeSrc":"5431:6:14","nodeType":"YulIdentifier","src":"5431:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4892:619:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4946:9:14","nodeType":"YulTypedName","src":"4946:9:14","type":""},{"name":"dataEnd","nativeSrc":"4957:7:14","nodeType":"YulTypedName","src":"4957:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4969:6:14","nodeType":"YulTypedName","src":"4969:6:14","type":""},{"name":"value1","nativeSrc":"4977:6:14","nodeType":"YulTypedName","src":"4977:6:14","type":""},{"name":"value2","nativeSrc":"4985:6:14","nodeType":"YulTypedName","src":"4985:6:14","type":""}],"src":"4892:619:14"},{"body":{"nativeSrc":"5582:53:14","nodeType":"YulBlock","src":"5582:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5599:3:14","nodeType":"YulIdentifier","src":"5599:3:14"},{"arguments":[{"name":"value","nativeSrc":"5622:5:14","nodeType":"YulIdentifier","src":"5622:5:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"5604:17:14","nodeType":"YulIdentifier","src":"5604:17:14"},"nativeSrc":"5604:24:14","nodeType":"YulFunctionCall","src":"5604:24:14"}],"functionName":{"name":"mstore","nativeSrc":"5592:6:14","nodeType":"YulIdentifier","src":"5592:6:14"},"nativeSrc":"5592:37:14","nodeType":"YulFunctionCall","src":"5592:37:14"},"nativeSrc":"5592:37:14","nodeType":"YulExpressionStatement","src":"5592:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5517:118:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5570:5:14","nodeType":"YulTypedName","src":"5570:5:14","type":""},{"name":"pos","nativeSrc":"5577:3:14","nodeType":"YulTypedName","src":"5577:3:14","type":""}],"src":"5517:118:14"},{"body":{"nativeSrc":"5739:124:14","nodeType":"YulBlock","src":"5739:124:14","statements":[{"nativeSrc":"5749:26:14","nodeType":"YulAssignment","src":"5749:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"5761:9:14","nodeType":"YulIdentifier","src":"5761:9:14"},{"kind":"number","nativeSrc":"5772:2:14","nodeType":"YulLiteral","src":"5772:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5757:3:14","nodeType":"YulIdentifier","src":"5757:3:14"},"nativeSrc":"5757:18:14","nodeType":"YulFunctionCall","src":"5757:18:14"},"variableNames":[{"name":"tail","nativeSrc":"5749:4:14","nodeType":"YulIdentifier","src":"5749:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5829:6:14","nodeType":"YulIdentifier","src":"5829:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"5842:9:14","nodeType":"YulIdentifier","src":"5842:9:14"},{"kind":"number","nativeSrc":"5853:1:14","nodeType":"YulLiteral","src":"5853:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5838:3:14","nodeType":"YulIdentifier","src":"5838:3:14"},"nativeSrc":"5838:17:14","nodeType":"YulFunctionCall","src":"5838:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5785:43:14","nodeType":"YulIdentifier","src":"5785:43:14"},"nativeSrc":"5785:71:14","nodeType":"YulFunctionCall","src":"5785:71:14"},"nativeSrc":"5785:71:14","nodeType":"YulExpressionStatement","src":"5785:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"5641:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5711:9:14","nodeType":"YulTypedName","src":"5711:9:14","type":""},{"name":"value0","nativeSrc":"5723:6:14","nodeType":"YulTypedName","src":"5723:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5734:4:14","nodeType":"YulTypedName","src":"5734:4:14","type":""}],"src":"5641:222:14"},{"body":{"nativeSrc":"5935:263:14","nodeType":"YulBlock","src":"5935:263:14","statements":[{"body":{"nativeSrc":"5981:83:14","nodeType":"YulBlock","src":"5981:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5983:77:14","nodeType":"YulIdentifier","src":"5983:77:14"},"nativeSrc":"5983:79:14","nodeType":"YulFunctionCall","src":"5983:79:14"},"nativeSrc":"5983:79:14","nodeType":"YulExpressionStatement","src":"5983:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5956:7:14","nodeType":"YulIdentifier","src":"5956:7:14"},{"name":"headStart","nativeSrc":"5965:9:14","nodeType":"YulIdentifier","src":"5965:9:14"}],"functionName":{"name":"sub","nativeSrc":"5952:3:14","nodeType":"YulIdentifier","src":"5952:3:14"},"nativeSrc":"5952:23:14","nodeType":"YulFunctionCall","src":"5952:23:14"},{"kind":"number","nativeSrc":"5977:2:14","nodeType":"YulLiteral","src":"5977:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5948:3:14","nodeType":"YulIdentifier","src":"5948:3:14"},"nativeSrc":"5948:32:14","nodeType":"YulFunctionCall","src":"5948:32:14"},"nativeSrc":"5945:119:14","nodeType":"YulIf","src":"5945:119:14"},{"nativeSrc":"6074:117:14","nodeType":"YulBlock","src":"6074:117:14","statements":[{"nativeSrc":"6089:15:14","nodeType":"YulVariableDeclaration","src":"6089:15:14","value":{"kind":"number","nativeSrc":"6103:1:14","nodeType":"YulLiteral","src":"6103:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6093:6:14","nodeType":"YulTypedName","src":"6093:6:14","type":""}]},{"nativeSrc":"6118:63:14","nodeType":"YulAssignment","src":"6118:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6153:9:14","nodeType":"YulIdentifier","src":"6153:9:14"},{"name":"offset","nativeSrc":"6164:6:14","nodeType":"YulIdentifier","src":"6164:6:14"}],"functionName":{"name":"add","nativeSrc":"6149:3:14","nodeType":"YulIdentifier","src":"6149:3:14"},"nativeSrc":"6149:22:14","nodeType":"YulFunctionCall","src":"6149:22:14"},{"name":"dataEnd","nativeSrc":"6173:7:14","nodeType":"YulIdentifier","src":"6173:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6128:20:14","nodeType":"YulIdentifier","src":"6128:20:14"},"nativeSrc":"6128:53:14","nodeType":"YulFunctionCall","src":"6128:53:14"},"variableNames":[{"name":"value0","nativeSrc":"6118:6:14","nodeType":"YulIdentifier","src":"6118:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5869:329:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5905:9:14","nodeType":"YulTypedName","src":"5905:9:14","type":""},{"name":"dataEnd","nativeSrc":"5916:7:14","nodeType":"YulTypedName","src":"5916:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5928:6:14","nodeType":"YulTypedName","src":"5928:6:14","type":""}],"src":"5869:329:14"},{"body":{"nativeSrc":"6244:76:14","nodeType":"YulBlock","src":"6244:76:14","statements":[{"body":{"nativeSrc":"6298:16:14","nodeType":"YulBlock","src":"6298:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6307:1:14","nodeType":"YulLiteral","src":"6307:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"6310:1:14","nodeType":"YulLiteral","src":"6310:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6300:6:14","nodeType":"YulIdentifier","src":"6300:6:14"},"nativeSrc":"6300:12:14","nodeType":"YulFunctionCall","src":"6300:12:14"},"nativeSrc":"6300:12:14","nodeType":"YulExpressionStatement","src":"6300:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6267:5:14","nodeType":"YulIdentifier","src":"6267:5:14"},{"arguments":[{"name":"value","nativeSrc":"6289:5:14","nodeType":"YulIdentifier","src":"6289:5:14"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"6274:14:14","nodeType":"YulIdentifier","src":"6274:14:14"},"nativeSrc":"6274:21:14","nodeType":"YulFunctionCall","src":"6274:21:14"}],"functionName":{"name":"eq","nativeSrc":"6264:2:14","nodeType":"YulIdentifier","src":"6264:2:14"},"nativeSrc":"6264:32:14","nodeType":"YulFunctionCall","src":"6264:32:14"}],"functionName":{"name":"iszero","nativeSrc":"6257:6:14","nodeType":"YulIdentifier","src":"6257:6:14"},"nativeSrc":"6257:40:14","nodeType":"YulFunctionCall","src":"6257:40:14"},"nativeSrc":"6254:60:14","nodeType":"YulIf","src":"6254:60:14"}]},"name":"validator_revert_t_bool","nativeSrc":"6204:116:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6237:5:14","nodeType":"YulTypedName","src":"6237:5:14","type":""}],"src":"6204:116:14"},{"body":{"nativeSrc":"6375:84:14","nodeType":"YulBlock","src":"6375:84:14","statements":[{"nativeSrc":"6385:29:14","nodeType":"YulAssignment","src":"6385:29:14","value":{"arguments":[{"name":"offset","nativeSrc":"6407:6:14","nodeType":"YulIdentifier","src":"6407:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"6394:12:14","nodeType":"YulIdentifier","src":"6394:12:14"},"nativeSrc":"6394:20:14","nodeType":"YulFunctionCall","src":"6394:20:14"},"variableNames":[{"name":"value","nativeSrc":"6385:5:14","nodeType":"YulIdentifier","src":"6385:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6447:5:14","nodeType":"YulIdentifier","src":"6447:5:14"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"6423:23:14","nodeType":"YulIdentifier","src":"6423:23:14"},"nativeSrc":"6423:30:14","nodeType":"YulFunctionCall","src":"6423:30:14"},"nativeSrc":"6423:30:14","nodeType":"YulExpressionStatement","src":"6423:30:14"}]},"name":"abi_decode_t_bool","nativeSrc":"6326:133:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6353:6:14","nodeType":"YulTypedName","src":"6353:6:14","type":""},{"name":"end","nativeSrc":"6361:3:14","nodeType":"YulTypedName","src":"6361:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6369:5:14","nodeType":"YulTypedName","src":"6369:5:14","type":""}],"src":"6326:133:14"},{"body":{"nativeSrc":"6545:388:14","nodeType":"YulBlock","src":"6545:388:14","statements":[{"body":{"nativeSrc":"6591:83:14","nodeType":"YulBlock","src":"6591:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6593:77:14","nodeType":"YulIdentifier","src":"6593:77:14"},"nativeSrc":"6593:79:14","nodeType":"YulFunctionCall","src":"6593:79:14"},"nativeSrc":"6593:79:14","nodeType":"YulExpressionStatement","src":"6593:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6566:7:14","nodeType":"YulIdentifier","src":"6566:7:14"},{"name":"headStart","nativeSrc":"6575:9:14","nodeType":"YulIdentifier","src":"6575:9:14"}],"functionName":{"name":"sub","nativeSrc":"6562:3:14","nodeType":"YulIdentifier","src":"6562:3:14"},"nativeSrc":"6562:23:14","nodeType":"YulFunctionCall","src":"6562:23:14"},{"kind":"number","nativeSrc":"6587:2:14","nodeType":"YulLiteral","src":"6587:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6558:3:14","nodeType":"YulIdentifier","src":"6558:3:14"},"nativeSrc":"6558:32:14","nodeType":"YulFunctionCall","src":"6558:32:14"},"nativeSrc":"6555:119:14","nodeType":"YulIf","src":"6555:119:14"},{"nativeSrc":"6684:117:14","nodeType":"YulBlock","src":"6684:117:14","statements":[{"nativeSrc":"6699:15:14","nodeType":"YulVariableDeclaration","src":"6699:15:14","value":{"kind":"number","nativeSrc":"6713:1:14","nodeType":"YulLiteral","src":"6713:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6703:6:14","nodeType":"YulTypedName","src":"6703:6:14","type":""}]},{"nativeSrc":"6728:63:14","nodeType":"YulAssignment","src":"6728:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6763:9:14","nodeType":"YulIdentifier","src":"6763:9:14"},{"name":"offset","nativeSrc":"6774:6:14","nodeType":"YulIdentifier","src":"6774:6:14"}],"functionName":{"name":"add","nativeSrc":"6759:3:14","nodeType":"YulIdentifier","src":"6759:3:14"},"nativeSrc":"6759:22:14","nodeType":"YulFunctionCall","src":"6759:22:14"},{"name":"dataEnd","nativeSrc":"6783:7:14","nodeType":"YulIdentifier","src":"6783:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6738:20:14","nodeType":"YulIdentifier","src":"6738:20:14"},"nativeSrc":"6738:53:14","nodeType":"YulFunctionCall","src":"6738:53:14"},"variableNames":[{"name":"value0","nativeSrc":"6728:6:14","nodeType":"YulIdentifier","src":"6728:6:14"}]}]},{"nativeSrc":"6811:115:14","nodeType":"YulBlock","src":"6811:115:14","statements":[{"nativeSrc":"6826:16:14","nodeType":"YulVariableDeclaration","src":"6826:16:14","value":{"kind":"number","nativeSrc":"6840:2:14","nodeType":"YulLiteral","src":"6840:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6830:6:14","nodeType":"YulTypedName","src":"6830:6:14","type":""}]},{"nativeSrc":"6856:60:14","nodeType":"YulAssignment","src":"6856:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6888:9:14","nodeType":"YulIdentifier","src":"6888:9:14"},{"name":"offset","nativeSrc":"6899:6:14","nodeType":"YulIdentifier","src":"6899:6:14"}],"functionName":{"name":"add","nativeSrc":"6884:3:14","nodeType":"YulIdentifier","src":"6884:3:14"},"nativeSrc":"6884:22:14","nodeType":"YulFunctionCall","src":"6884:22:14"},{"name":"dataEnd","nativeSrc":"6908:7:14","nodeType":"YulIdentifier","src":"6908:7:14"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"6866:17:14","nodeType":"YulIdentifier","src":"6866:17:14"},"nativeSrc":"6866:50:14","nodeType":"YulFunctionCall","src":"6866:50:14"},"variableNames":[{"name":"value1","nativeSrc":"6856:6:14","nodeType":"YulIdentifier","src":"6856:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"6465:468:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6507:9:14","nodeType":"YulTypedName","src":"6507:9:14","type":""},{"name":"dataEnd","nativeSrc":"6518:7:14","nodeType":"YulTypedName","src":"6518:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6530:6:14","nodeType":"YulTypedName","src":"6530:6:14","type":""},{"name":"value1","nativeSrc":"6538:6:14","nodeType":"YulTypedName","src":"6538:6:14","type":""}],"src":"6465:468:14"},{"body":{"nativeSrc":"7028:28:14","nodeType":"YulBlock","src":"7028:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7045:1:14","nodeType":"YulLiteral","src":"7045:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"7048:1:14","nodeType":"YulLiteral","src":"7048:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7038:6:14","nodeType":"YulIdentifier","src":"7038:6:14"},"nativeSrc":"7038:12:14","nodeType":"YulFunctionCall","src":"7038:12:14"},"nativeSrc":"7038:12:14","nodeType":"YulExpressionStatement","src":"7038:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6939:117:14","nodeType":"YulFunctionDefinition","src":"6939:117:14"},{"body":{"nativeSrc":"7151:28:14","nodeType":"YulBlock","src":"7151:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7168:1:14","nodeType":"YulLiteral","src":"7168:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"7171:1:14","nodeType":"YulLiteral","src":"7171:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7161:6:14","nodeType":"YulIdentifier","src":"7161:6:14"},"nativeSrc":"7161:12:14","nodeType":"YulFunctionCall","src":"7161:12:14"},"nativeSrc":"7161:12:14","nodeType":"YulExpressionStatement","src":"7161:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7062:117:14","nodeType":"YulFunctionDefinition","src":"7062:117:14"},{"body":{"nativeSrc":"7213:152:14","nodeType":"YulBlock","src":"7213:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7230:1:14","nodeType":"YulLiteral","src":"7230:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"7233:77:14","nodeType":"YulLiteral","src":"7233:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7223:6:14","nodeType":"YulIdentifier","src":"7223:6:14"},"nativeSrc":"7223:88:14","nodeType":"YulFunctionCall","src":"7223:88:14"},"nativeSrc":"7223:88:14","nodeType":"YulExpressionStatement","src":"7223:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7327:1:14","nodeType":"YulLiteral","src":"7327:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"7330:4:14","nodeType":"YulLiteral","src":"7330:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"7320:6:14","nodeType":"YulIdentifier","src":"7320:6:14"},"nativeSrc":"7320:15:14","nodeType":"YulFunctionCall","src":"7320:15:14"},"nativeSrc":"7320:15:14","nodeType":"YulExpressionStatement","src":"7320:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7351:1:14","nodeType":"YulLiteral","src":"7351:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"7354:4:14","nodeType":"YulLiteral","src":"7354:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7344:6:14","nodeType":"YulIdentifier","src":"7344:6:14"},"nativeSrc":"7344:15:14","nodeType":"YulFunctionCall","src":"7344:15:14"},"nativeSrc":"7344:15:14","nodeType":"YulExpressionStatement","src":"7344:15:14"}]},"name":"panic_error_0x41","nativeSrc":"7185:180:14","nodeType":"YulFunctionDefinition","src":"7185:180:14"},{"body":{"nativeSrc":"7414:238:14","nodeType":"YulBlock","src":"7414:238:14","statements":[{"nativeSrc":"7424:58:14","nodeType":"YulVariableDeclaration","src":"7424:58:14","value":{"arguments":[{"name":"memPtr","nativeSrc":"7446:6:14","nodeType":"YulIdentifier","src":"7446:6:14"},{"arguments":[{"name":"size","nativeSrc":"7476:4:14","nodeType":"YulIdentifier","src":"7476:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7454:21:14","nodeType":"YulIdentifier","src":"7454:21:14"},"nativeSrc":"7454:27:14","nodeType":"YulFunctionCall","src":"7454:27:14"}],"functionName":{"name":"add","nativeSrc":"7442:3:14","nodeType":"YulIdentifier","src":"7442:3:14"},"nativeSrc":"7442:40:14","nodeType":"YulFunctionCall","src":"7442:40:14"},"variables":[{"name":"newFreePtr","nativeSrc":"7428:10:14","nodeType":"YulTypedName","src":"7428:10:14","type":""}]},{"body":{"nativeSrc":"7593:22:14","nodeType":"YulBlock","src":"7593:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7595:16:14","nodeType":"YulIdentifier","src":"7595:16:14"},"nativeSrc":"7595:18:14","nodeType":"YulFunctionCall","src":"7595:18:14"},"nativeSrc":"7595:18:14","nodeType":"YulExpressionStatement","src":"7595:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"7536:10:14","nodeType":"YulIdentifier","src":"7536:10:14"},{"kind":"number","nativeSrc":"7548:18:14","nodeType":"YulLiteral","src":"7548:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7533:2:14","nodeType":"YulIdentifier","src":"7533:2:14"},"nativeSrc":"7533:34:14","nodeType":"YulFunctionCall","src":"7533:34:14"},{"arguments":[{"name":"newFreePtr","nativeSrc":"7572:10:14","nodeType":"YulIdentifier","src":"7572:10:14"},{"name":"memPtr","nativeSrc":"7584:6:14","nodeType":"YulIdentifier","src":"7584:6:14"}],"functionName":{"name":"lt","nativeSrc":"7569:2:14","nodeType":"YulIdentifier","src":"7569:2:14"},"nativeSrc":"7569:22:14","nodeType":"YulFunctionCall","src":"7569:22:14"}],"functionName":{"name":"or","nativeSrc":"7530:2:14","nodeType":"YulIdentifier","src":"7530:2:14"},"nativeSrc":"7530:62:14","nodeType":"YulFunctionCall","src":"7530:62:14"},"nativeSrc":"7527:88:14","nodeType":"YulIf","src":"7527:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7631:2:14","nodeType":"YulLiteral","src":"7631:2:14","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"7635:10:14","nodeType":"YulIdentifier","src":"7635:10:14"}],"functionName":{"name":"mstore","nativeSrc":"7624:6:14","nodeType":"YulIdentifier","src":"7624:6:14"},"nativeSrc":"7624:22:14","nodeType":"YulFunctionCall","src":"7624:22:14"},"nativeSrc":"7624:22:14","nodeType":"YulExpressionStatement","src":"7624:22:14"}]},"name":"finalize_allocation","nativeSrc":"7371:281:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7400:6:14","nodeType":"YulTypedName","src":"7400:6:14","type":""},{"name":"size","nativeSrc":"7408:4:14","nodeType":"YulTypedName","src":"7408:4:14","type":""}],"src":"7371:281:14"},{"body":{"nativeSrc":"7699:88:14","nodeType":"YulBlock","src":"7699:88:14","statements":[{"nativeSrc":"7709:30:14","nodeType":"YulAssignment","src":"7709:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"7719:18:14","nodeType":"YulIdentifier","src":"7719:18:14"},"nativeSrc":"7719:20:14","nodeType":"YulFunctionCall","src":"7719:20:14"},"variableNames":[{"name":"memPtr","nativeSrc":"7709:6:14","nodeType":"YulIdentifier","src":"7709:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"7768:6:14","nodeType":"YulIdentifier","src":"7768:6:14"},{"name":"size","nativeSrc":"7776:4:14","nodeType":"YulIdentifier","src":"7776:4:14"}],"functionName":{"name":"finalize_allocation","nativeSrc":"7748:19:14","nodeType":"YulIdentifier","src":"7748:19:14"},"nativeSrc":"7748:33:14","nodeType":"YulFunctionCall","src":"7748:33:14"},"nativeSrc":"7748:33:14","nodeType":"YulExpressionStatement","src":"7748:33:14"}]},"name":"allocate_memory","nativeSrc":"7658:129:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"7683:4:14","nodeType":"YulTypedName","src":"7683:4:14","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"7692:6:14","nodeType":"YulTypedName","src":"7692:6:14","type":""}],"src":"7658:129:14"},{"body":{"nativeSrc":"7859:241:14","nodeType":"YulBlock","src":"7859:241:14","statements":[{"body":{"nativeSrc":"7964:22:14","nodeType":"YulBlock","src":"7964:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7966:16:14","nodeType":"YulIdentifier","src":"7966:16:14"},"nativeSrc":"7966:18:14","nodeType":"YulFunctionCall","src":"7966:18:14"},"nativeSrc":"7966:18:14","nodeType":"YulExpressionStatement","src":"7966:18:14"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7936:6:14","nodeType":"YulIdentifier","src":"7936:6:14"},{"kind":"number","nativeSrc":"7944:18:14","nodeType":"YulLiteral","src":"7944:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7933:2:14","nodeType":"YulIdentifier","src":"7933:2:14"},"nativeSrc":"7933:30:14","nodeType":"YulFunctionCall","src":"7933:30:14"},"nativeSrc":"7930:56:14","nodeType":"YulIf","src":"7930:56:14"},{"nativeSrc":"7996:37:14","nodeType":"YulAssignment","src":"7996:37:14","value":{"arguments":[{"name":"length","nativeSrc":"8026:6:14","nodeType":"YulIdentifier","src":"8026:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8004:21:14","nodeType":"YulIdentifier","src":"8004:21:14"},"nativeSrc":"8004:29:14","nodeType":"YulFunctionCall","src":"8004:29:14"},"variableNames":[{"name":"size","nativeSrc":"7996:4:14","nodeType":"YulIdentifier","src":"7996:4:14"}]},{"nativeSrc":"8070:23:14","nodeType":"YulAssignment","src":"8070:23:14","value":{"arguments":[{"name":"size","nativeSrc":"8082:4:14","nodeType":"YulIdentifier","src":"8082:4:14"},{"kind":"number","nativeSrc":"8088:4:14","nodeType":"YulLiteral","src":"8088:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8078:3:14","nodeType":"YulIdentifier","src":"8078:3:14"},"nativeSrc":"8078:15:14","nodeType":"YulFunctionCall","src":"8078:15:14"},"variableNames":[{"name":"size","nativeSrc":"8070:4:14","nodeType":"YulIdentifier","src":"8070:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7793:307:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7843:6:14","nodeType":"YulTypedName","src":"7843:6:14","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7854:4:14","nodeType":"YulTypedName","src":"7854:4:14","type":""}],"src":"7793:307:14"},{"body":{"nativeSrc":"8170:84:14","nodeType":"YulBlock","src":"8170:84:14","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"8194:3:14","nodeType":"YulIdentifier","src":"8194:3:14"},{"name":"src","nativeSrc":"8199:3:14","nodeType":"YulIdentifier","src":"8199:3:14"},{"name":"length","nativeSrc":"8204:6:14","nodeType":"YulIdentifier","src":"8204:6:14"}],"functionName":{"name":"calldatacopy","nativeSrc":"8181:12:14","nodeType":"YulIdentifier","src":"8181:12:14"},"nativeSrc":"8181:30:14","nodeType":"YulFunctionCall","src":"8181:30:14"},"nativeSrc":"8181:30:14","nodeType":"YulExpressionStatement","src":"8181:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"8231:3:14","nodeType":"YulIdentifier","src":"8231:3:14"},{"name":"length","nativeSrc":"8236:6:14","nodeType":"YulIdentifier","src":"8236:6:14"}],"functionName":{"name":"add","nativeSrc":"8227:3:14","nodeType":"YulIdentifier","src":"8227:3:14"},"nativeSrc":"8227:16:14","nodeType":"YulFunctionCall","src":"8227:16:14"},{"kind":"number","nativeSrc":"8245:1:14","nodeType":"YulLiteral","src":"8245:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"8220:6:14","nodeType":"YulIdentifier","src":"8220:6:14"},"nativeSrc":"8220:27:14","nodeType":"YulFunctionCall","src":"8220:27:14"},"nativeSrc":"8220:27:14","nodeType":"YulExpressionStatement","src":"8220:27:14"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8106:148:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8152:3:14","nodeType":"YulTypedName","src":"8152:3:14","type":""},{"name":"dst","nativeSrc":"8157:3:14","nodeType":"YulTypedName","src":"8157:3:14","type":""},{"name":"length","nativeSrc":"8162:6:14","nodeType":"YulTypedName","src":"8162:6:14","type":""}],"src":"8106:148:14"},{"body":{"nativeSrc":"8343:340:14","nodeType":"YulBlock","src":"8343:340:14","statements":[{"nativeSrc":"8353:74:14","nodeType":"YulAssignment","src":"8353:74:14","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"8419:6:14","nodeType":"YulIdentifier","src":"8419:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"8378:40:14","nodeType":"YulIdentifier","src":"8378:40:14"},"nativeSrc":"8378:48:14","nodeType":"YulFunctionCall","src":"8378:48:14"}],"functionName":{"name":"allocate_memory","nativeSrc":"8362:15:14","nodeType":"YulIdentifier","src":"8362:15:14"},"nativeSrc":"8362:65:14","nodeType":"YulFunctionCall","src":"8362:65:14"},"variableNames":[{"name":"array","nativeSrc":"8353:5:14","nodeType":"YulIdentifier","src":"8353:5:14"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"8443:5:14","nodeType":"YulIdentifier","src":"8443:5:14"},{"name":"length","nativeSrc":"8450:6:14","nodeType":"YulIdentifier","src":"8450:6:14"}],"functionName":{"name":"mstore","nativeSrc":"8436:6:14","nodeType":"YulIdentifier","src":"8436:6:14"},"nativeSrc":"8436:21:14","nodeType":"YulFunctionCall","src":"8436:21:14"},"nativeSrc":"8436:21:14","nodeType":"YulExpressionStatement","src":"8436:21:14"},{"nativeSrc":"8466:27:14","nodeType":"YulVariableDeclaration","src":"8466:27:14","value":{"arguments":[{"name":"array","nativeSrc":"8481:5:14","nodeType":"YulIdentifier","src":"8481:5:14"},{"kind":"number","nativeSrc":"8488:4:14","nodeType":"YulLiteral","src":"8488:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8477:3:14","nodeType":"YulIdentifier","src":"8477:3:14"},"nativeSrc":"8477:16:14","nodeType":"YulFunctionCall","src":"8477:16:14"},"variables":[{"name":"dst","nativeSrc":"8470:3:14","nodeType":"YulTypedName","src":"8470:3:14","type":""}]},{"body":{"nativeSrc":"8531:83:14","nodeType":"YulBlock","src":"8531:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8533:77:14","nodeType":"YulIdentifier","src":"8533:77:14"},"nativeSrc":"8533:79:14","nodeType":"YulFunctionCall","src":"8533:79:14"},"nativeSrc":"8533:79:14","nodeType":"YulExpressionStatement","src":"8533:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8512:3:14","nodeType":"YulIdentifier","src":"8512:3:14"},{"name":"length","nativeSrc":"8517:6:14","nodeType":"YulIdentifier","src":"8517:6:14"}],"functionName":{"name":"add","nativeSrc":"8508:3:14","nodeType":"YulIdentifier","src":"8508:3:14"},"nativeSrc":"8508:16:14","nodeType":"YulFunctionCall","src":"8508:16:14"},{"name":"end","nativeSrc":"8526:3:14","nodeType":"YulIdentifier","src":"8526:3:14"}],"functionName":{"name":"gt","nativeSrc":"8505:2:14","nodeType":"YulIdentifier","src":"8505:2:14"},"nativeSrc":"8505:25:14","nodeType":"YulFunctionCall","src":"8505:25:14"},"nativeSrc":"8502:112:14","nodeType":"YulIf","src":"8502:112:14"},{"expression":{"arguments":[{"name":"src","nativeSrc":"8660:3:14","nodeType":"YulIdentifier","src":"8660:3:14"},{"name":"dst","nativeSrc":"8665:3:14","nodeType":"YulIdentifier","src":"8665:3:14"},{"name":"length","nativeSrc":"8670:6:14","nodeType":"YulIdentifier","src":"8670:6:14"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8623:36:14","nodeType":"YulIdentifier","src":"8623:36:14"},"nativeSrc":"8623:54:14","nodeType":"YulFunctionCall","src":"8623:54:14"},"nativeSrc":"8623:54:14","nodeType":"YulExpressionStatement","src":"8623:54:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8260:423:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8316:3:14","nodeType":"YulTypedName","src":"8316:3:14","type":""},{"name":"length","nativeSrc":"8321:6:14","nodeType":"YulTypedName","src":"8321:6:14","type":""},{"name":"end","nativeSrc":"8329:3:14","nodeType":"YulTypedName","src":"8329:3:14","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8337:5:14","nodeType":"YulTypedName","src":"8337:5:14","type":""}],"src":"8260:423:14"},{"body":{"nativeSrc":"8763:277:14","nodeType":"YulBlock","src":"8763:277:14","statements":[{"body":{"nativeSrc":"8812:83:14","nodeType":"YulBlock","src":"8812:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8814:77:14","nodeType":"YulIdentifier","src":"8814:77:14"},"nativeSrc":"8814:79:14","nodeType":"YulFunctionCall","src":"8814:79:14"},"nativeSrc":"8814:79:14","nodeType":"YulExpressionStatement","src":"8814:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8791:6:14","nodeType":"YulIdentifier","src":"8791:6:14"},{"kind":"number","nativeSrc":"8799:4:14","nodeType":"YulLiteral","src":"8799:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8787:3:14","nodeType":"YulIdentifier","src":"8787:3:14"},"nativeSrc":"8787:17:14","nodeType":"YulFunctionCall","src":"8787:17:14"},{"name":"end","nativeSrc":"8806:3:14","nodeType":"YulIdentifier","src":"8806:3:14"}],"functionName":{"name":"slt","nativeSrc":"8783:3:14","nodeType":"YulIdentifier","src":"8783:3:14"},"nativeSrc":"8783:27:14","nodeType":"YulFunctionCall","src":"8783:27:14"}],"functionName":{"name":"iszero","nativeSrc":"8776:6:14","nodeType":"YulIdentifier","src":"8776:6:14"},"nativeSrc":"8776:35:14","nodeType":"YulFunctionCall","src":"8776:35:14"},"nativeSrc":"8773:122:14","nodeType":"YulIf","src":"8773:122:14"},{"nativeSrc":"8904:34:14","nodeType":"YulVariableDeclaration","src":"8904:34:14","value":{"arguments":[{"name":"offset","nativeSrc":"8931:6:14","nodeType":"YulIdentifier","src":"8931:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"8918:12:14","nodeType":"YulIdentifier","src":"8918:12:14"},"nativeSrc":"8918:20:14","nodeType":"YulFunctionCall","src":"8918:20:14"},"variables":[{"name":"length","nativeSrc":"8908:6:14","nodeType":"YulTypedName","src":"8908:6:14","type":""}]},{"nativeSrc":"8947:87:14","nodeType":"YulAssignment","src":"8947:87:14","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"9007:6:14","nodeType":"YulIdentifier","src":"9007:6:14"},{"kind":"number","nativeSrc":"9015:4:14","nodeType":"YulLiteral","src":"9015:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9003:3:14","nodeType":"YulIdentifier","src":"9003:3:14"},"nativeSrc":"9003:17:14","nodeType":"YulFunctionCall","src":"9003:17:14"},{"name":"length","nativeSrc":"9022:6:14","nodeType":"YulIdentifier","src":"9022:6:14"},{"name":"end","nativeSrc":"9030:3:14","nodeType":"YulIdentifier","src":"9030:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8956:46:14","nodeType":"YulIdentifier","src":"8956:46:14"},"nativeSrc":"8956:78:14","nodeType":"YulFunctionCall","src":"8956:78:14"},"variableNames":[{"name":"array","nativeSrc":"8947:5:14","nodeType":"YulIdentifier","src":"8947:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8702:338:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8741:6:14","nodeType":"YulTypedName","src":"8741:6:14","type":""},{"name":"end","nativeSrc":"8749:3:14","nodeType":"YulTypedName","src":"8749:3:14","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8757:5:14","nodeType":"YulTypedName","src":"8757:5:14","type":""}],"src":"8702:338:14"},{"body":{"nativeSrc":"9172:817:14","nodeType":"YulBlock","src":"9172:817:14","statements":[{"body":{"nativeSrc":"9219:83:14","nodeType":"YulBlock","src":"9219:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9221:77:14","nodeType":"YulIdentifier","src":"9221:77:14"},"nativeSrc":"9221:79:14","nodeType":"YulFunctionCall","src":"9221:79:14"},"nativeSrc":"9221:79:14","nodeType":"YulExpressionStatement","src":"9221:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9193:7:14","nodeType":"YulIdentifier","src":"9193:7:14"},{"name":"headStart","nativeSrc":"9202:9:14","nodeType":"YulIdentifier","src":"9202:9:14"}],"functionName":{"name":"sub","nativeSrc":"9189:3:14","nodeType":"YulIdentifier","src":"9189:3:14"},"nativeSrc":"9189:23:14","nodeType":"YulFunctionCall","src":"9189:23:14"},{"kind":"number","nativeSrc":"9214:3:14","nodeType":"YulLiteral","src":"9214:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"9185:3:14","nodeType":"YulIdentifier","src":"9185:3:14"},"nativeSrc":"9185:33:14","nodeType":"YulFunctionCall","src":"9185:33:14"},"nativeSrc":"9182:120:14","nodeType":"YulIf","src":"9182:120:14"},{"nativeSrc":"9312:117:14","nodeType":"YulBlock","src":"9312:117:14","statements":[{"nativeSrc":"9327:15:14","nodeType":"YulVariableDeclaration","src":"9327:15:14","value":{"kind":"number","nativeSrc":"9341:1:14","nodeType":"YulLiteral","src":"9341:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9331:6:14","nodeType":"YulTypedName","src":"9331:6:14","type":""}]},{"nativeSrc":"9356:63:14","nodeType":"YulAssignment","src":"9356:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9391:9:14","nodeType":"YulIdentifier","src":"9391:9:14"},{"name":"offset","nativeSrc":"9402:6:14","nodeType":"YulIdentifier","src":"9402:6:14"}],"functionName":{"name":"add","nativeSrc":"9387:3:14","nodeType":"YulIdentifier","src":"9387:3:14"},"nativeSrc":"9387:22:14","nodeType":"YulFunctionCall","src":"9387:22:14"},{"name":"dataEnd","nativeSrc":"9411:7:14","nodeType":"YulIdentifier","src":"9411:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9366:20:14","nodeType":"YulIdentifier","src":"9366:20:14"},"nativeSrc":"9366:53:14","nodeType":"YulFunctionCall","src":"9366:53:14"},"variableNames":[{"name":"value0","nativeSrc":"9356:6:14","nodeType":"YulIdentifier","src":"9356:6:14"}]}]},{"nativeSrc":"9439:118:14","nodeType":"YulBlock","src":"9439:118:14","statements":[{"nativeSrc":"9454:16:14","nodeType":"YulVariableDeclaration","src":"9454:16:14","value":{"kind":"number","nativeSrc":"9468:2:14","nodeType":"YulLiteral","src":"9468:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9458:6:14","nodeType":"YulTypedName","src":"9458:6:14","type":""}]},{"nativeSrc":"9484:63:14","nodeType":"YulAssignment","src":"9484:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9519:9:14","nodeType":"YulIdentifier","src":"9519:9:14"},{"name":"offset","nativeSrc":"9530:6:14","nodeType":"YulIdentifier","src":"9530:6:14"}],"functionName":{"name":"add","nativeSrc":"9515:3:14","nodeType":"YulIdentifier","src":"9515:3:14"},"nativeSrc":"9515:22:14","nodeType":"YulFunctionCall","src":"9515:22:14"},{"name":"dataEnd","nativeSrc":"9539:7:14","nodeType":"YulIdentifier","src":"9539:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9494:20:14","nodeType":"YulIdentifier","src":"9494:20:14"},"nativeSrc":"9494:53:14","nodeType":"YulFunctionCall","src":"9494:53:14"},"variableNames":[{"name":"value1","nativeSrc":"9484:6:14","nodeType":"YulIdentifier","src":"9484:6:14"}]}]},{"nativeSrc":"9567:118:14","nodeType":"YulBlock","src":"9567:118:14","statements":[{"nativeSrc":"9582:16:14","nodeType":"YulVariableDeclaration","src":"9582:16:14","value":{"kind":"number","nativeSrc":"9596:2:14","nodeType":"YulLiteral","src":"9596:2:14","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9586:6:14","nodeType":"YulTypedName","src":"9586:6:14","type":""}]},{"nativeSrc":"9612:63:14","nodeType":"YulAssignment","src":"9612:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9647:9:14","nodeType":"YulIdentifier","src":"9647:9:14"},{"name":"offset","nativeSrc":"9658:6:14","nodeType":"YulIdentifier","src":"9658:6:14"}],"functionName":{"name":"add","nativeSrc":"9643:3:14","nodeType":"YulIdentifier","src":"9643:3:14"},"nativeSrc":"9643:22:14","nodeType":"YulFunctionCall","src":"9643:22:14"},{"name":"dataEnd","nativeSrc":"9667:7:14","nodeType":"YulIdentifier","src":"9667:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9622:20:14","nodeType":"YulIdentifier","src":"9622:20:14"},"nativeSrc":"9622:53:14","nodeType":"YulFunctionCall","src":"9622:53:14"},"variableNames":[{"name":"value2","nativeSrc":"9612:6:14","nodeType":"YulIdentifier","src":"9612:6:14"}]}]},{"nativeSrc":"9695:287:14","nodeType":"YulBlock","src":"9695:287:14","statements":[{"nativeSrc":"9710:46:14","nodeType":"YulVariableDeclaration","src":"9710:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9741:9:14","nodeType":"YulIdentifier","src":"9741:9:14"},{"kind":"number","nativeSrc":"9752:2:14","nodeType":"YulLiteral","src":"9752:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9737:3:14","nodeType":"YulIdentifier","src":"9737:3:14"},"nativeSrc":"9737:18:14","nodeType":"YulFunctionCall","src":"9737:18:14"}],"functionName":{"name":"calldataload","nativeSrc":"9724:12:14","nodeType":"YulIdentifier","src":"9724:12:14"},"nativeSrc":"9724:32:14","nodeType":"YulFunctionCall","src":"9724:32:14"},"variables":[{"name":"offset","nativeSrc":"9714:6:14","nodeType":"YulTypedName","src":"9714:6:14","type":""}]},{"body":{"nativeSrc":"9803:83:14","nodeType":"YulBlock","src":"9803:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9805:77:14","nodeType":"YulIdentifier","src":"9805:77:14"},"nativeSrc":"9805:79:14","nodeType":"YulFunctionCall","src":"9805:79:14"},"nativeSrc":"9805:79:14","nodeType":"YulExpressionStatement","src":"9805:79:14"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9775:6:14","nodeType":"YulIdentifier","src":"9775:6:14"},{"kind":"number","nativeSrc":"9783:18:14","nodeType":"YulLiteral","src":"9783:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9772:2:14","nodeType":"YulIdentifier","src":"9772:2:14"},"nativeSrc":"9772:30:14","nodeType":"YulFunctionCall","src":"9772:30:14"},"nativeSrc":"9769:117:14","nodeType":"YulIf","src":"9769:117:14"},{"nativeSrc":"9900:72:14","nodeType":"YulAssignment","src":"9900:72:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9944:9:14","nodeType":"YulIdentifier","src":"9944:9:14"},{"name":"offset","nativeSrc":"9955:6:14","nodeType":"YulIdentifier","src":"9955:6:14"}],"functionName":{"name":"add","nativeSrc":"9940:3:14","nodeType":"YulIdentifier","src":"9940:3:14"},"nativeSrc":"9940:22:14","nodeType":"YulFunctionCall","src":"9940:22:14"},{"name":"dataEnd","nativeSrc":"9964:7:14","nodeType":"YulIdentifier","src":"9964:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"9910:29:14","nodeType":"YulIdentifier","src":"9910:29:14"},"nativeSrc":"9910:62:14","nodeType":"YulFunctionCall","src":"9910:62:14"},"variableNames":[{"name":"value3","nativeSrc":"9900:6:14","nodeType":"YulIdentifier","src":"9900:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"9046:943:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9118:9:14","nodeType":"YulTypedName","src":"9118:9:14","type":""},{"name":"dataEnd","nativeSrc":"9129:7:14","nodeType":"YulTypedName","src":"9129:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9141:6:14","nodeType":"YulTypedName","src":"9141:6:14","type":""},{"name":"value1","nativeSrc":"9149:6:14","nodeType":"YulTypedName","src":"9149:6:14","type":""},{"name":"value2","nativeSrc":"9157:6:14","nodeType":"YulTypedName","src":"9157:6:14","type":""},{"name":"value3","nativeSrc":"9165:6:14","nodeType":"YulTypedName","src":"9165:6:14","type":""}],"src":"9046:943:14"},{"body":{"nativeSrc":"10078:391:14","nodeType":"YulBlock","src":"10078:391:14","statements":[{"body":{"nativeSrc":"10124:83:14","nodeType":"YulBlock","src":"10124:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10126:77:14","nodeType":"YulIdentifier","src":"10126:77:14"},"nativeSrc":"10126:79:14","nodeType":"YulFunctionCall","src":"10126:79:14"},"nativeSrc":"10126:79:14","nodeType":"YulExpressionStatement","src":"10126:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10099:7:14","nodeType":"YulIdentifier","src":"10099:7:14"},{"name":"headStart","nativeSrc":"10108:9:14","nodeType":"YulIdentifier","src":"10108:9:14"}],"functionName":{"name":"sub","nativeSrc":"10095:3:14","nodeType":"YulIdentifier","src":"10095:3:14"},"nativeSrc":"10095:23:14","nodeType":"YulFunctionCall","src":"10095:23:14"},{"kind":"number","nativeSrc":"10120:2:14","nodeType":"YulLiteral","src":"10120:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10091:3:14","nodeType":"YulIdentifier","src":"10091:3:14"},"nativeSrc":"10091:32:14","nodeType":"YulFunctionCall","src":"10091:32:14"},"nativeSrc":"10088:119:14","nodeType":"YulIf","src":"10088:119:14"},{"nativeSrc":"10217:117:14","nodeType":"YulBlock","src":"10217:117:14","statements":[{"nativeSrc":"10232:15:14","nodeType":"YulVariableDeclaration","src":"10232:15:14","value":{"kind":"number","nativeSrc":"10246:1:14","nodeType":"YulLiteral","src":"10246:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10236:6:14","nodeType":"YulTypedName","src":"10236:6:14","type":""}]},{"nativeSrc":"10261:63:14","nodeType":"YulAssignment","src":"10261:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10296:9:14","nodeType":"YulIdentifier","src":"10296:9:14"},{"name":"offset","nativeSrc":"10307:6:14","nodeType":"YulIdentifier","src":"10307:6:14"}],"functionName":{"name":"add","nativeSrc":"10292:3:14","nodeType":"YulIdentifier","src":"10292:3:14"},"nativeSrc":"10292:22:14","nodeType":"YulFunctionCall","src":"10292:22:14"},{"name":"dataEnd","nativeSrc":"10316:7:14","nodeType":"YulIdentifier","src":"10316:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10271:20:14","nodeType":"YulIdentifier","src":"10271:20:14"},"nativeSrc":"10271:53:14","nodeType":"YulFunctionCall","src":"10271:53:14"},"variableNames":[{"name":"value0","nativeSrc":"10261:6:14","nodeType":"YulIdentifier","src":"10261:6:14"}]}]},{"nativeSrc":"10344:118:14","nodeType":"YulBlock","src":"10344:118:14","statements":[{"nativeSrc":"10359:16:14","nodeType":"YulVariableDeclaration","src":"10359:16:14","value":{"kind":"number","nativeSrc":"10373:2:14","nodeType":"YulLiteral","src":"10373:2:14","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10363:6:14","nodeType":"YulTypedName","src":"10363:6:14","type":""}]},{"nativeSrc":"10389:63:14","nodeType":"YulAssignment","src":"10389:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10424:9:14","nodeType":"YulIdentifier","src":"10424:9:14"},{"name":"offset","nativeSrc":"10435:6:14","nodeType":"YulIdentifier","src":"10435:6:14"}],"functionName":{"name":"add","nativeSrc":"10420:3:14","nodeType":"YulIdentifier","src":"10420:3:14"},"nativeSrc":"10420:22:14","nodeType":"YulFunctionCall","src":"10420:22:14"},{"name":"dataEnd","nativeSrc":"10444:7:14","nodeType":"YulIdentifier","src":"10444:7:14"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10399:20:14","nodeType":"YulIdentifier","src":"10399:20:14"},"nativeSrc":"10399:53:14","nodeType":"YulFunctionCall","src":"10399:53:14"},"variableNames":[{"name":"value1","nativeSrc":"10389:6:14","nodeType":"YulIdentifier","src":"10389:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"9995:474:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10040:9:14","nodeType":"YulTypedName","src":"10040:9:14","type":""},{"name":"dataEnd","nativeSrc":"10051:7:14","nodeType":"YulTypedName","src":"10051:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10063:6:14","nodeType":"YulTypedName","src":"10063:6:14","type":""},{"name":"value1","nativeSrc":"10071:6:14","nodeType":"YulTypedName","src":"10071:6:14","type":""}],"src":"9995:474:14"},{"body":{"nativeSrc":"10503:152:14","nodeType":"YulBlock","src":"10503:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10520:1:14","nodeType":"YulLiteral","src":"10520:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"10523:77:14","nodeType":"YulLiteral","src":"10523:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10513:6:14","nodeType":"YulIdentifier","src":"10513:6:14"},"nativeSrc":"10513:88:14","nodeType":"YulFunctionCall","src":"10513:88:14"},"nativeSrc":"10513:88:14","nodeType":"YulExpressionStatement","src":"10513:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10617:1:14","nodeType":"YulLiteral","src":"10617:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"10620:4:14","nodeType":"YulLiteral","src":"10620:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"10610:6:14","nodeType":"YulIdentifier","src":"10610:6:14"},"nativeSrc":"10610:15:14","nodeType":"YulFunctionCall","src":"10610:15:14"},"nativeSrc":"10610:15:14","nodeType":"YulExpressionStatement","src":"10610:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10641:1:14","nodeType":"YulLiteral","src":"10641:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"10644:4:14","nodeType":"YulLiteral","src":"10644:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10634:6:14","nodeType":"YulIdentifier","src":"10634:6:14"},"nativeSrc":"10634:15:14","nodeType":"YulFunctionCall","src":"10634:15:14"},"nativeSrc":"10634:15:14","nodeType":"YulExpressionStatement","src":"10634:15:14"}]},"name":"panic_error_0x22","nativeSrc":"10475:180:14","nodeType":"YulFunctionDefinition","src":"10475:180:14"},{"body":{"nativeSrc":"10712:269:14","nodeType":"YulBlock","src":"10712:269:14","statements":[{"nativeSrc":"10722:22:14","nodeType":"YulAssignment","src":"10722:22:14","value":{"arguments":[{"name":"data","nativeSrc":"10736:4:14","nodeType":"YulIdentifier","src":"10736:4:14"},{"kind":"number","nativeSrc":"10742:1:14","nodeType":"YulLiteral","src":"10742:1:14","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"10732:3:14","nodeType":"YulIdentifier","src":"10732:3:14"},"nativeSrc":"10732:12:14","nodeType":"YulFunctionCall","src":"10732:12:14"},"variableNames":[{"name":"length","nativeSrc":"10722:6:14","nodeType":"YulIdentifier","src":"10722:6:14"}]},{"nativeSrc":"10753:38:14","nodeType":"YulVariableDeclaration","src":"10753:38:14","value":{"arguments":[{"name":"data","nativeSrc":"10783:4:14","nodeType":"YulIdentifier","src":"10783:4:14"},{"kind":"number","nativeSrc":"10789:1:14","nodeType":"YulLiteral","src":"10789:1:14","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"10779:3:14","nodeType":"YulIdentifier","src":"10779:3:14"},"nativeSrc":"10779:12:14","nodeType":"YulFunctionCall","src":"10779:12:14"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"10757:18:14","nodeType":"YulTypedName","src":"10757:18:14","type":""}]},{"body":{"nativeSrc":"10830:51:14","nodeType":"YulBlock","src":"10830:51:14","statements":[{"nativeSrc":"10844:27:14","nodeType":"YulAssignment","src":"10844:27:14","value":{"arguments":[{"name":"length","nativeSrc":"10858:6:14","nodeType":"YulIdentifier","src":"10858:6:14"},{"kind":"number","nativeSrc":"10866:4:14","nodeType":"YulLiteral","src":"10866:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"10854:3:14","nodeType":"YulIdentifier","src":"10854:3:14"},"nativeSrc":"10854:17:14","nodeType":"YulFunctionCall","src":"10854:17:14"},"variableNames":[{"name":"length","nativeSrc":"10844:6:14","nodeType":"YulIdentifier","src":"10844:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"10810:18:14","nodeType":"YulIdentifier","src":"10810:18:14"}],"functionName":{"name":"iszero","nativeSrc":"10803:6:14","nodeType":"YulIdentifier","src":"10803:6:14"},"nativeSrc":"10803:26:14","nodeType":"YulFunctionCall","src":"10803:26:14"},"nativeSrc":"10800:81:14","nodeType":"YulIf","src":"10800:81:14"},{"body":{"nativeSrc":"10933:42:14","nodeType":"YulBlock","src":"10933:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"10947:16:14","nodeType":"YulIdentifier","src":"10947:16:14"},"nativeSrc":"10947:18:14","nodeType":"YulFunctionCall","src":"10947:18:14"},"nativeSrc":"10947:18:14","nodeType":"YulExpressionStatement","src":"10947:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"10897:18:14","nodeType":"YulIdentifier","src":"10897:18:14"},{"arguments":[{"name":"length","nativeSrc":"10920:6:14","nodeType":"YulIdentifier","src":"10920:6:14"},{"kind":"number","nativeSrc":"10928:2:14","nodeType":"YulLiteral","src":"10928:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"10917:2:14","nodeType":"YulIdentifier","src":"10917:2:14"},"nativeSrc":"10917:14:14","nodeType":"YulFunctionCall","src":"10917:14:14"}],"functionName":{"name":"eq","nativeSrc":"10894:2:14","nodeType":"YulIdentifier","src":"10894:2:14"},"nativeSrc":"10894:38:14","nodeType":"YulFunctionCall","src":"10894:38:14"},"nativeSrc":"10891:84:14","nodeType":"YulIf","src":"10891:84:14"}]},"name":"extract_byte_array_length","nativeSrc":"10661:320:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"10696:4:14","nodeType":"YulTypedName","src":"10696:4:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"10705:6:14","nodeType":"YulTypedName","src":"10705:6:14","type":""}],"src":"10661:320:14"},{"body":{"nativeSrc":"11093:114:14","nodeType":"YulBlock","src":"11093:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11115:6:14","nodeType":"YulIdentifier","src":"11115:6:14"},{"kind":"number","nativeSrc":"11123:1:14","nodeType":"YulLiteral","src":"11123:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11111:3:14","nodeType":"YulIdentifier","src":"11111:3:14"},"nativeSrc":"11111:14:14","nodeType":"YulFunctionCall","src":"11111:14:14"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nativeSrc":"11127:34:14","nodeType":"YulLiteral","src":"11127:34:14","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nativeSrc":"11104:6:14","nodeType":"YulIdentifier","src":"11104:6:14"},"nativeSrc":"11104:58:14","nodeType":"YulFunctionCall","src":"11104:58:14"},"nativeSrc":"11104:58:14","nodeType":"YulExpressionStatement","src":"11104:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11183:6:14","nodeType":"YulIdentifier","src":"11183:6:14"},{"kind":"number","nativeSrc":"11191:2:14","nodeType":"YulLiteral","src":"11191:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11179:3:14","nodeType":"YulIdentifier","src":"11179:3:14"},"nativeSrc":"11179:15:14","nodeType":"YulFunctionCall","src":"11179:15:14"},{"hexValue":"72","kind":"string","nativeSrc":"11196:3:14","nodeType":"YulLiteral","src":"11196:3:14","type":"","value":"r"}],"functionName":{"name":"mstore","nativeSrc":"11172:6:14","nodeType":"YulIdentifier","src":"11172:6:14"},"nativeSrc":"11172:28:14","nodeType":"YulFunctionCall","src":"11172:28:14"},"nativeSrc":"11172:28:14","nodeType":"YulExpressionStatement","src":"11172:28:14"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nativeSrc":"10987:220:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11085:6:14","nodeType":"YulTypedName","src":"11085:6:14","type":""}],"src":"10987:220:14"},{"body":{"nativeSrc":"11359:220:14","nodeType":"YulBlock","src":"11359:220:14","statements":[{"nativeSrc":"11369:74:14","nodeType":"YulAssignment","src":"11369:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"11435:3:14","nodeType":"YulIdentifier","src":"11435:3:14"},{"kind":"number","nativeSrc":"11440:2:14","nodeType":"YulLiteral","src":"11440:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11376:58:14","nodeType":"YulIdentifier","src":"11376:58:14"},"nativeSrc":"11376:67:14","nodeType":"YulFunctionCall","src":"11376:67:14"},"variableNames":[{"name":"pos","nativeSrc":"11369:3:14","nodeType":"YulIdentifier","src":"11369:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11541:3:14","nodeType":"YulIdentifier","src":"11541:3:14"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nativeSrc":"11452:88:14","nodeType":"YulIdentifier","src":"11452:88:14"},"nativeSrc":"11452:93:14","nodeType":"YulFunctionCall","src":"11452:93:14"},"nativeSrc":"11452:93:14","nodeType":"YulExpressionStatement","src":"11452:93:14"},{"nativeSrc":"11554:19:14","nodeType":"YulAssignment","src":"11554:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"11565:3:14","nodeType":"YulIdentifier","src":"11565:3:14"},{"kind":"number","nativeSrc":"11570:2:14","nodeType":"YulLiteral","src":"11570:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11561:3:14","nodeType":"YulIdentifier","src":"11561:3:14"},"nativeSrc":"11561:12:14","nodeType":"YulFunctionCall","src":"11561:12:14"},"variableNames":[{"name":"end","nativeSrc":"11554:3:14","nodeType":"YulIdentifier","src":"11554:3:14"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nativeSrc":"11213:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11347:3:14","nodeType":"YulTypedName","src":"11347:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11355:3:14","nodeType":"YulTypedName","src":"11355:3:14","type":""}],"src":"11213:366:14"},{"body":{"nativeSrc":"11756:248:14","nodeType":"YulBlock","src":"11756:248:14","statements":[{"nativeSrc":"11766:26:14","nodeType":"YulAssignment","src":"11766:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"11778:9:14","nodeType":"YulIdentifier","src":"11778:9:14"},{"kind":"number","nativeSrc":"11789:2:14","nodeType":"YulLiteral","src":"11789:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11774:3:14","nodeType":"YulIdentifier","src":"11774:3:14"},"nativeSrc":"11774:18:14","nodeType":"YulFunctionCall","src":"11774:18:14"},"variableNames":[{"name":"tail","nativeSrc":"11766:4:14","nodeType":"YulIdentifier","src":"11766:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11813:9:14","nodeType":"YulIdentifier","src":"11813:9:14"},{"kind":"number","nativeSrc":"11824:1:14","nodeType":"YulLiteral","src":"11824:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11809:3:14","nodeType":"YulIdentifier","src":"11809:3:14"},"nativeSrc":"11809:17:14","nodeType":"YulFunctionCall","src":"11809:17:14"},{"arguments":[{"name":"tail","nativeSrc":"11832:4:14","nodeType":"YulIdentifier","src":"11832:4:14"},{"name":"headStart","nativeSrc":"11838:9:14","nodeType":"YulIdentifier","src":"11838:9:14"}],"functionName":{"name":"sub","nativeSrc":"11828:3:14","nodeType":"YulIdentifier","src":"11828:3:14"},"nativeSrc":"11828:20:14","nodeType":"YulFunctionCall","src":"11828:20:14"}],"functionName":{"name":"mstore","nativeSrc":"11802:6:14","nodeType":"YulIdentifier","src":"11802:6:14"},"nativeSrc":"11802:47:14","nodeType":"YulFunctionCall","src":"11802:47:14"},"nativeSrc":"11802:47:14","nodeType":"YulExpressionStatement","src":"11802:47:14"},{"nativeSrc":"11858:139:14","nodeType":"YulAssignment","src":"11858:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"11992:4:14","nodeType":"YulIdentifier","src":"11992:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nativeSrc":"11866:124:14","nodeType":"YulIdentifier","src":"11866:124:14"},"nativeSrc":"11866:131:14","nodeType":"YulFunctionCall","src":"11866:131:14"},"variableNames":[{"name":"tail","nativeSrc":"11858:4:14","nodeType":"YulIdentifier","src":"11858:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11585:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11736:9:14","nodeType":"YulTypedName","src":"11736:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11751:4:14","nodeType":"YulTypedName","src":"11751:4:14","type":""}],"src":"11585:419:14"},{"body":{"nativeSrc":"12116:142:14","nodeType":"YulBlock","src":"12116:142:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12138:6:14","nodeType":"YulIdentifier","src":"12138:6:14"},{"kind":"number","nativeSrc":"12146:1:14","nodeType":"YulLiteral","src":"12146:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12134:3:14","nodeType":"YulIdentifier","src":"12134:3:14"},"nativeSrc":"12134:14:14","nodeType":"YulFunctionCall","src":"12134:14:14"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nativeSrc":"12150:34:14","nodeType":"YulLiteral","src":"12150:34:14","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nativeSrc":"12127:6:14","nodeType":"YulIdentifier","src":"12127:6:14"},"nativeSrc":"12127:58:14","nodeType":"YulFunctionCall","src":"12127:58:14"},"nativeSrc":"12127:58:14","nodeType":"YulExpressionStatement","src":"12127:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12206:6:14","nodeType":"YulIdentifier","src":"12206:6:14"},{"kind":"number","nativeSrc":"12214:2:14","nodeType":"YulLiteral","src":"12214:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12202:3:14","nodeType":"YulIdentifier","src":"12202:3:14"},"nativeSrc":"12202:15:14","nodeType":"YulFunctionCall","src":"12202:15:14"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nativeSrc":"12219:31:14","nodeType":"YulLiteral","src":"12219:31:14","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nativeSrc":"12195:6:14","nodeType":"YulIdentifier","src":"12195:6:14"},"nativeSrc":"12195:56:14","nodeType":"YulFunctionCall","src":"12195:56:14"},"nativeSrc":"12195:56:14","nodeType":"YulExpressionStatement","src":"12195:56:14"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nativeSrc":"12010:248:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12108:6:14","nodeType":"YulTypedName","src":"12108:6:14","type":""}],"src":"12010:248:14"},{"body":{"nativeSrc":"12410:220:14","nodeType":"YulBlock","src":"12410:220:14","statements":[{"nativeSrc":"12420:74:14","nodeType":"YulAssignment","src":"12420:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"12486:3:14","nodeType":"YulIdentifier","src":"12486:3:14"},{"kind":"number","nativeSrc":"12491:2:14","nodeType":"YulLiteral","src":"12491:2:14","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12427:58:14","nodeType":"YulIdentifier","src":"12427:58:14"},"nativeSrc":"12427:67:14","nodeType":"YulFunctionCall","src":"12427:67:14"},"variableNames":[{"name":"pos","nativeSrc":"12420:3:14","nodeType":"YulIdentifier","src":"12420:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12592:3:14","nodeType":"YulIdentifier","src":"12592:3:14"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nativeSrc":"12503:88:14","nodeType":"YulIdentifier","src":"12503:88:14"},"nativeSrc":"12503:93:14","nodeType":"YulFunctionCall","src":"12503:93:14"},"nativeSrc":"12503:93:14","nodeType":"YulExpressionStatement","src":"12503:93:14"},{"nativeSrc":"12605:19:14","nodeType":"YulAssignment","src":"12605:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"12616:3:14","nodeType":"YulIdentifier","src":"12616:3:14"},{"kind":"number","nativeSrc":"12621:2:14","nodeType":"YulLiteral","src":"12621:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12612:3:14","nodeType":"YulIdentifier","src":"12612:3:14"},"nativeSrc":"12612:12:14","nodeType":"YulFunctionCall","src":"12612:12:14"},"variableNames":[{"name":"end","nativeSrc":"12605:3:14","nodeType":"YulIdentifier","src":"12605:3:14"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nativeSrc":"12264:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12398:3:14","nodeType":"YulTypedName","src":"12398:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12406:3:14","nodeType":"YulTypedName","src":"12406:3:14","type":""}],"src":"12264:366:14"},{"body":{"nativeSrc":"12807:248:14","nodeType":"YulBlock","src":"12807:248:14","statements":[{"nativeSrc":"12817:26:14","nodeType":"YulAssignment","src":"12817:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"12829:9:14","nodeType":"YulIdentifier","src":"12829:9:14"},{"kind":"number","nativeSrc":"12840:2:14","nodeType":"YulLiteral","src":"12840:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12825:3:14","nodeType":"YulIdentifier","src":"12825:3:14"},"nativeSrc":"12825:18:14","nodeType":"YulFunctionCall","src":"12825:18:14"},"variableNames":[{"name":"tail","nativeSrc":"12817:4:14","nodeType":"YulIdentifier","src":"12817:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12864:9:14","nodeType":"YulIdentifier","src":"12864:9:14"},{"kind":"number","nativeSrc":"12875:1:14","nodeType":"YulLiteral","src":"12875:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12860:3:14","nodeType":"YulIdentifier","src":"12860:3:14"},"nativeSrc":"12860:17:14","nodeType":"YulFunctionCall","src":"12860:17:14"},{"arguments":[{"name":"tail","nativeSrc":"12883:4:14","nodeType":"YulIdentifier","src":"12883:4:14"},{"name":"headStart","nativeSrc":"12889:9:14","nodeType":"YulIdentifier","src":"12889:9:14"}],"functionName":{"name":"sub","nativeSrc":"12879:3:14","nodeType":"YulIdentifier","src":"12879:3:14"},"nativeSrc":"12879:20:14","nodeType":"YulFunctionCall","src":"12879:20:14"}],"functionName":{"name":"mstore","nativeSrc":"12853:6:14","nodeType":"YulIdentifier","src":"12853:6:14"},"nativeSrc":"12853:47:14","nodeType":"YulFunctionCall","src":"12853:47:14"},"nativeSrc":"12853:47:14","nodeType":"YulExpressionStatement","src":"12853:47:14"},{"nativeSrc":"12909:139:14","nodeType":"YulAssignment","src":"12909:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"13043:4:14","nodeType":"YulIdentifier","src":"13043:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nativeSrc":"12917:124:14","nodeType":"YulIdentifier","src":"12917:124:14"},"nativeSrc":"12917:131:14","nodeType":"YulFunctionCall","src":"12917:131:14"},"variableNames":[{"name":"tail","nativeSrc":"12909:4:14","nodeType":"YulIdentifier","src":"12909:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12636:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12787:9:14","nodeType":"YulTypedName","src":"12787:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12802:4:14","nodeType":"YulTypedName","src":"12802:4:14","type":""}],"src":"12636:419:14"},{"body":{"nativeSrc":"13167:126:14","nodeType":"YulBlock","src":"13167:126:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13189:6:14","nodeType":"YulIdentifier","src":"13189:6:14"},{"kind":"number","nativeSrc":"13197:1:14","nodeType":"YulLiteral","src":"13197:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13185:3:14","nodeType":"YulIdentifier","src":"13185:3:14"},"nativeSrc":"13185:14:14","nodeType":"YulFunctionCall","src":"13185:14:14"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nativeSrc":"13201:34:14","nodeType":"YulLiteral","src":"13201:34:14","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nativeSrc":"13178:6:14","nodeType":"YulIdentifier","src":"13178:6:14"},"nativeSrc":"13178:58:14","nodeType":"YulFunctionCall","src":"13178:58:14"},"nativeSrc":"13178:58:14","nodeType":"YulExpressionStatement","src":"13178:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13257:6:14","nodeType":"YulIdentifier","src":"13257:6:14"},{"kind":"number","nativeSrc":"13265:2:14","nodeType":"YulLiteral","src":"13265:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13253:3:14","nodeType":"YulIdentifier","src":"13253:3:14"},"nativeSrc":"13253:15:14","nodeType":"YulFunctionCall","src":"13253:15:14"},{"hexValue":"72206f7220617070726f766564","kind":"string","nativeSrc":"13270:15:14","nodeType":"YulLiteral","src":"13270:15:14","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nativeSrc":"13246:6:14","nodeType":"YulIdentifier","src":"13246:6:14"},"nativeSrc":"13246:40:14","nodeType":"YulFunctionCall","src":"13246:40:14"},"nativeSrc":"13246:40:14","nodeType":"YulExpressionStatement","src":"13246:40:14"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nativeSrc":"13061:232:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13159:6:14","nodeType":"YulTypedName","src":"13159:6:14","type":""}],"src":"13061:232:14"},{"body":{"nativeSrc":"13445:220:14","nodeType":"YulBlock","src":"13445:220:14","statements":[{"nativeSrc":"13455:74:14","nodeType":"YulAssignment","src":"13455:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"13521:3:14","nodeType":"YulIdentifier","src":"13521:3:14"},{"kind":"number","nativeSrc":"13526:2:14","nodeType":"YulLiteral","src":"13526:2:14","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13462:58:14","nodeType":"YulIdentifier","src":"13462:58:14"},"nativeSrc":"13462:67:14","nodeType":"YulFunctionCall","src":"13462:67:14"},"variableNames":[{"name":"pos","nativeSrc":"13455:3:14","nodeType":"YulIdentifier","src":"13455:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13627:3:14","nodeType":"YulIdentifier","src":"13627:3:14"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nativeSrc":"13538:88:14","nodeType":"YulIdentifier","src":"13538:88:14"},"nativeSrc":"13538:93:14","nodeType":"YulFunctionCall","src":"13538:93:14"},"nativeSrc":"13538:93:14","nodeType":"YulExpressionStatement","src":"13538:93:14"},{"nativeSrc":"13640:19:14","nodeType":"YulAssignment","src":"13640:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"13651:3:14","nodeType":"YulIdentifier","src":"13651:3:14"},{"kind":"number","nativeSrc":"13656:2:14","nodeType":"YulLiteral","src":"13656:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13647:3:14","nodeType":"YulIdentifier","src":"13647:3:14"},"nativeSrc":"13647:12:14","nodeType":"YulFunctionCall","src":"13647:12:14"},"variableNames":[{"name":"end","nativeSrc":"13640:3:14","nodeType":"YulIdentifier","src":"13640:3:14"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nativeSrc":"13299:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13433:3:14","nodeType":"YulTypedName","src":"13433:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13441:3:14","nodeType":"YulTypedName","src":"13441:3:14","type":""}],"src":"13299:366:14"},{"body":{"nativeSrc":"13842:248:14","nodeType":"YulBlock","src":"13842:248:14","statements":[{"nativeSrc":"13852:26:14","nodeType":"YulAssignment","src":"13852:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"13864:9:14","nodeType":"YulIdentifier","src":"13864:9:14"},{"kind":"number","nativeSrc":"13875:2:14","nodeType":"YulLiteral","src":"13875:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13860:3:14","nodeType":"YulIdentifier","src":"13860:3:14"},"nativeSrc":"13860:18:14","nodeType":"YulFunctionCall","src":"13860:18:14"},"variableNames":[{"name":"tail","nativeSrc":"13852:4:14","nodeType":"YulIdentifier","src":"13852:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13899:9:14","nodeType":"YulIdentifier","src":"13899:9:14"},{"kind":"number","nativeSrc":"13910:1:14","nodeType":"YulLiteral","src":"13910:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13895:3:14","nodeType":"YulIdentifier","src":"13895:3:14"},"nativeSrc":"13895:17:14","nodeType":"YulFunctionCall","src":"13895:17:14"},{"arguments":[{"name":"tail","nativeSrc":"13918:4:14","nodeType":"YulIdentifier","src":"13918:4:14"},{"name":"headStart","nativeSrc":"13924:9:14","nodeType":"YulIdentifier","src":"13924:9:14"}],"functionName":{"name":"sub","nativeSrc":"13914:3:14","nodeType":"YulIdentifier","src":"13914:3:14"},"nativeSrc":"13914:20:14","nodeType":"YulFunctionCall","src":"13914:20:14"}],"functionName":{"name":"mstore","nativeSrc":"13888:6:14","nodeType":"YulIdentifier","src":"13888:6:14"},"nativeSrc":"13888:47:14","nodeType":"YulFunctionCall","src":"13888:47:14"},"nativeSrc":"13888:47:14","nodeType":"YulExpressionStatement","src":"13888:47:14"},{"nativeSrc":"13944:139:14","nodeType":"YulAssignment","src":"13944:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"14078:4:14","nodeType":"YulIdentifier","src":"14078:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nativeSrc":"13952:124:14","nodeType":"YulIdentifier","src":"13952:124:14"},"nativeSrc":"13952:131:14","nodeType":"YulFunctionCall","src":"13952:131:14"},"variableNames":[{"name":"tail","nativeSrc":"13944:4:14","nodeType":"YulIdentifier","src":"13944:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13671:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13822:9:14","nodeType":"YulTypedName","src":"13822:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13837:4:14","nodeType":"YulTypedName","src":"13837:4:14","type":""}],"src":"13671:419:14"},{"body":{"nativeSrc":"14202:68:14","nodeType":"YulBlock","src":"14202:68:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14224:6:14","nodeType":"YulIdentifier","src":"14224:6:14"},{"kind":"number","nativeSrc":"14232:1:14","nodeType":"YulLiteral","src":"14232:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14220:3:14","nodeType":"YulIdentifier","src":"14220:3:14"},"nativeSrc":"14220:14:14","nodeType":"YulFunctionCall","src":"14220:14:14"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nativeSrc":"14236:26:14","nodeType":"YulLiteral","src":"14236:26:14","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nativeSrc":"14213:6:14","nodeType":"YulIdentifier","src":"14213:6:14"},"nativeSrc":"14213:50:14","nodeType":"YulFunctionCall","src":"14213:50:14"},"nativeSrc":"14213:50:14","nodeType":"YulExpressionStatement","src":"14213:50:14"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nativeSrc":"14096:174:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14194:6:14","nodeType":"YulTypedName","src":"14194:6:14","type":""}],"src":"14096:174:14"},{"body":{"nativeSrc":"14422:220:14","nodeType":"YulBlock","src":"14422:220:14","statements":[{"nativeSrc":"14432:74:14","nodeType":"YulAssignment","src":"14432:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"14498:3:14","nodeType":"YulIdentifier","src":"14498:3:14"},{"kind":"number","nativeSrc":"14503:2:14","nodeType":"YulLiteral","src":"14503:2:14","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14439:58:14","nodeType":"YulIdentifier","src":"14439:58:14"},"nativeSrc":"14439:67:14","nodeType":"YulFunctionCall","src":"14439:67:14"},"variableNames":[{"name":"pos","nativeSrc":"14432:3:14","nodeType":"YulIdentifier","src":"14432:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14604:3:14","nodeType":"YulIdentifier","src":"14604:3:14"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nativeSrc":"14515:88:14","nodeType":"YulIdentifier","src":"14515:88:14"},"nativeSrc":"14515:93:14","nodeType":"YulFunctionCall","src":"14515:93:14"},"nativeSrc":"14515:93:14","nodeType":"YulExpressionStatement","src":"14515:93:14"},{"nativeSrc":"14617:19:14","nodeType":"YulAssignment","src":"14617:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"14628:3:14","nodeType":"YulIdentifier","src":"14628:3:14"},{"kind":"number","nativeSrc":"14633:2:14","nodeType":"YulLiteral","src":"14633:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14624:3:14","nodeType":"YulIdentifier","src":"14624:3:14"},"nativeSrc":"14624:12:14","nodeType":"YulFunctionCall","src":"14624:12:14"},"variableNames":[{"name":"end","nativeSrc":"14617:3:14","nodeType":"YulIdentifier","src":"14617:3:14"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nativeSrc":"14276:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14410:3:14","nodeType":"YulTypedName","src":"14410:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14418:3:14","nodeType":"YulTypedName","src":"14418:3:14","type":""}],"src":"14276:366:14"},{"body":{"nativeSrc":"14819:248:14","nodeType":"YulBlock","src":"14819:248:14","statements":[{"nativeSrc":"14829:26:14","nodeType":"YulAssignment","src":"14829:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"14841:9:14","nodeType":"YulIdentifier","src":"14841:9:14"},{"kind":"number","nativeSrc":"14852:2:14","nodeType":"YulLiteral","src":"14852:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14837:3:14","nodeType":"YulIdentifier","src":"14837:3:14"},"nativeSrc":"14837:18:14","nodeType":"YulFunctionCall","src":"14837:18:14"},"variableNames":[{"name":"tail","nativeSrc":"14829:4:14","nodeType":"YulIdentifier","src":"14829:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14876:9:14","nodeType":"YulIdentifier","src":"14876:9:14"},{"kind":"number","nativeSrc":"14887:1:14","nodeType":"YulLiteral","src":"14887:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14872:3:14","nodeType":"YulIdentifier","src":"14872:3:14"},"nativeSrc":"14872:17:14","nodeType":"YulFunctionCall","src":"14872:17:14"},{"arguments":[{"name":"tail","nativeSrc":"14895:4:14","nodeType":"YulIdentifier","src":"14895:4:14"},{"name":"headStart","nativeSrc":"14901:9:14","nodeType":"YulIdentifier","src":"14901:9:14"}],"functionName":{"name":"sub","nativeSrc":"14891:3:14","nodeType":"YulIdentifier","src":"14891:3:14"},"nativeSrc":"14891:20:14","nodeType":"YulFunctionCall","src":"14891:20:14"}],"functionName":{"name":"mstore","nativeSrc":"14865:6:14","nodeType":"YulIdentifier","src":"14865:6:14"},"nativeSrc":"14865:47:14","nodeType":"YulFunctionCall","src":"14865:47:14"},"nativeSrc":"14865:47:14","nodeType":"YulExpressionStatement","src":"14865:47:14"},{"nativeSrc":"14921:139:14","nodeType":"YulAssignment","src":"14921:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"15055:4:14","nodeType":"YulIdentifier","src":"15055:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nativeSrc":"14929:124:14","nodeType":"YulIdentifier","src":"14929:124:14"},"nativeSrc":"14929:131:14","nodeType":"YulFunctionCall","src":"14929:131:14"},"variableNames":[{"name":"tail","nativeSrc":"14921:4:14","nodeType":"YulIdentifier","src":"14921:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14648:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14799:9:14","nodeType":"YulTypedName","src":"14799:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14814:4:14","nodeType":"YulTypedName","src":"14814:4:14","type":""}],"src":"14648:419:14"},{"body":{"nativeSrc":"15179:122:14","nodeType":"YulBlock","src":"15179:122:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15201:6:14","nodeType":"YulIdentifier","src":"15201:6:14"},{"kind":"number","nativeSrc":"15209:1:14","nodeType":"YulLiteral","src":"15209:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15197:3:14","nodeType":"YulIdentifier","src":"15197:3:14"},"nativeSrc":"15197:14:14","nodeType":"YulFunctionCall","src":"15197:14:14"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nativeSrc":"15213:34:14","nodeType":"YulLiteral","src":"15213:34:14","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nativeSrc":"15190:6:14","nodeType":"YulIdentifier","src":"15190:6:14"},"nativeSrc":"15190:58:14","nodeType":"YulFunctionCall","src":"15190:58:14"},"nativeSrc":"15190:58:14","nodeType":"YulExpressionStatement","src":"15190:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15269:6:14","nodeType":"YulIdentifier","src":"15269:6:14"},{"kind":"number","nativeSrc":"15277:2:14","nodeType":"YulLiteral","src":"15277:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15265:3:14","nodeType":"YulIdentifier","src":"15265:3:14"},"nativeSrc":"15265:15:14","nodeType":"YulFunctionCall","src":"15265:15:14"},{"hexValue":"6c6964206f776e6572","kind":"string","nativeSrc":"15282:11:14","nodeType":"YulLiteral","src":"15282:11:14","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nativeSrc":"15258:6:14","nodeType":"YulIdentifier","src":"15258:6:14"},"nativeSrc":"15258:36:14","nodeType":"YulFunctionCall","src":"15258:36:14"},"nativeSrc":"15258:36:14","nodeType":"YulExpressionStatement","src":"15258:36:14"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nativeSrc":"15073:228:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15171:6:14","nodeType":"YulTypedName","src":"15171:6:14","type":""}],"src":"15073:228:14"},{"body":{"nativeSrc":"15453:220:14","nodeType":"YulBlock","src":"15453:220:14","statements":[{"nativeSrc":"15463:74:14","nodeType":"YulAssignment","src":"15463:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"15529:3:14","nodeType":"YulIdentifier","src":"15529:3:14"},{"kind":"number","nativeSrc":"15534:2:14","nodeType":"YulLiteral","src":"15534:2:14","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15470:58:14","nodeType":"YulIdentifier","src":"15470:58:14"},"nativeSrc":"15470:67:14","nodeType":"YulFunctionCall","src":"15470:67:14"},"variableNames":[{"name":"pos","nativeSrc":"15463:3:14","nodeType":"YulIdentifier","src":"15463:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15635:3:14","nodeType":"YulIdentifier","src":"15635:3:14"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nativeSrc":"15546:88:14","nodeType":"YulIdentifier","src":"15546:88:14"},"nativeSrc":"15546:93:14","nodeType":"YulFunctionCall","src":"15546:93:14"},"nativeSrc":"15546:93:14","nodeType":"YulExpressionStatement","src":"15546:93:14"},{"nativeSrc":"15648:19:14","nodeType":"YulAssignment","src":"15648:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"15659:3:14","nodeType":"YulIdentifier","src":"15659:3:14"},{"kind":"number","nativeSrc":"15664:2:14","nodeType":"YulLiteral","src":"15664:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15655:3:14","nodeType":"YulIdentifier","src":"15655:3:14"},"nativeSrc":"15655:12:14","nodeType":"YulFunctionCall","src":"15655:12:14"},"variableNames":[{"name":"end","nativeSrc":"15648:3:14","nodeType":"YulIdentifier","src":"15648:3:14"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nativeSrc":"15307:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15441:3:14","nodeType":"YulTypedName","src":"15441:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15449:3:14","nodeType":"YulTypedName","src":"15449:3:14","type":""}],"src":"15307:366:14"},{"body":{"nativeSrc":"15850:248:14","nodeType":"YulBlock","src":"15850:248:14","statements":[{"nativeSrc":"15860:26:14","nodeType":"YulAssignment","src":"15860:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"15872:9:14","nodeType":"YulIdentifier","src":"15872:9:14"},{"kind":"number","nativeSrc":"15883:2:14","nodeType":"YulLiteral","src":"15883:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15868:3:14","nodeType":"YulIdentifier","src":"15868:3:14"},"nativeSrc":"15868:18:14","nodeType":"YulFunctionCall","src":"15868:18:14"},"variableNames":[{"name":"tail","nativeSrc":"15860:4:14","nodeType":"YulIdentifier","src":"15860:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15907:9:14","nodeType":"YulIdentifier","src":"15907:9:14"},{"kind":"number","nativeSrc":"15918:1:14","nodeType":"YulLiteral","src":"15918:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15903:3:14","nodeType":"YulIdentifier","src":"15903:3:14"},"nativeSrc":"15903:17:14","nodeType":"YulFunctionCall","src":"15903:17:14"},{"arguments":[{"name":"tail","nativeSrc":"15926:4:14","nodeType":"YulIdentifier","src":"15926:4:14"},{"name":"headStart","nativeSrc":"15932:9:14","nodeType":"YulIdentifier","src":"15932:9:14"}],"functionName":{"name":"sub","nativeSrc":"15922:3:14","nodeType":"YulIdentifier","src":"15922:3:14"},"nativeSrc":"15922:20:14","nodeType":"YulFunctionCall","src":"15922:20:14"}],"functionName":{"name":"mstore","nativeSrc":"15896:6:14","nodeType":"YulIdentifier","src":"15896:6:14"},"nativeSrc":"15896:47:14","nodeType":"YulFunctionCall","src":"15896:47:14"},"nativeSrc":"15896:47:14","nodeType":"YulExpressionStatement","src":"15896:47:14"},{"nativeSrc":"15952:139:14","nodeType":"YulAssignment","src":"15952:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"16086:4:14","nodeType":"YulIdentifier","src":"16086:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nativeSrc":"15960:124:14","nodeType":"YulIdentifier","src":"15960:124:14"},"nativeSrc":"15960:131:14","nodeType":"YulFunctionCall","src":"15960:131:14"},"variableNames":[{"name":"tail","nativeSrc":"15952:4:14","nodeType":"YulIdentifier","src":"15952:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15679:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15830:9:14","nodeType":"YulTypedName","src":"15830:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15845:4:14","nodeType":"YulTypedName","src":"15845:4:14","type":""}],"src":"15679:419:14"},{"body":{"nativeSrc":"16132:152:14","nodeType":"YulBlock","src":"16132:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16149:1:14","nodeType":"YulLiteral","src":"16149:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"16152:77:14","nodeType":"YulLiteral","src":"16152:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16142:6:14","nodeType":"YulIdentifier","src":"16142:6:14"},"nativeSrc":"16142:88:14","nodeType":"YulFunctionCall","src":"16142:88:14"},"nativeSrc":"16142:88:14","nodeType":"YulExpressionStatement","src":"16142:88:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16246:1:14","nodeType":"YulLiteral","src":"16246:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"16249:4:14","nodeType":"YulLiteral","src":"16249:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"16239:6:14","nodeType":"YulIdentifier","src":"16239:6:14"},"nativeSrc":"16239:15:14","nodeType":"YulFunctionCall","src":"16239:15:14"},"nativeSrc":"16239:15:14","nodeType":"YulExpressionStatement","src":"16239:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16270:1:14","nodeType":"YulLiteral","src":"16270:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"16273:4:14","nodeType":"YulLiteral","src":"16273:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16263:6:14","nodeType":"YulIdentifier","src":"16263:6:14"},"nativeSrc":"16263:15:14","nodeType":"YulFunctionCall","src":"16263:15:14"},"nativeSrc":"16263:15:14","nodeType":"YulExpressionStatement","src":"16263:15:14"}]},"name":"panic_error_0x11","nativeSrc":"16104:180:14","nodeType":"YulFunctionDefinition","src":"16104:180:14"},{"body":{"nativeSrc":"16334:147:14","nodeType":"YulBlock","src":"16334:147:14","statements":[{"nativeSrc":"16344:25:14","nodeType":"YulAssignment","src":"16344:25:14","value":{"arguments":[{"name":"x","nativeSrc":"16367:1:14","nodeType":"YulIdentifier","src":"16367:1:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16349:17:14","nodeType":"YulIdentifier","src":"16349:17:14"},"nativeSrc":"16349:20:14","nodeType":"YulFunctionCall","src":"16349:20:14"},"variableNames":[{"name":"x","nativeSrc":"16344:1:14","nodeType":"YulIdentifier","src":"16344:1:14"}]},{"nativeSrc":"16378:25:14","nodeType":"YulAssignment","src":"16378:25:14","value":{"arguments":[{"name":"y","nativeSrc":"16401:1:14","nodeType":"YulIdentifier","src":"16401:1:14"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16383:17:14","nodeType":"YulIdentifier","src":"16383:17:14"},"nativeSrc":"16383:20:14","nodeType":"YulFunctionCall","src":"16383:20:14"},"variableNames":[{"name":"y","nativeSrc":"16378:1:14","nodeType":"YulIdentifier","src":"16378:1:14"}]},{"nativeSrc":"16412:16:14","nodeType":"YulAssignment","src":"16412:16:14","value":{"arguments":[{"name":"x","nativeSrc":"16423:1:14","nodeType":"YulIdentifier","src":"16423:1:14"},{"name":"y","nativeSrc":"16426:1:14","nodeType":"YulIdentifier","src":"16426:1:14"}],"functionName":{"name":"add","nativeSrc":"16419:3:14","nodeType":"YulIdentifier","src":"16419:3:14"},"nativeSrc":"16419:9:14","nodeType":"YulFunctionCall","src":"16419:9:14"},"variableNames":[{"name":"sum","nativeSrc":"16412:3:14","nodeType":"YulIdentifier","src":"16412:3:14"}]},{"body":{"nativeSrc":"16452:22:14","nodeType":"YulBlock","src":"16452:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"16454:16:14","nodeType":"YulIdentifier","src":"16454:16:14"},"nativeSrc":"16454:18:14","nodeType":"YulFunctionCall","src":"16454:18:14"},"nativeSrc":"16454:18:14","nodeType":"YulExpressionStatement","src":"16454:18:14"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"16444:1:14","nodeType":"YulIdentifier","src":"16444:1:14"},{"name":"sum","nativeSrc":"16447:3:14","nodeType":"YulIdentifier","src":"16447:3:14"}],"functionName":{"name":"gt","nativeSrc":"16441:2:14","nodeType":"YulIdentifier","src":"16441:2:14"},"nativeSrc":"16441:10:14","nodeType":"YulFunctionCall","src":"16441:10:14"},"nativeSrc":"16438:36:14","nodeType":"YulIf","src":"16438:36:14"}]},"name":"checked_add_t_uint256","nativeSrc":"16290:191:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"16321:1:14","nodeType":"YulTypedName","src":"16321:1:14","type":""},{"name":"y","nativeSrc":"16324:1:14","nodeType":"YulTypedName","src":"16324:1:14","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"16330:3:14","nodeType":"YulTypedName","src":"16330:3:14","type":""}],"src":"16290:191:14"},{"body":{"nativeSrc":"16593:128:14","nodeType":"YulBlock","src":"16593:128:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16615:6:14","nodeType":"YulIdentifier","src":"16615:6:14"},{"kind":"number","nativeSrc":"16623:1:14","nodeType":"YulLiteral","src":"16623:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16611:3:14","nodeType":"YulIdentifier","src":"16611:3:14"},"nativeSrc":"16611:14:14","nodeType":"YulFunctionCall","src":"16611:14:14"},{"hexValue":"4552433732314d657461646174613a2055524920717565727920666f72206e6f","kind":"string","nativeSrc":"16627:34:14","nodeType":"YulLiteral","src":"16627:34:14","type":"","value":"ERC721Metadata: URI query for no"}],"functionName":{"name":"mstore","nativeSrc":"16604:6:14","nodeType":"YulIdentifier","src":"16604:6:14"},"nativeSrc":"16604:58:14","nodeType":"YulFunctionCall","src":"16604:58:14"},"nativeSrc":"16604:58:14","nodeType":"YulExpressionStatement","src":"16604:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"16683:6:14","nodeType":"YulIdentifier","src":"16683:6:14"},{"kind":"number","nativeSrc":"16691:2:14","nodeType":"YulLiteral","src":"16691:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16679:3:14","nodeType":"YulIdentifier","src":"16679:3:14"},"nativeSrc":"16679:15:14","nodeType":"YulFunctionCall","src":"16679:15:14"},{"hexValue":"6e6578697374656e7420746f6b656e","kind":"string","nativeSrc":"16696:17:14","nodeType":"YulLiteral","src":"16696:17:14","type":"","value":"nexistent token"}],"functionName":{"name":"mstore","nativeSrc":"16672:6:14","nodeType":"YulIdentifier","src":"16672:6:14"},"nativeSrc":"16672:42:14","nodeType":"YulFunctionCall","src":"16672:42:14"},"nativeSrc":"16672:42:14","nodeType":"YulExpressionStatement","src":"16672:42:14"}]},"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nativeSrc":"16487:234:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16585:6:14","nodeType":"YulTypedName","src":"16585:6:14","type":""}],"src":"16487:234:14"},{"body":{"nativeSrc":"16873:220:14","nodeType":"YulBlock","src":"16873:220:14","statements":[{"nativeSrc":"16883:74:14","nodeType":"YulAssignment","src":"16883:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"16949:3:14","nodeType":"YulIdentifier","src":"16949:3:14"},{"kind":"number","nativeSrc":"16954:2:14","nodeType":"YulLiteral","src":"16954:2:14","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"16890:58:14","nodeType":"YulIdentifier","src":"16890:58:14"},"nativeSrc":"16890:67:14","nodeType":"YulFunctionCall","src":"16890:67:14"},"variableNames":[{"name":"pos","nativeSrc":"16883:3:14","nodeType":"YulIdentifier","src":"16883:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17055:3:14","nodeType":"YulIdentifier","src":"17055:3:14"}],"functionName":{"name":"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb","nativeSrc":"16966:88:14","nodeType":"YulIdentifier","src":"16966:88:14"},"nativeSrc":"16966:93:14","nodeType":"YulFunctionCall","src":"16966:93:14"},"nativeSrc":"16966:93:14","nodeType":"YulExpressionStatement","src":"16966:93:14"},{"nativeSrc":"17068:19:14","nodeType":"YulAssignment","src":"17068:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"17079:3:14","nodeType":"YulIdentifier","src":"17079:3:14"},{"kind":"number","nativeSrc":"17084:2:14","nodeType":"YulLiteral","src":"17084:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"17075:3:14","nodeType":"YulIdentifier","src":"17075:3:14"},"nativeSrc":"17075:12:14","nodeType":"YulFunctionCall","src":"17075:12:14"},"variableNames":[{"name":"end","nativeSrc":"17068:3:14","nodeType":"YulIdentifier","src":"17068:3:14"}]}]},"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nativeSrc":"16727:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16861:3:14","nodeType":"YulTypedName","src":"16861:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16869:3:14","nodeType":"YulTypedName","src":"16869:3:14","type":""}],"src":"16727:366:14"},{"body":{"nativeSrc":"17270:248:14","nodeType":"YulBlock","src":"17270:248:14","statements":[{"nativeSrc":"17280:26:14","nodeType":"YulAssignment","src":"17280:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"17292:9:14","nodeType":"YulIdentifier","src":"17292:9:14"},{"kind":"number","nativeSrc":"17303:2:14","nodeType":"YulLiteral","src":"17303:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17288:3:14","nodeType":"YulIdentifier","src":"17288:3:14"},"nativeSrc":"17288:18:14","nodeType":"YulFunctionCall","src":"17288:18:14"},"variableNames":[{"name":"tail","nativeSrc":"17280:4:14","nodeType":"YulIdentifier","src":"17280:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17327:9:14","nodeType":"YulIdentifier","src":"17327:9:14"},{"kind":"number","nativeSrc":"17338:1:14","nodeType":"YulLiteral","src":"17338:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17323:3:14","nodeType":"YulIdentifier","src":"17323:3:14"},"nativeSrc":"17323:17:14","nodeType":"YulFunctionCall","src":"17323:17:14"},{"arguments":[{"name":"tail","nativeSrc":"17346:4:14","nodeType":"YulIdentifier","src":"17346:4:14"},{"name":"headStart","nativeSrc":"17352:9:14","nodeType":"YulIdentifier","src":"17352:9:14"}],"functionName":{"name":"sub","nativeSrc":"17342:3:14","nodeType":"YulIdentifier","src":"17342:3:14"},"nativeSrc":"17342:20:14","nodeType":"YulFunctionCall","src":"17342:20:14"}],"functionName":{"name":"mstore","nativeSrc":"17316:6:14","nodeType":"YulIdentifier","src":"17316:6:14"},"nativeSrc":"17316:47:14","nodeType":"YulFunctionCall","src":"17316:47:14"},"nativeSrc":"17316:47:14","nodeType":"YulExpressionStatement","src":"17316:47:14"},{"nativeSrc":"17372:139:14","nodeType":"YulAssignment","src":"17372:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"17506:4:14","nodeType":"YulIdentifier","src":"17506:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack","nativeSrc":"17380:124:14","nodeType":"YulIdentifier","src":"17380:124:14"},"nativeSrc":"17380:131:14","nodeType":"YulFunctionCall","src":"17380:131:14"},"variableNames":[{"name":"tail","nativeSrc":"17372:4:14","nodeType":"YulIdentifier","src":"17372:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"17099:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17250:9:14","nodeType":"YulTypedName","src":"17250:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"17265:4:14","nodeType":"YulTypedName","src":"17265:4:14","type":""}],"src":"17099:419:14"},{"body":{"nativeSrc":"17630:118:14","nodeType":"YulBlock","src":"17630:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17652:6:14","nodeType":"YulIdentifier","src":"17652:6:14"},{"kind":"number","nativeSrc":"17660:1:14","nodeType":"YulLiteral","src":"17660:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17648:3:14","nodeType":"YulIdentifier","src":"17648:3:14"},"nativeSrc":"17648:14:14","nodeType":"YulFunctionCall","src":"17648:14:14"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nativeSrc":"17664:34:14","nodeType":"YulLiteral","src":"17664:34:14","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nativeSrc":"17641:6:14","nodeType":"YulIdentifier","src":"17641:6:14"},"nativeSrc":"17641:58:14","nodeType":"YulFunctionCall","src":"17641:58:14"},"nativeSrc":"17641:58:14","nodeType":"YulExpressionStatement","src":"17641:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17720:6:14","nodeType":"YulIdentifier","src":"17720:6:14"},{"kind":"number","nativeSrc":"17728:2:14","nodeType":"YulLiteral","src":"17728:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17716:3:14","nodeType":"YulIdentifier","src":"17716:3:14"},"nativeSrc":"17716:15:14","nodeType":"YulFunctionCall","src":"17716:15:14"},{"hexValue":"6f776e6572","kind":"string","nativeSrc":"17733:7:14","nodeType":"YulLiteral","src":"17733:7:14","type":"","value":"owner"}],"functionName":{"name":"mstore","nativeSrc":"17709:6:14","nodeType":"YulIdentifier","src":"17709:6:14"},"nativeSrc":"17709:32:14","nodeType":"YulFunctionCall","src":"17709:32:14"},"nativeSrc":"17709:32:14","nodeType":"YulExpressionStatement","src":"17709:32:14"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nativeSrc":"17524:224:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17622:6:14","nodeType":"YulTypedName","src":"17622:6:14","type":""}],"src":"17524:224:14"},{"body":{"nativeSrc":"17900:220:14","nodeType":"YulBlock","src":"17900:220:14","statements":[{"nativeSrc":"17910:74:14","nodeType":"YulAssignment","src":"17910:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"17976:3:14","nodeType":"YulIdentifier","src":"17976:3:14"},{"kind":"number","nativeSrc":"17981:2:14","nodeType":"YulLiteral","src":"17981:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17917:58:14","nodeType":"YulIdentifier","src":"17917:58:14"},"nativeSrc":"17917:67:14","nodeType":"YulFunctionCall","src":"17917:67:14"},"variableNames":[{"name":"pos","nativeSrc":"17910:3:14","nodeType":"YulIdentifier","src":"17910:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18082:3:14","nodeType":"YulIdentifier","src":"18082:3:14"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nativeSrc":"17993:88:14","nodeType":"YulIdentifier","src":"17993:88:14"},"nativeSrc":"17993:93:14","nodeType":"YulFunctionCall","src":"17993:93:14"},"nativeSrc":"17993:93:14","nodeType":"YulExpressionStatement","src":"17993:93:14"},{"nativeSrc":"18095:19:14","nodeType":"YulAssignment","src":"18095:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"18106:3:14","nodeType":"YulIdentifier","src":"18106:3:14"},{"kind":"number","nativeSrc":"18111:2:14","nodeType":"YulLiteral","src":"18111:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"18102:3:14","nodeType":"YulIdentifier","src":"18102:3:14"},"nativeSrc":"18102:12:14","nodeType":"YulFunctionCall","src":"18102:12:14"},"variableNames":[{"name":"end","nativeSrc":"18095:3:14","nodeType":"YulIdentifier","src":"18095:3:14"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nativeSrc":"17754:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17888:3:14","nodeType":"YulTypedName","src":"17888:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17896:3:14","nodeType":"YulTypedName","src":"17896:3:14","type":""}],"src":"17754:366:14"},{"body":{"nativeSrc":"18297:248:14","nodeType":"YulBlock","src":"18297:248:14","statements":[{"nativeSrc":"18307:26:14","nodeType":"YulAssignment","src":"18307:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"18319:9:14","nodeType":"YulIdentifier","src":"18319:9:14"},{"kind":"number","nativeSrc":"18330:2:14","nodeType":"YulLiteral","src":"18330:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18315:3:14","nodeType":"YulIdentifier","src":"18315:3:14"},"nativeSrc":"18315:18:14","nodeType":"YulFunctionCall","src":"18315:18:14"},"variableNames":[{"name":"tail","nativeSrc":"18307:4:14","nodeType":"YulIdentifier","src":"18307:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18354:9:14","nodeType":"YulIdentifier","src":"18354:9:14"},{"kind":"number","nativeSrc":"18365:1:14","nodeType":"YulLiteral","src":"18365:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18350:3:14","nodeType":"YulIdentifier","src":"18350:3:14"},"nativeSrc":"18350:17:14","nodeType":"YulFunctionCall","src":"18350:17:14"},{"arguments":[{"name":"tail","nativeSrc":"18373:4:14","nodeType":"YulIdentifier","src":"18373:4:14"},{"name":"headStart","nativeSrc":"18379:9:14","nodeType":"YulIdentifier","src":"18379:9:14"}],"functionName":{"name":"sub","nativeSrc":"18369:3:14","nodeType":"YulIdentifier","src":"18369:3:14"},"nativeSrc":"18369:20:14","nodeType":"YulFunctionCall","src":"18369:20:14"}],"functionName":{"name":"mstore","nativeSrc":"18343:6:14","nodeType":"YulIdentifier","src":"18343:6:14"},"nativeSrc":"18343:47:14","nodeType":"YulFunctionCall","src":"18343:47:14"},"nativeSrc":"18343:47:14","nodeType":"YulExpressionStatement","src":"18343:47:14"},{"nativeSrc":"18399:139:14","nodeType":"YulAssignment","src":"18399:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"18533:4:14","nodeType":"YulIdentifier","src":"18533:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nativeSrc":"18407:124:14","nodeType":"YulIdentifier","src":"18407:124:14"},"nativeSrc":"18407:131:14","nodeType":"YulFunctionCall","src":"18407:131:14"},"variableNames":[{"name":"tail","nativeSrc":"18399:4:14","nodeType":"YulIdentifier","src":"18399:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18126:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18277:9:14","nodeType":"YulTypedName","src":"18277:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18292:4:14","nodeType":"YulTypedName","src":"18292:4:14","type":""}],"src":"18126:419:14"},{"body":{"nativeSrc":"18657:117:14","nodeType":"YulBlock","src":"18657:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18679:6:14","nodeType":"YulIdentifier","src":"18679:6:14"},{"kind":"number","nativeSrc":"18687:1:14","nodeType":"YulLiteral","src":"18687:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18675:3:14","nodeType":"YulIdentifier","src":"18675:3:14"},"nativeSrc":"18675:14:14","nodeType":"YulFunctionCall","src":"18675:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nativeSrc":"18691:34:14","nodeType":"YulLiteral","src":"18691:34:14","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nativeSrc":"18668:6:14","nodeType":"YulIdentifier","src":"18668:6:14"},"nativeSrc":"18668:58:14","nodeType":"YulFunctionCall","src":"18668:58:14"},"nativeSrc":"18668:58:14","nodeType":"YulExpressionStatement","src":"18668:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18747:6:14","nodeType":"YulIdentifier","src":"18747:6:14"},{"kind":"number","nativeSrc":"18755:2:14","nodeType":"YulLiteral","src":"18755:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18743:3:14","nodeType":"YulIdentifier","src":"18743:3:14"},"nativeSrc":"18743:15:14","nodeType":"YulFunctionCall","src":"18743:15:14"},{"hexValue":"72657373","kind":"string","nativeSrc":"18760:6:14","nodeType":"YulLiteral","src":"18760:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nativeSrc":"18736:6:14","nodeType":"YulIdentifier","src":"18736:6:14"},"nativeSrc":"18736:31:14","nodeType":"YulFunctionCall","src":"18736:31:14"},"nativeSrc":"18736:31:14","nodeType":"YulExpressionStatement","src":"18736:31:14"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nativeSrc":"18551:223:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18649:6:14","nodeType":"YulTypedName","src":"18649:6:14","type":""}],"src":"18551:223:14"},{"body":{"nativeSrc":"18926:220:14","nodeType":"YulBlock","src":"18926:220:14","statements":[{"nativeSrc":"18936:74:14","nodeType":"YulAssignment","src":"18936:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"19002:3:14","nodeType":"YulIdentifier","src":"19002:3:14"},{"kind":"number","nativeSrc":"19007:2:14","nodeType":"YulLiteral","src":"19007:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18943:58:14","nodeType":"YulIdentifier","src":"18943:58:14"},"nativeSrc":"18943:67:14","nodeType":"YulFunctionCall","src":"18943:67:14"},"variableNames":[{"name":"pos","nativeSrc":"18936:3:14","nodeType":"YulIdentifier","src":"18936:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"19108:3:14","nodeType":"YulIdentifier","src":"19108:3:14"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nativeSrc":"19019:88:14","nodeType":"YulIdentifier","src":"19019:88:14"},"nativeSrc":"19019:93:14","nodeType":"YulFunctionCall","src":"19019:93:14"},"nativeSrc":"19019:93:14","nodeType":"YulExpressionStatement","src":"19019:93:14"},{"nativeSrc":"19121:19:14","nodeType":"YulAssignment","src":"19121:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"19132:3:14","nodeType":"YulIdentifier","src":"19132:3:14"},{"kind":"number","nativeSrc":"19137:2:14","nodeType":"YulLiteral","src":"19137:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19128:3:14","nodeType":"YulIdentifier","src":"19128:3:14"},"nativeSrc":"19128:12:14","nodeType":"YulFunctionCall","src":"19128:12:14"},"variableNames":[{"name":"end","nativeSrc":"19121:3:14","nodeType":"YulIdentifier","src":"19121:3:14"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nativeSrc":"18780:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18914:3:14","nodeType":"YulTypedName","src":"18914:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18922:3:14","nodeType":"YulTypedName","src":"18922:3:14","type":""}],"src":"18780:366:14"},{"body":{"nativeSrc":"19323:248:14","nodeType":"YulBlock","src":"19323:248:14","statements":[{"nativeSrc":"19333:26:14","nodeType":"YulAssignment","src":"19333:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"19345:9:14","nodeType":"YulIdentifier","src":"19345:9:14"},{"kind":"number","nativeSrc":"19356:2:14","nodeType":"YulLiteral","src":"19356:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19341:3:14","nodeType":"YulIdentifier","src":"19341:3:14"},"nativeSrc":"19341:18:14","nodeType":"YulFunctionCall","src":"19341:18:14"},"variableNames":[{"name":"tail","nativeSrc":"19333:4:14","nodeType":"YulIdentifier","src":"19333:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19380:9:14","nodeType":"YulIdentifier","src":"19380:9:14"},{"kind":"number","nativeSrc":"19391:1:14","nodeType":"YulLiteral","src":"19391:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19376:3:14","nodeType":"YulIdentifier","src":"19376:3:14"},"nativeSrc":"19376:17:14","nodeType":"YulFunctionCall","src":"19376:17:14"},{"arguments":[{"name":"tail","nativeSrc":"19399:4:14","nodeType":"YulIdentifier","src":"19399:4:14"},{"name":"headStart","nativeSrc":"19405:9:14","nodeType":"YulIdentifier","src":"19405:9:14"}],"functionName":{"name":"sub","nativeSrc":"19395:3:14","nodeType":"YulIdentifier","src":"19395:3:14"},"nativeSrc":"19395:20:14","nodeType":"YulFunctionCall","src":"19395:20:14"}],"functionName":{"name":"mstore","nativeSrc":"19369:6:14","nodeType":"YulIdentifier","src":"19369:6:14"},"nativeSrc":"19369:47:14","nodeType":"YulFunctionCall","src":"19369:47:14"},"nativeSrc":"19369:47:14","nodeType":"YulExpressionStatement","src":"19369:47:14"},{"nativeSrc":"19425:139:14","nodeType":"YulAssignment","src":"19425:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"19559:4:14","nodeType":"YulIdentifier","src":"19559:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nativeSrc":"19433:124:14","nodeType":"YulIdentifier","src":"19433:124:14"},"nativeSrc":"19433:131:14","nodeType":"YulFunctionCall","src":"19433:131:14"},"variableNames":[{"name":"tail","nativeSrc":"19425:4:14","nodeType":"YulIdentifier","src":"19425:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19152:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19303:9:14","nodeType":"YulTypedName","src":"19303:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19318:4:14","nodeType":"YulTypedName","src":"19318:4:14","type":""}],"src":"19152:419:14"},{"body":{"nativeSrc":"19683:69:14","nodeType":"YulBlock","src":"19683:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"19705:6:14","nodeType":"YulIdentifier","src":"19705:6:14"},{"kind":"number","nativeSrc":"19713:1:14","nodeType":"YulLiteral","src":"19713:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19701:3:14","nodeType":"YulIdentifier","src":"19701:3:14"},"nativeSrc":"19701:14:14","nodeType":"YulFunctionCall","src":"19701:14:14"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nativeSrc":"19717:27:14","nodeType":"YulLiteral","src":"19717:27:14","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nativeSrc":"19694:6:14","nodeType":"YulIdentifier","src":"19694:6:14"},"nativeSrc":"19694:51:14","nodeType":"YulFunctionCall","src":"19694:51:14"},"nativeSrc":"19694:51:14","nodeType":"YulExpressionStatement","src":"19694:51:14"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nativeSrc":"19577:175:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"19675:6:14","nodeType":"YulTypedName","src":"19675:6:14","type":""}],"src":"19577:175:14"},{"body":{"nativeSrc":"19904:220:14","nodeType":"YulBlock","src":"19904:220:14","statements":[{"nativeSrc":"19914:74:14","nodeType":"YulAssignment","src":"19914:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"19980:3:14","nodeType":"YulIdentifier","src":"19980:3:14"},{"kind":"number","nativeSrc":"19985:2:14","nodeType":"YulLiteral","src":"19985:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"19921:58:14","nodeType":"YulIdentifier","src":"19921:58:14"},"nativeSrc":"19921:67:14","nodeType":"YulFunctionCall","src":"19921:67:14"},"variableNames":[{"name":"pos","nativeSrc":"19914:3:14","nodeType":"YulIdentifier","src":"19914:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"20086:3:14","nodeType":"YulIdentifier","src":"20086:3:14"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nativeSrc":"19997:88:14","nodeType":"YulIdentifier","src":"19997:88:14"},"nativeSrc":"19997:93:14","nodeType":"YulFunctionCall","src":"19997:93:14"},"nativeSrc":"19997:93:14","nodeType":"YulExpressionStatement","src":"19997:93:14"},{"nativeSrc":"20099:19:14","nodeType":"YulAssignment","src":"20099:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"20110:3:14","nodeType":"YulIdentifier","src":"20110:3:14"},{"kind":"number","nativeSrc":"20115:2:14","nodeType":"YulLiteral","src":"20115:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20106:3:14","nodeType":"YulIdentifier","src":"20106:3:14"},"nativeSrc":"20106:12:14","nodeType":"YulFunctionCall","src":"20106:12:14"},"variableNames":[{"name":"end","nativeSrc":"20099:3:14","nodeType":"YulIdentifier","src":"20099:3:14"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nativeSrc":"19758:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19892:3:14","nodeType":"YulTypedName","src":"19892:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19900:3:14","nodeType":"YulTypedName","src":"19900:3:14","type":""}],"src":"19758:366:14"},{"body":{"nativeSrc":"20301:248:14","nodeType":"YulBlock","src":"20301:248:14","statements":[{"nativeSrc":"20311:26:14","nodeType":"YulAssignment","src":"20311:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"20323:9:14","nodeType":"YulIdentifier","src":"20323:9:14"},{"kind":"number","nativeSrc":"20334:2:14","nodeType":"YulLiteral","src":"20334:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20319:3:14","nodeType":"YulIdentifier","src":"20319:3:14"},"nativeSrc":"20319:18:14","nodeType":"YulFunctionCall","src":"20319:18:14"},"variableNames":[{"name":"tail","nativeSrc":"20311:4:14","nodeType":"YulIdentifier","src":"20311:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"20358:9:14","nodeType":"YulIdentifier","src":"20358:9:14"},{"kind":"number","nativeSrc":"20369:1:14","nodeType":"YulLiteral","src":"20369:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20354:3:14","nodeType":"YulIdentifier","src":"20354:3:14"},"nativeSrc":"20354:17:14","nodeType":"YulFunctionCall","src":"20354:17:14"},{"arguments":[{"name":"tail","nativeSrc":"20377:4:14","nodeType":"YulIdentifier","src":"20377:4:14"},{"name":"headStart","nativeSrc":"20383:9:14","nodeType":"YulIdentifier","src":"20383:9:14"}],"functionName":{"name":"sub","nativeSrc":"20373:3:14","nodeType":"YulIdentifier","src":"20373:3:14"},"nativeSrc":"20373:20:14","nodeType":"YulFunctionCall","src":"20373:20:14"}],"functionName":{"name":"mstore","nativeSrc":"20347:6:14","nodeType":"YulIdentifier","src":"20347:6:14"},"nativeSrc":"20347:47:14","nodeType":"YulFunctionCall","src":"20347:47:14"},"nativeSrc":"20347:47:14","nodeType":"YulExpressionStatement","src":"20347:47:14"},{"nativeSrc":"20403:139:14","nodeType":"YulAssignment","src":"20403:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"20537:4:14","nodeType":"YulIdentifier","src":"20537:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nativeSrc":"20411:124:14","nodeType":"YulIdentifier","src":"20411:124:14"},"nativeSrc":"20411:131:14","nodeType":"YulFunctionCall","src":"20411:131:14"},"variableNames":[{"name":"tail","nativeSrc":"20403:4:14","nodeType":"YulIdentifier","src":"20403:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"20130:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20281:9:14","nodeType":"YulTypedName","src":"20281:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20296:4:14","nodeType":"YulTypedName","src":"20296:4:14","type":""}],"src":"20130:419:14"},{"body":{"nativeSrc":"20661:131:14","nodeType":"YulBlock","src":"20661:131:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20683:6:14","nodeType":"YulIdentifier","src":"20683:6:14"},{"kind":"number","nativeSrc":"20691:1:14","nodeType":"YulLiteral","src":"20691:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20679:3:14","nodeType":"YulIdentifier","src":"20679:3:14"},"nativeSrc":"20679:14:14","nodeType":"YulFunctionCall","src":"20679:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nativeSrc":"20695:34:14","nodeType":"YulLiteral","src":"20695:34:14","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nativeSrc":"20672:6:14","nodeType":"YulIdentifier","src":"20672:6:14"},"nativeSrc":"20672:58:14","nodeType":"YulFunctionCall","src":"20672:58:14"},"nativeSrc":"20672:58:14","nodeType":"YulExpressionStatement","src":"20672:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"20751:6:14","nodeType":"YulIdentifier","src":"20751:6:14"},{"kind":"number","nativeSrc":"20759:2:14","nodeType":"YulLiteral","src":"20759:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20747:3:14","nodeType":"YulIdentifier","src":"20747:3:14"},"nativeSrc":"20747:15:14","nodeType":"YulFunctionCall","src":"20747:15:14"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nativeSrc":"20764:20:14","nodeType":"YulLiteral","src":"20764:20:14","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nativeSrc":"20740:6:14","nodeType":"YulIdentifier","src":"20740:6:14"},"nativeSrc":"20740:45:14","nodeType":"YulFunctionCall","src":"20740:45:14"},"nativeSrc":"20740:45:14","nodeType":"YulExpressionStatement","src":"20740:45:14"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nativeSrc":"20555:237:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"20653:6:14","nodeType":"YulTypedName","src":"20653:6:14","type":""}],"src":"20555:237:14"},{"body":{"nativeSrc":"20944:220:14","nodeType":"YulBlock","src":"20944:220:14","statements":[{"nativeSrc":"20954:74:14","nodeType":"YulAssignment","src":"20954:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"21020:3:14","nodeType":"YulIdentifier","src":"21020:3:14"},{"kind":"number","nativeSrc":"21025:2:14","nodeType":"YulLiteral","src":"21025:2:14","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"20961:58:14","nodeType":"YulIdentifier","src":"20961:58:14"},"nativeSrc":"20961:67:14","nodeType":"YulFunctionCall","src":"20961:67:14"},"variableNames":[{"name":"pos","nativeSrc":"20954:3:14","nodeType":"YulIdentifier","src":"20954:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"21126:3:14","nodeType":"YulIdentifier","src":"21126:3:14"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nativeSrc":"21037:88:14","nodeType":"YulIdentifier","src":"21037:88:14"},"nativeSrc":"21037:93:14","nodeType":"YulFunctionCall","src":"21037:93:14"},"nativeSrc":"21037:93:14","nodeType":"YulExpressionStatement","src":"21037:93:14"},{"nativeSrc":"21139:19:14","nodeType":"YulAssignment","src":"21139:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"21150:3:14","nodeType":"YulIdentifier","src":"21150:3:14"},{"kind":"number","nativeSrc":"21155:2:14","nodeType":"YulLiteral","src":"21155:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"21146:3:14","nodeType":"YulIdentifier","src":"21146:3:14"},"nativeSrc":"21146:12:14","nodeType":"YulFunctionCall","src":"21146:12:14"},"variableNames":[{"name":"end","nativeSrc":"21139:3:14","nodeType":"YulIdentifier","src":"21139:3:14"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nativeSrc":"20798:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20932:3:14","nodeType":"YulTypedName","src":"20932:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"20940:3:14","nodeType":"YulTypedName","src":"20940:3:14","type":""}],"src":"20798:366:14"},{"body":{"nativeSrc":"21341:248:14","nodeType":"YulBlock","src":"21341:248:14","statements":[{"nativeSrc":"21351:26:14","nodeType":"YulAssignment","src":"21351:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"21363:9:14","nodeType":"YulIdentifier","src":"21363:9:14"},{"kind":"number","nativeSrc":"21374:2:14","nodeType":"YulLiteral","src":"21374:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21359:3:14","nodeType":"YulIdentifier","src":"21359:3:14"},"nativeSrc":"21359:18:14","nodeType":"YulFunctionCall","src":"21359:18:14"},"variableNames":[{"name":"tail","nativeSrc":"21351:4:14","nodeType":"YulIdentifier","src":"21351:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"21398:9:14","nodeType":"YulIdentifier","src":"21398:9:14"},{"kind":"number","nativeSrc":"21409:1:14","nodeType":"YulLiteral","src":"21409:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21394:3:14","nodeType":"YulIdentifier","src":"21394:3:14"},"nativeSrc":"21394:17:14","nodeType":"YulFunctionCall","src":"21394:17:14"},{"arguments":[{"name":"tail","nativeSrc":"21417:4:14","nodeType":"YulIdentifier","src":"21417:4:14"},{"name":"headStart","nativeSrc":"21423:9:14","nodeType":"YulIdentifier","src":"21423:9:14"}],"functionName":{"name":"sub","nativeSrc":"21413:3:14","nodeType":"YulIdentifier","src":"21413:3:14"},"nativeSrc":"21413:20:14","nodeType":"YulFunctionCall","src":"21413:20:14"}],"functionName":{"name":"mstore","nativeSrc":"21387:6:14","nodeType":"YulIdentifier","src":"21387:6:14"},"nativeSrc":"21387:47:14","nodeType":"YulFunctionCall","src":"21387:47:14"},"nativeSrc":"21387:47:14","nodeType":"YulExpressionStatement","src":"21387:47:14"},{"nativeSrc":"21443:139:14","nodeType":"YulAssignment","src":"21443:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"21577:4:14","nodeType":"YulIdentifier","src":"21577:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nativeSrc":"21451:124:14","nodeType":"YulIdentifier","src":"21451:124:14"},"nativeSrc":"21451:131:14","nodeType":"YulFunctionCall","src":"21451:131:14"},"variableNames":[{"name":"tail","nativeSrc":"21443:4:14","nodeType":"YulIdentifier","src":"21443:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"21170:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21321:9:14","nodeType":"YulTypedName","src":"21321:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21336:4:14","nodeType":"YulTypedName","src":"21336:4:14","type":""}],"src":"21170:419:14"},{"body":{"nativeSrc":"21653:40:14","nodeType":"YulBlock","src":"21653:40:14","statements":[{"nativeSrc":"21664:22:14","nodeType":"YulAssignment","src":"21664:22:14","value":{"arguments":[{"name":"value","nativeSrc":"21680:5:14","nodeType":"YulIdentifier","src":"21680:5:14"}],"functionName":{"name":"mload","nativeSrc":"21674:5:14","nodeType":"YulIdentifier","src":"21674:5:14"},"nativeSrc":"21674:12:14","nodeType":"YulFunctionCall","src":"21674:12:14"},"variableNames":[{"name":"length","nativeSrc":"21664:6:14","nodeType":"YulIdentifier","src":"21664:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"21595:98:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21636:5:14","nodeType":"YulTypedName","src":"21636:5:14","type":""}],"returnVariables":[{"name":"length","nativeSrc":"21646:6:14","nodeType":"YulTypedName","src":"21646:6:14","type":""}],"src":"21595:98:14"},{"body":{"nativeSrc":"21794:73:14","nodeType":"YulBlock","src":"21794:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"21811:3:14","nodeType":"YulIdentifier","src":"21811:3:14"},{"name":"length","nativeSrc":"21816:6:14","nodeType":"YulIdentifier","src":"21816:6:14"}],"functionName":{"name":"mstore","nativeSrc":"21804:6:14","nodeType":"YulIdentifier","src":"21804:6:14"},"nativeSrc":"21804:19:14","nodeType":"YulFunctionCall","src":"21804:19:14"},"nativeSrc":"21804:19:14","nodeType":"YulExpressionStatement","src":"21804:19:14"},{"nativeSrc":"21832:29:14","nodeType":"YulAssignment","src":"21832:29:14","value":{"arguments":[{"name":"pos","nativeSrc":"21851:3:14","nodeType":"YulIdentifier","src":"21851:3:14"},{"kind":"number","nativeSrc":"21856:4:14","nodeType":"YulLiteral","src":"21856:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21847:3:14","nodeType":"YulIdentifier","src":"21847:3:14"},"nativeSrc":"21847:14:14","nodeType":"YulFunctionCall","src":"21847:14:14"},"variableNames":[{"name":"updated_pos","nativeSrc":"21832:11:14","nodeType":"YulIdentifier","src":"21832:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"21699:168:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"21766:3:14","nodeType":"YulTypedName","src":"21766:3:14","type":""},{"name":"length","nativeSrc":"21771:6:14","nodeType":"YulTypedName","src":"21771:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"21782:11:14","nodeType":"YulTypedName","src":"21782:11:14","type":""}],"src":"21699:168:14"},{"body":{"nativeSrc":"21963:283:14","nodeType":"YulBlock","src":"21963:283:14","statements":[{"nativeSrc":"21973:52:14","nodeType":"YulVariableDeclaration","src":"21973:52:14","value":{"arguments":[{"name":"value","nativeSrc":"22019:5:14","nodeType":"YulIdentifier","src":"22019:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"21987:31:14","nodeType":"YulIdentifier","src":"21987:31:14"},"nativeSrc":"21987:38:14","nodeType":"YulFunctionCall","src":"21987:38:14"},"variables":[{"name":"length","nativeSrc":"21977:6:14","nodeType":"YulTypedName","src":"21977:6:14","type":""}]},{"nativeSrc":"22034:77:14","nodeType":"YulAssignment","src":"22034:77:14","value":{"arguments":[{"name":"pos","nativeSrc":"22099:3:14","nodeType":"YulIdentifier","src":"22099:3:14"},{"name":"length","nativeSrc":"22104:6:14","nodeType":"YulIdentifier","src":"22104:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"22041:57:14","nodeType":"YulIdentifier","src":"22041:57:14"},"nativeSrc":"22041:70:14","nodeType":"YulFunctionCall","src":"22041:70:14"},"variableNames":[{"name":"pos","nativeSrc":"22034:3:14","nodeType":"YulIdentifier","src":"22034:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"22159:5:14","nodeType":"YulIdentifier","src":"22159:5:14"},{"kind":"number","nativeSrc":"22166:4:14","nodeType":"YulLiteral","src":"22166:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"22155:3:14","nodeType":"YulIdentifier","src":"22155:3:14"},"nativeSrc":"22155:16:14","nodeType":"YulFunctionCall","src":"22155:16:14"},{"name":"pos","nativeSrc":"22173:3:14","nodeType":"YulIdentifier","src":"22173:3:14"},{"name":"length","nativeSrc":"22178:6:14","nodeType":"YulIdentifier","src":"22178:6:14"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"22120:34:14","nodeType":"YulIdentifier","src":"22120:34:14"},"nativeSrc":"22120:65:14","nodeType":"YulFunctionCall","src":"22120:65:14"},"nativeSrc":"22120:65:14","nodeType":"YulExpressionStatement","src":"22120:65:14"},{"nativeSrc":"22194:46:14","nodeType":"YulAssignment","src":"22194:46:14","value":{"arguments":[{"name":"pos","nativeSrc":"22205:3:14","nodeType":"YulIdentifier","src":"22205:3:14"},{"arguments":[{"name":"length","nativeSrc":"22232:6:14","nodeType":"YulIdentifier","src":"22232:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"22210:21:14","nodeType":"YulIdentifier","src":"22210:21:14"},"nativeSrc":"22210:29:14","nodeType":"YulFunctionCall","src":"22210:29:14"}],"functionName":{"name":"add","nativeSrc":"22201:3:14","nodeType":"YulIdentifier","src":"22201:3:14"},"nativeSrc":"22201:39:14","nodeType":"YulFunctionCall","src":"22201:39:14"},"variableNames":[{"name":"end","nativeSrc":"22194:3:14","nodeType":"YulIdentifier","src":"22194:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"21873:373:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21944:5:14","nodeType":"YulTypedName","src":"21944:5:14","type":""},{"name":"pos","nativeSrc":"21951:3:14","nodeType":"YulTypedName","src":"21951:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21959:3:14","nodeType":"YulTypedName","src":"21959:3:14","type":""}],"src":"21873:373:14"},{"body":{"nativeSrc":"22452:440:14","nodeType":"YulBlock","src":"22452:440:14","statements":[{"nativeSrc":"22462:27:14","nodeType":"YulAssignment","src":"22462:27:14","value":{"arguments":[{"name":"headStart","nativeSrc":"22474:9:14","nodeType":"YulIdentifier","src":"22474:9:14"},{"kind":"number","nativeSrc":"22485:3:14","nodeType":"YulLiteral","src":"22485:3:14","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22470:3:14","nodeType":"YulIdentifier","src":"22470:3:14"},"nativeSrc":"22470:19:14","nodeType":"YulFunctionCall","src":"22470:19:14"},"variableNames":[{"name":"tail","nativeSrc":"22462:4:14","nodeType":"YulIdentifier","src":"22462:4:14"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22543:6:14","nodeType":"YulIdentifier","src":"22543:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"22556:9:14","nodeType":"YulIdentifier","src":"22556:9:14"},{"kind":"number","nativeSrc":"22567:1:14","nodeType":"YulLiteral","src":"22567:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22552:3:14","nodeType":"YulIdentifier","src":"22552:3:14"},"nativeSrc":"22552:17:14","nodeType":"YulFunctionCall","src":"22552:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22499:43:14","nodeType":"YulIdentifier","src":"22499:43:14"},"nativeSrc":"22499:71:14","nodeType":"YulFunctionCall","src":"22499:71:14"},"nativeSrc":"22499:71:14","nodeType":"YulExpressionStatement","src":"22499:71:14"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22624:6:14","nodeType":"YulIdentifier","src":"22624:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"22637:9:14","nodeType":"YulIdentifier","src":"22637:9:14"},{"kind":"number","nativeSrc":"22648:2:14","nodeType":"YulLiteral","src":"22648:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22633:3:14","nodeType":"YulIdentifier","src":"22633:3:14"},"nativeSrc":"22633:18:14","nodeType":"YulFunctionCall","src":"22633:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22580:43:14","nodeType":"YulIdentifier","src":"22580:43:14"},"nativeSrc":"22580:72:14","nodeType":"YulFunctionCall","src":"22580:72:14"},"nativeSrc":"22580:72:14","nodeType":"YulExpressionStatement","src":"22580:72:14"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"22706:6:14","nodeType":"YulIdentifier","src":"22706:6:14"},{"arguments":[{"name":"headStart","nativeSrc":"22719:9:14","nodeType":"YulIdentifier","src":"22719:9:14"},{"kind":"number","nativeSrc":"22730:2:14","nodeType":"YulLiteral","src":"22730:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22715:3:14","nodeType":"YulIdentifier","src":"22715:3:14"},"nativeSrc":"22715:18:14","nodeType":"YulFunctionCall","src":"22715:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22662:43:14","nodeType":"YulIdentifier","src":"22662:43:14"},"nativeSrc":"22662:72:14","nodeType":"YulFunctionCall","src":"22662:72:14"},"nativeSrc":"22662:72:14","nodeType":"YulExpressionStatement","src":"22662:72:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22755:9:14","nodeType":"YulIdentifier","src":"22755:9:14"},{"kind":"number","nativeSrc":"22766:2:14","nodeType":"YulLiteral","src":"22766:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22751:3:14","nodeType":"YulIdentifier","src":"22751:3:14"},"nativeSrc":"22751:18:14","nodeType":"YulFunctionCall","src":"22751:18:14"},{"arguments":[{"name":"tail","nativeSrc":"22775:4:14","nodeType":"YulIdentifier","src":"22775:4:14"},{"name":"headStart","nativeSrc":"22781:9:14","nodeType":"YulIdentifier","src":"22781:9:14"}],"functionName":{"name":"sub","nativeSrc":"22771:3:14","nodeType":"YulIdentifier","src":"22771:3:14"},"nativeSrc":"22771:20:14","nodeType":"YulFunctionCall","src":"22771:20:14"}],"functionName":{"name":"mstore","nativeSrc":"22744:6:14","nodeType":"YulIdentifier","src":"22744:6:14"},"nativeSrc":"22744:48:14","nodeType":"YulFunctionCall","src":"22744:48:14"},"nativeSrc":"22744:48:14","nodeType":"YulExpressionStatement","src":"22744:48:14"},{"nativeSrc":"22801:84:14","nodeType":"YulAssignment","src":"22801:84:14","value":{"arguments":[{"name":"value3","nativeSrc":"22871:6:14","nodeType":"YulIdentifier","src":"22871:6:14"},{"name":"tail","nativeSrc":"22880:4:14","nodeType":"YulIdentifier","src":"22880:4:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"22809:61:14","nodeType":"YulIdentifier","src":"22809:61:14"},"nativeSrc":"22809:76:14","nodeType":"YulFunctionCall","src":"22809:76:14"},"variableNames":[{"name":"tail","nativeSrc":"22801:4:14","nodeType":"YulIdentifier","src":"22801:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"22252:640:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22400:9:14","nodeType":"YulTypedName","src":"22400:9:14","type":""},{"name":"value3","nativeSrc":"22412:6:14","nodeType":"YulTypedName","src":"22412:6:14","type":""},{"name":"value2","nativeSrc":"22420:6:14","nodeType":"YulTypedName","src":"22420:6:14","type":""},{"name":"value1","nativeSrc":"22428:6:14","nodeType":"YulTypedName","src":"22428:6:14","type":""},{"name":"value0","nativeSrc":"22436:6:14","nodeType":"YulTypedName","src":"22436:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22447:4:14","nodeType":"YulTypedName","src":"22447:4:14","type":""}],"src":"22252:640:14"},{"body":{"nativeSrc":"22960:79:14","nodeType":"YulBlock","src":"22960:79:14","statements":[{"nativeSrc":"22970:22:14","nodeType":"YulAssignment","src":"22970:22:14","value":{"arguments":[{"name":"offset","nativeSrc":"22985:6:14","nodeType":"YulIdentifier","src":"22985:6:14"}],"functionName":{"name":"mload","nativeSrc":"22979:5:14","nodeType":"YulIdentifier","src":"22979:5:14"},"nativeSrc":"22979:13:14","nodeType":"YulFunctionCall","src":"22979:13:14"},"variableNames":[{"name":"value","nativeSrc":"22970:5:14","nodeType":"YulIdentifier","src":"22970:5:14"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"23027:5:14","nodeType":"YulIdentifier","src":"23027:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"23001:25:14","nodeType":"YulIdentifier","src":"23001:25:14"},"nativeSrc":"23001:32:14","nodeType":"YulFunctionCall","src":"23001:32:14"},"nativeSrc":"23001:32:14","nodeType":"YulExpressionStatement","src":"23001:32:14"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"22898:141:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"22938:6:14","nodeType":"YulTypedName","src":"22938:6:14","type":""},{"name":"end","nativeSrc":"22946:3:14","nodeType":"YulTypedName","src":"22946:3:14","type":""}],"returnVariables":[{"name":"value","nativeSrc":"22954:5:14","nodeType":"YulTypedName","src":"22954:5:14","type":""}],"src":"22898:141:14"},{"body":{"nativeSrc":"23121:273:14","nodeType":"YulBlock","src":"23121:273:14","statements":[{"body":{"nativeSrc":"23167:83:14","nodeType":"YulBlock","src":"23167:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"23169:77:14","nodeType":"YulIdentifier","src":"23169:77:14"},"nativeSrc":"23169:79:14","nodeType":"YulFunctionCall","src":"23169:79:14"},"nativeSrc":"23169:79:14","nodeType":"YulExpressionStatement","src":"23169:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"23142:7:14","nodeType":"YulIdentifier","src":"23142:7:14"},{"name":"headStart","nativeSrc":"23151:9:14","nodeType":"YulIdentifier","src":"23151:9:14"}],"functionName":{"name":"sub","nativeSrc":"23138:3:14","nodeType":"YulIdentifier","src":"23138:3:14"},"nativeSrc":"23138:23:14","nodeType":"YulFunctionCall","src":"23138:23:14"},{"kind":"number","nativeSrc":"23163:2:14","nodeType":"YulLiteral","src":"23163:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"23134:3:14","nodeType":"YulIdentifier","src":"23134:3:14"},"nativeSrc":"23134:32:14","nodeType":"YulFunctionCall","src":"23134:32:14"},"nativeSrc":"23131:119:14","nodeType":"YulIf","src":"23131:119:14"},{"nativeSrc":"23260:127:14","nodeType":"YulBlock","src":"23260:127:14","statements":[{"nativeSrc":"23275:15:14","nodeType":"YulVariableDeclaration","src":"23275:15:14","value":{"kind":"number","nativeSrc":"23289:1:14","nodeType":"YulLiteral","src":"23289:1:14","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23279:6:14","nodeType":"YulTypedName","src":"23279:6:14","type":""}]},{"nativeSrc":"23304:73:14","nodeType":"YulAssignment","src":"23304:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23349:9:14","nodeType":"YulIdentifier","src":"23349:9:14"},{"name":"offset","nativeSrc":"23360:6:14","nodeType":"YulIdentifier","src":"23360:6:14"}],"functionName":{"name":"add","nativeSrc":"23345:3:14","nodeType":"YulIdentifier","src":"23345:3:14"},"nativeSrc":"23345:22:14","nodeType":"YulFunctionCall","src":"23345:22:14"},{"name":"dataEnd","nativeSrc":"23369:7:14","nodeType":"YulIdentifier","src":"23369:7:14"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"23314:30:14","nodeType":"YulIdentifier","src":"23314:30:14"},"nativeSrc":"23314:63:14","nodeType":"YulFunctionCall","src":"23314:63:14"},"variableNames":[{"name":"value0","nativeSrc":"23304:6:14","nodeType":"YulIdentifier","src":"23304:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"23045:349:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23091:9:14","nodeType":"YulTypedName","src":"23091:9:14","type":""},{"name":"dataEnd","nativeSrc":"23102:7:14","nodeType":"YulTypedName","src":"23102:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"23114:6:14","nodeType":"YulTypedName","src":"23114:6:14","type":""}],"src":"23045:349:14"},{"body":{"nativeSrc":"23506:76:14","nodeType":"YulBlock","src":"23506:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"23528:6:14","nodeType":"YulIdentifier","src":"23528:6:14"},{"kind":"number","nativeSrc":"23536:1:14","nodeType":"YulLiteral","src":"23536:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"23524:3:14","nodeType":"YulIdentifier","src":"23524:3:14"},"nativeSrc":"23524:14:14","nodeType":"YulFunctionCall","src":"23524:14:14"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nativeSrc":"23540:34:14","nodeType":"YulLiteral","src":"23540:34:14","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nativeSrc":"23517:6:14","nodeType":"YulIdentifier","src":"23517:6:14"},"nativeSrc":"23517:58:14","nodeType":"YulFunctionCall","src":"23517:58:14"},"nativeSrc":"23517:58:14","nodeType":"YulExpressionStatement","src":"23517:58:14"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nativeSrc":"23400:182:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"23498:6:14","nodeType":"YulTypedName","src":"23498:6:14","type":""}],"src":"23400:182:14"},{"body":{"nativeSrc":"23734:220:14","nodeType":"YulBlock","src":"23734:220:14","statements":[{"nativeSrc":"23744:74:14","nodeType":"YulAssignment","src":"23744:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"23810:3:14","nodeType":"YulIdentifier","src":"23810:3:14"},{"kind":"number","nativeSrc":"23815:2:14","nodeType":"YulLiteral","src":"23815:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"23751:58:14","nodeType":"YulIdentifier","src":"23751:58:14"},"nativeSrc":"23751:67:14","nodeType":"YulFunctionCall","src":"23751:67:14"},"variableNames":[{"name":"pos","nativeSrc":"23744:3:14","nodeType":"YulIdentifier","src":"23744:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"23916:3:14","nodeType":"YulIdentifier","src":"23916:3:14"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nativeSrc":"23827:88:14","nodeType":"YulIdentifier","src":"23827:88:14"},"nativeSrc":"23827:93:14","nodeType":"YulFunctionCall","src":"23827:93:14"},"nativeSrc":"23827:93:14","nodeType":"YulExpressionStatement","src":"23827:93:14"},{"nativeSrc":"23929:19:14","nodeType":"YulAssignment","src":"23929:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"23940:3:14","nodeType":"YulIdentifier","src":"23940:3:14"},{"kind":"number","nativeSrc":"23945:2:14","nodeType":"YulLiteral","src":"23945:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23936:3:14","nodeType":"YulIdentifier","src":"23936:3:14"},"nativeSrc":"23936:12:14","nodeType":"YulFunctionCall","src":"23936:12:14"},"variableNames":[{"name":"end","nativeSrc":"23929:3:14","nodeType":"YulIdentifier","src":"23929:3:14"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nativeSrc":"23588:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23722:3:14","nodeType":"YulTypedName","src":"23722:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23730:3:14","nodeType":"YulTypedName","src":"23730:3:14","type":""}],"src":"23588:366:14"},{"body":{"nativeSrc":"24131:248:14","nodeType":"YulBlock","src":"24131:248:14","statements":[{"nativeSrc":"24141:26:14","nodeType":"YulAssignment","src":"24141:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"24153:9:14","nodeType":"YulIdentifier","src":"24153:9:14"},{"kind":"number","nativeSrc":"24164:2:14","nodeType":"YulLiteral","src":"24164:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24149:3:14","nodeType":"YulIdentifier","src":"24149:3:14"},"nativeSrc":"24149:18:14","nodeType":"YulFunctionCall","src":"24149:18:14"},"variableNames":[{"name":"tail","nativeSrc":"24141:4:14","nodeType":"YulIdentifier","src":"24141:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24188:9:14","nodeType":"YulIdentifier","src":"24188:9:14"},{"kind":"number","nativeSrc":"24199:1:14","nodeType":"YulLiteral","src":"24199:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24184:3:14","nodeType":"YulIdentifier","src":"24184:3:14"},"nativeSrc":"24184:17:14","nodeType":"YulFunctionCall","src":"24184:17:14"},{"arguments":[{"name":"tail","nativeSrc":"24207:4:14","nodeType":"YulIdentifier","src":"24207:4:14"},{"name":"headStart","nativeSrc":"24213:9:14","nodeType":"YulIdentifier","src":"24213:9:14"}],"functionName":{"name":"sub","nativeSrc":"24203:3:14","nodeType":"YulIdentifier","src":"24203:3:14"},"nativeSrc":"24203:20:14","nodeType":"YulFunctionCall","src":"24203:20:14"}],"functionName":{"name":"mstore","nativeSrc":"24177:6:14","nodeType":"YulIdentifier","src":"24177:6:14"},"nativeSrc":"24177:47:14","nodeType":"YulFunctionCall","src":"24177:47:14"},"nativeSrc":"24177:47:14","nodeType":"YulExpressionStatement","src":"24177:47:14"},{"nativeSrc":"24233:139:14","nodeType":"YulAssignment","src":"24233:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"24367:4:14","nodeType":"YulIdentifier","src":"24367:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nativeSrc":"24241:124:14","nodeType":"YulIdentifier","src":"24241:124:14"},"nativeSrc":"24241:131:14","nodeType":"YulFunctionCall","src":"24241:131:14"},"variableNames":[{"name":"tail","nativeSrc":"24233:4:14","nodeType":"YulIdentifier","src":"24233:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"23960:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24111:9:14","nodeType":"YulTypedName","src":"24111:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24126:4:14","nodeType":"YulTypedName","src":"24126:4:14","type":""}],"src":"23960:419:14"},{"body":{"nativeSrc":"24491:72:14","nodeType":"YulBlock","src":"24491:72:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24513:6:14","nodeType":"YulIdentifier","src":"24513:6:14"},{"kind":"number","nativeSrc":"24521:1:14","nodeType":"YulLiteral","src":"24521:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24509:3:14","nodeType":"YulIdentifier","src":"24509:3:14"},"nativeSrc":"24509:14:14","nodeType":"YulFunctionCall","src":"24509:14:14"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nativeSrc":"24525:30:14","nodeType":"YulLiteral","src":"24525:30:14","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nativeSrc":"24502:6:14","nodeType":"YulIdentifier","src":"24502:6:14"},"nativeSrc":"24502:54:14","nodeType":"YulFunctionCall","src":"24502:54:14"},"nativeSrc":"24502:54:14","nodeType":"YulExpressionStatement","src":"24502:54:14"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nativeSrc":"24385:178:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"24483:6:14","nodeType":"YulTypedName","src":"24483:6:14","type":""}],"src":"24385:178:14"},{"body":{"nativeSrc":"24715:220:14","nodeType":"YulBlock","src":"24715:220:14","statements":[{"nativeSrc":"24725:74:14","nodeType":"YulAssignment","src":"24725:74:14","value":{"arguments":[{"name":"pos","nativeSrc":"24791:3:14","nodeType":"YulIdentifier","src":"24791:3:14"},{"kind":"number","nativeSrc":"24796:2:14","nodeType":"YulLiteral","src":"24796:2:14","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"24732:58:14","nodeType":"YulIdentifier","src":"24732:58:14"},"nativeSrc":"24732:67:14","nodeType":"YulFunctionCall","src":"24732:67:14"},"variableNames":[{"name":"pos","nativeSrc":"24725:3:14","nodeType":"YulIdentifier","src":"24725:3:14"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"24897:3:14","nodeType":"YulIdentifier","src":"24897:3:14"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nativeSrc":"24808:88:14","nodeType":"YulIdentifier","src":"24808:88:14"},"nativeSrc":"24808:93:14","nodeType":"YulFunctionCall","src":"24808:93:14"},"nativeSrc":"24808:93:14","nodeType":"YulExpressionStatement","src":"24808:93:14"},{"nativeSrc":"24910:19:14","nodeType":"YulAssignment","src":"24910:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"24921:3:14","nodeType":"YulIdentifier","src":"24921:3:14"},{"kind":"number","nativeSrc":"24926:2:14","nodeType":"YulLiteral","src":"24926:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24917:3:14","nodeType":"YulIdentifier","src":"24917:3:14"},"nativeSrc":"24917:12:14","nodeType":"YulFunctionCall","src":"24917:12:14"},"variableNames":[{"name":"end","nativeSrc":"24910:3:14","nodeType":"YulIdentifier","src":"24910:3:14"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nativeSrc":"24569:366:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24703:3:14","nodeType":"YulTypedName","src":"24703:3:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24711:3:14","nodeType":"YulTypedName","src":"24711:3:14","type":""}],"src":"24569:366:14"},{"body":{"nativeSrc":"25112:248:14","nodeType":"YulBlock","src":"25112:248:14","statements":[{"nativeSrc":"25122:26:14","nodeType":"YulAssignment","src":"25122:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"25134:9:14","nodeType":"YulIdentifier","src":"25134:9:14"},{"kind":"number","nativeSrc":"25145:2:14","nodeType":"YulLiteral","src":"25145:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25130:3:14","nodeType":"YulIdentifier","src":"25130:3:14"},"nativeSrc":"25130:18:14","nodeType":"YulFunctionCall","src":"25130:18:14"},"variableNames":[{"name":"tail","nativeSrc":"25122:4:14","nodeType":"YulIdentifier","src":"25122:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25169:9:14","nodeType":"YulIdentifier","src":"25169:9:14"},{"kind":"number","nativeSrc":"25180:1:14","nodeType":"YulLiteral","src":"25180:1:14","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25165:3:14","nodeType":"YulIdentifier","src":"25165:3:14"},"nativeSrc":"25165:17:14","nodeType":"YulFunctionCall","src":"25165:17:14"},{"arguments":[{"name":"tail","nativeSrc":"25188:4:14","nodeType":"YulIdentifier","src":"25188:4:14"},{"name":"headStart","nativeSrc":"25194:9:14","nodeType":"YulIdentifier","src":"25194:9:14"}],"functionName":{"name":"sub","nativeSrc":"25184:3:14","nodeType":"YulIdentifier","src":"25184:3:14"},"nativeSrc":"25184:20:14","nodeType":"YulFunctionCall","src":"25184:20:14"}],"functionName":{"name":"mstore","nativeSrc":"25158:6:14","nodeType":"YulIdentifier","src":"25158:6:14"},"nativeSrc":"25158:47:14","nodeType":"YulFunctionCall","src":"25158:47:14"},"nativeSrc":"25158:47:14","nodeType":"YulExpressionStatement","src":"25158:47:14"},{"nativeSrc":"25214:139:14","nodeType":"YulAssignment","src":"25214:139:14","value":{"arguments":[{"name":"tail","nativeSrc":"25348:4:14","nodeType":"YulIdentifier","src":"25348:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nativeSrc":"25222:124:14","nodeType":"YulIdentifier","src":"25222:124:14"},"nativeSrc":"25222:131:14","nodeType":"YulFunctionCall","src":"25222:131:14"},"variableNames":[{"name":"tail","nativeSrc":"25214:4:14","nodeType":"YulIdentifier","src":"25214:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24941:419:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25092:9:14","nodeType":"YulTypedName","src":"25092:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25107:4:14","nodeType":"YulTypedName","src":"25107:4:14","type":""}],"src":"24941:419:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x303 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1643 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x604 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x1900 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH2 0x879 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1ACE JUMP JUMPDEST PUSH2 0x88F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x8F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH2 0x943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1B51 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x40E JUMPI POP PUSH2 0x40D DUP3 PUSH2 0xA41 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x424 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x472 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x480 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B2 DUP3 PUSH2 0xAAB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 DUP3 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55F SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x587 PUSH2 0xAF6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5B6 JUMPI POP PUSH2 0x5B5 DUP2 PUSH2 0x5B0 PUSH2 0xAF6 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST JUMPDEST PUSH2 0x5F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EC SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5FF DUP4 DUP4 PUSH2 0xAFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x615 PUSH2 0x60F PUSH2 0xAF6 JUMP JUMPDEST DUP3 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64B SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65F DUP4 DUP4 DUP4 PUSH2 0xC4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x67F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x88F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x690 DUP4 PUSH2 0xF45 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F8 SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77B SWAP1 PUSH2 0x1E85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2378 PUSH1 0x57 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7F6 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x822 SWAP1 PUSH2 0x1BC0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x86F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x844 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x86F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x852 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88B PUSH2 0x884 PUSH2 0xAF6 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF82 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8A0 PUSH2 0x89A PUSH2 0xAF6 JUMP JUMPDEST DUP4 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x8DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP1 PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EB DUP5 DUP5 DUP5 DUP5 PUSH2 0x10EE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8FD CALLER PUSH1 0x6 SLOAD PUSH2 0x114A JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH32 0xEF1DA42F89C42F48BEFA143007E6F5EFD84A2D1CC3DC97C5EDD2D3373220F66D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x94E DUP3 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x98D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x984 SWAP1 PUSH2 0x1F7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2378 PUSH1 0x57 SWAP2 CODECOPY SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB4 DUP2 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEA SWAP1 PUSH2 0x1DF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB71 DUP4 PUSH2 0x684 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBC3 DUP4 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC05 JUMPI POP PUSH2 0xC04 DUP2 DUP6 PUSH2 0x9AD JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xC43 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC2B DUP5 PUSH2 0x4A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6C DUP3 PUSH2 0x684 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB9 SWAP1 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD28 SWAP1 PUSH2 0x209E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD3E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11A9 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD5E DUP3 PUSH2 0x684 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAB SWAP1 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xF40 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE7 SWAP1 PUSH2 0x210A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x10E1 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10F9 DUP5 DUP5 DUP5 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x1105 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x1144 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1164 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x133C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x118A DUP4 PUSH2 0xF45 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1397 JUMP JUMPDEST ISZERO PUSH2 0x132F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11FF PUSH2 0xAF6 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1221 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2211 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x125D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x125A SWAP2 SWAP1 PUSH2 0x2272 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12DF JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CE SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1346 DUP4 DUP4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x1353 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x1392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1389 SWAP1 PUSH2 0x219C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1429 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1420 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1432 DUP2 PUSH2 0x1168 JUMP JUMPDEST ISZERO PUSH2 0x1472 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1469 SWAP1 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1480 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11A9 JUMP JUMPDEST PUSH2 0x1489 DUP2 PUSH2 0x1168 JUMP JUMPDEST ISZERO PUSH2 0x14C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14C0 SWAP1 PUSH2 0x2357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x15D3 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x11AF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1620 DUP2 PUSH2 0x15EB JUMP JUMPDEST DUP2 EQ PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x163D DUP2 PUSH2 0x1617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1659 JUMPI PUSH2 0x1658 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1667 DUP5 DUP3 DUP6 ADD PUSH2 0x162E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1685 DUP2 PUSH2 0x1670 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x167C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16E0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x16C5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1708 DUP3 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x1712 DUP2 DUP6 PUSH2 0x16B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1722 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x16EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1750 DUP2 DUP5 PUSH2 0x16FD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x176B DUP2 PUSH2 0x1758 JUMP JUMPDEST DUP2 EQ PUSH2 0x1776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1788 DUP2 PUSH2 0x1762 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A4 JUMPI PUSH2 0x17A3 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B2 DUP5 DUP3 DUP6 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17E6 DUP3 PUSH2 0x17BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F6 DUP2 PUSH2 0x17DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1811 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1820 DUP2 PUSH2 0x17DB JUMP JUMPDEST DUP2 EQ PUSH2 0x182B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183D DUP2 PUSH2 0x1817 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x185A JUMPI PUSH2 0x1859 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1868 DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1879 DUP6 DUP3 DUP7 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x189C JUMPI PUSH2 0x189B PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18AA DUP7 DUP3 DUP8 ADD PUSH2 0x182E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18BB DUP7 DUP3 DUP8 ADD PUSH2 0x182E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18CC DUP7 DUP3 DUP8 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x18DF DUP2 PUSH2 0x1758 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1916 JUMPI PUSH2 0x1915 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1924 DUP5 DUP3 DUP6 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH2 0x1670 JUMP JUMPDEST DUP2 EQ PUSH2 0x1941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1953 DUP2 PUSH2 0x192D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1970 JUMPI PUSH2 0x196F PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x197E DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x198F DUP6 DUP3 DUP7 ADD PUSH2 0x1944 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x19DB DUP3 PUSH2 0x16EC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19FA JUMPI PUSH2 0x19F9 PUSH2 0x19A3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0D PUSH2 0x15D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A19 DUP3 DUP3 PUSH2 0x19D2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A39 JUMPI PUSH2 0x1A38 PUSH2 0x19A3 JUMP JUMPDEST JUMPDEST PUSH2 0x1A42 DUP3 PUSH2 0x16EC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A71 PUSH2 0x1A6C DUP5 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x1A03 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A8D JUMPI PUSH2 0x1A8C PUSH2 0x199E JUMP JUMPDEST JUMPDEST PUSH2 0x1A98 DUP5 DUP3 DUP6 PUSH2 0x1A4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1AB5 JUMPI PUSH2 0x1AB4 PUSH2 0x1999 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1AC5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AE8 JUMPI PUSH2 0x1AE7 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF6 DUP8 DUP3 DUP9 ADD PUSH2 0x182E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1B07 DUP8 DUP3 DUP9 ADD PUSH2 0x182E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1B18 DUP8 DUP3 DUP9 ADD PUSH2 0x1779 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B39 JUMPI PUSH2 0x1B38 PUSH2 0x15E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1B45 DUP8 DUP3 DUP9 ADD PUSH2 0x1AA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B68 JUMPI PUSH2 0x1B67 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B76 DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B87 DUP6 DUP3 DUP7 ADD PUSH2 0x182E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BD8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BEB JUMPI PUSH2 0x1BEA PUSH2 0x1B91 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4D PUSH1 0x21 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C58 DUP3 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7C DUP2 PUSH2 0x1C40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CDF PUSH1 0x3D DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEA DUP3 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D0E DUP2 PUSH2 0x1CD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D71 PUSH1 0x2D DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D7C DUP3 PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DA0 DUP2 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DDD PUSH1 0x18 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE8 DUP3 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E0C DUP2 PUSH2 0x1DD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6F PUSH1 0x29 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7A DUP3 PUSH2 0x1E13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E9E DUP2 PUSH2 0x1E62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EDF DUP3 PUSH2 0x1758 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EEA DUP4 PUSH2 0x1758 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F02 JUMPI PUSH2 0x1F01 PUSH2 0x1EA5 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F64 PUSH1 0x2F DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F6F DUP3 PUSH2 0x1F08 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F93 DUP2 PUSH2 0x1F57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF6 PUSH1 0x25 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2001 DUP3 PUSH2 0x1F9A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2025 DUP2 PUSH2 0x1FE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2088 PUSH1 0x24 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2093 DUP3 PUSH2 0x202C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20B7 DUP2 PUSH2 0x207B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F4 PUSH1 0x19 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FF DUP3 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2123 DUP2 PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2186 PUSH1 0x32 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2191 DUP3 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B5 DUP2 PUSH2 0x2179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E3 DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x21ED DUP2 DUP6 PUSH2 0x21C7 JUMP JUMPDEST SWAP4 POP PUSH2 0x21FD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x16C2 JUMP JUMPDEST PUSH2 0x2206 DUP2 PUSH2 0x16EC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2226 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x2233 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17ED JUMP JUMPDEST PUSH2 0x2240 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18D6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2252 DUP2 DUP5 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x226C DUP2 PUSH2 0x1617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2288 JUMPI PUSH2 0x2287 PUSH2 0x15E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2296 DUP5 DUP3 DUP6 ADD PUSH2 0x225D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22D5 PUSH1 0x20 DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E0 DUP3 PUSH2 0x229F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2304 DUP2 PUSH2 0x22C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2341 PUSH1 0x1C DUP4 PUSH2 0x16B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x234C DUP3 PUSH2 0x230B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2370 DUP2 PUSH2 0x2334 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH10 0x7066733A2F2F62616679 PUSH3 0x656967 CALLER CALLDATACOPY PUSH10 0x6F6972373673376D6735 PUSH16 0x6F6265746E636F6A636D336333687861 PUSH20 0x79643472766964346A71687934676B6168656734 0x2F EXTCODEHASH PUSH7 0x696C656E616D65 RETURNDATASIZE ADDRESS 0x2D POP SSTORE SELFBALANCE 0x2E PUSH11 0x736F6EA264697066735822 SLT KECCAK256 EXTCODESIZE 0xAB 0xAC 0xE0 0x24 SAR 0xB4 0x29 PUSH24 0x90998F1931EA3FB57827A6EF82E4BB27640A06F49FEE564 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"123:752:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;784:88:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;155:124:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;439:148:13;;;:::i;:::-;;592:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;784:88:13:-;832:7;853:14;;846:21;;784:88;:::o;1929:204:1:-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;155:124:13:-;;;;;;;;;;;;;;;;;;;:::o;2633:102:1:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;439:148:13:-;470:37;480:10;492:14;;470:9;:37::i;:::-;527:14;;517:25;;;;;;;;;;581:1;564:14;;:18;;;;:::i;:::-;547:14;:35;;;;439:148::o;592:187::-;657:13;685:16;693:7;685;:16::i;:::-;677:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;765:9;;;;;;;;;;;;;;;;;758:16;;592:187;;;:::o;4388:162:1:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:1:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;655:96:6:-;708:7;734:10;727:17;;655:96;:::o;12572:171:1:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;7995:108::-;8070:26;8080:2;8084:7;8070:26;;;;;;;;;;;;:9;:26::i;:::-;7995:108;;:::o;7120:126::-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;8324:279::-;8418:18;8424:2;8428:7;8418:5;:18::i;:::-;8467:53;8498:1;8502:2;8506:7;8515:4;8467:22;:53::i;:::-;8446:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8324:279;;;:::o;1412:320:5:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8925:920:1:-;9018:1;9004:16;;:2;:16;;;8996:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9076:16;9084:7;9076;:16::i;:::-;9075:17;9067:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9136:48;9165:1;9169:2;9173:7;9182:1;9136:20;:48::i;:::-;9280:16;9288:7;9280;:16::i;:::-;9279:17;9271:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9688:1;9671:9;:13;9681:2;9671:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9729:2;9710:7;:16;9718:7;9710:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9772:7;9768:2;9747:33;;9764:1;9747:33;;;;;;;;;;;;9791:47;9819:1;9823:2;9827:7;9836:1;9791:19;:47::i;:::-;8925:920;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:619::-;4969:6;4977;4985;5034:2;5022:9;5013:7;5009:23;5005:32;5002:119;;;5040:79;;:::i;:::-;5002:119;5160:1;5185:53;5230:7;5221:6;5210:9;5206:22;5185:53;:::i;:::-;5175:63;;5131:117;5287:2;5313:53;5358:7;5349:6;5338:9;5334:22;5313:53;:::i;:::-;5303:63;;5258:118;5415:2;5441:53;5486:7;5477:6;5466:9;5462:22;5441:53;:::i;:::-;5431:63;;5386:118;4892:619;;;;;:::o;5517:118::-;5604:24;5622:5;5604:24;:::i;:::-;5599:3;5592:37;5517:118;;:::o;5641:222::-;5734:4;5772:2;5761:9;5757:18;5749:26;;5785:71;5853:1;5842:9;5838:17;5829:6;5785:71;:::i;:::-;5641:222;;;;:::o;5869:329::-;5928:6;5977:2;5965:9;5956:7;5952:23;5948:32;5945:119;;;5983:79;;:::i;:::-;5945:119;6103:1;6128:53;6173:7;6164:6;6153:9;6149:22;6128:53;:::i;:::-;6118:63;;6074:117;5869:329;;;;:::o;6204:116::-;6274:21;6289:5;6274:21;:::i;:::-;6267:5;6264:32;6254:60;;6310:1;6307;6300:12;6254:60;6204:116;:::o;6326:133::-;6369:5;6407:6;6394:20;6385:29;;6423:30;6447:5;6423:30;:::i;:::-;6326:133;;;;:::o;6465:468::-;6530:6;6538;6587:2;6575:9;6566:7;6562:23;6558:32;6555:119;;;6593:79;;:::i;:::-;6555:119;6713:1;6738:53;6783:7;6774:6;6763:9;6759:22;6738:53;:::i;:::-;6728:63;;6684:117;6840:2;6866:50;6908:7;6899:6;6888:9;6884:22;6866:50;:::i;:::-;6856:60;;6811:115;6465:468;;;;;:::o;6939:117::-;7048:1;7045;7038:12;7062:117;7171:1;7168;7161:12;7185:180;7233:77;7230:1;7223:88;7330:4;7327:1;7320:15;7354:4;7351:1;7344:15;7371:281;7454:27;7476:4;7454:27;:::i;:::-;7446:6;7442:40;7584:6;7572:10;7569:22;7548:18;7536:10;7533:34;7530:62;7527:88;;;7595:18;;:::i;:::-;7527:88;7635:10;7631:2;7624:22;7414:238;7371:281;;:::o;7658:129::-;7692:6;7719:20;;:::i;:::-;7709:30;;7748:33;7776:4;7768:6;7748:33;:::i;:::-;7658:129;;;:::o;7793:307::-;7854:4;7944:18;7936:6;7933:30;7930:56;;;7966:18;;:::i;:::-;7930:56;8004:29;8026:6;8004:29;:::i;:::-;7996:37;;8088:4;8082;8078:15;8070:23;;7793:307;;;:::o;8106:148::-;8204:6;8199:3;8194;8181:30;8245:1;8236:6;8231:3;8227:16;8220:27;8106:148;;;:::o;8260:423::-;8337:5;8362:65;8378:48;8419:6;8378:48;:::i;:::-;8362:65;:::i;:::-;8353:74;;8450:6;8443:5;8436:21;8488:4;8481:5;8477:16;8526:3;8517:6;8512:3;8508:16;8505:25;8502:112;;;8533:79;;:::i;:::-;8502:112;8623:54;8670:6;8665:3;8660;8623:54;:::i;:::-;8343:340;8260:423;;;;;:::o;8702:338::-;8757:5;8806:3;8799:4;8791:6;8787:17;8783:27;8773:122;;8814:79;;:::i;:::-;8773:122;8931:6;8918:20;8956:78;9030:3;9022:6;9015:4;9007:6;9003:17;8956:78;:::i;:::-;8947:87;;8763:277;8702:338;;;;:::o;9046:943::-;9141:6;9149;9157;9165;9214:3;9202:9;9193:7;9189:23;9185:33;9182:120;;;9221:79;;:::i;:::-;9182:120;9341:1;9366:53;9411:7;9402:6;9391:9;9387:22;9366:53;:::i;:::-;9356:63;;9312:117;9468:2;9494:53;9539:7;9530:6;9519:9;9515:22;9494:53;:::i;:::-;9484:63;;9439:118;9596:2;9622:53;9667:7;9658:6;9647:9;9643:22;9622:53;:::i;:::-;9612:63;;9567:118;9752:2;9741:9;9737:18;9724:32;9783:18;9775:6;9772:30;9769:117;;;9805:79;;:::i;:::-;9769:117;9910:62;9964:7;9955:6;9944:9;9940:22;9910:62;:::i;:::-;9900:72;;9695:287;9046:943;;;;;;;:::o;9995:474::-;10063:6;10071;10120:2;10108:9;10099:7;10095:23;10091:32;10088:119;;;10126:79;;:::i;:::-;10088:119;10246:1;10271:53;10316:7;10307:6;10296:9;10292:22;10271:53;:::i;:::-;10261:63;;10217:117;10373:2;10399:53;10444:7;10435:6;10424:9;10420:22;10399:53;:::i;:::-;10389:63;;10344:118;9995:474;;;;;:::o;10475:180::-;10523:77;10520:1;10513:88;10620:4;10617:1;10610:15;10644:4;10641:1;10634:15;10661:320;10705:6;10742:1;10736:4;10732:12;10722:22;;10789:1;10783:4;10779:12;10810:18;10800:81;;10866:4;10858:6;10854:17;10844:27;;10800:81;10928:2;10920:6;10917:14;10897:18;10894:38;10891:84;;10947:18;;:::i;:::-;10891:84;10712:269;10661:320;;;:::o;10987:220::-;11127:34;11123:1;11115:6;11111:14;11104:58;11196:3;11191:2;11183:6;11179:15;11172:28;10987:220;:::o;11213:366::-;11355:3;11376:67;11440:2;11435:3;11376:67;:::i;:::-;11369:74;;11452:93;11541:3;11452:93;:::i;:::-;11570:2;11565:3;11561:12;11554:19;;11213:366;;;:::o;11585:419::-;11751:4;11789:2;11778:9;11774:18;11766:26;;11838:9;11832:4;11828:20;11824:1;11813:9;11809:17;11802:47;11866:131;11992:4;11866:131;:::i;:::-;11858:139;;11585:419;;;:::o;12010:248::-;12150:34;12146:1;12138:6;12134:14;12127:58;12219:31;12214:2;12206:6;12202:15;12195:56;12010:248;:::o;12264:366::-;12406:3;12427:67;12491:2;12486:3;12427:67;:::i;:::-;12420:74;;12503:93;12592:3;12503:93;:::i;:::-;12621:2;12616:3;12612:12;12605:19;;12264:366;;;:::o;12636:419::-;12802:4;12840:2;12829:9;12825:18;12817:26;;12889:9;12883:4;12879:20;12875:1;12864:9;12860:17;12853:47;12917:131;13043:4;12917:131;:::i;:::-;12909:139;;12636:419;;;:::o;13061:232::-;13201:34;13197:1;13189:6;13185:14;13178:58;13270:15;13265:2;13257:6;13253:15;13246:40;13061:232;:::o;13299:366::-;13441:3;13462:67;13526:2;13521:3;13462:67;:::i;:::-;13455:74;;13538:93;13627:3;13538:93;:::i;:::-;13656:2;13651:3;13647:12;13640:19;;13299:366;;;:::o;13671:419::-;13837:4;13875:2;13864:9;13860:18;13852:26;;13924:9;13918:4;13914:20;13910:1;13899:9;13895:17;13888:47;13952:131;14078:4;13952:131;:::i;:::-;13944:139;;13671:419;;;:::o;14096:174::-;14236:26;14232:1;14224:6;14220:14;14213:50;14096:174;:::o;14276:366::-;14418:3;14439:67;14503:2;14498:3;14439:67;:::i;:::-;14432:74;;14515:93;14604:3;14515:93;:::i;:::-;14633:2;14628:3;14624:12;14617:19;;14276:366;;;:::o;14648:419::-;14814:4;14852:2;14841:9;14837:18;14829:26;;14901:9;14895:4;14891:20;14887:1;14876:9;14872:17;14865:47;14929:131;15055:4;14929:131;:::i;:::-;14921:139;;14648:419;;;:::o;15073:228::-;15213:34;15209:1;15201:6;15197:14;15190:58;15282:11;15277:2;15269:6;15265:15;15258:36;15073:228;:::o;15307:366::-;15449:3;15470:67;15534:2;15529:3;15470:67;:::i;:::-;15463:74;;15546:93;15635:3;15546:93;:::i;:::-;15664:2;15659:3;15655:12;15648:19;;15307:366;;;:::o;15679:419::-;15845:4;15883:2;15872:9;15868:18;15860:26;;15932:9;15926:4;15922:20;15918:1;15907:9;15903:17;15896:47;15960:131;16086:4;15960:131;:::i;:::-;15952:139;;15679:419;;;:::o;16104:180::-;16152:77;16149:1;16142:88;16249:4;16246:1;16239:15;16273:4;16270:1;16263:15;16290:191;16330:3;16349:20;16367:1;16349:20;:::i;:::-;16344:25;;16383:20;16401:1;16383:20;:::i;:::-;16378:25;;16426:1;16423;16419:9;16412:16;;16447:3;16444:1;16441:10;16438:36;;;16454:18;;:::i;:::-;16438:36;16290:191;;;;:::o;16487:234::-;16627:34;16623:1;16615:6;16611:14;16604:58;16696:17;16691:2;16683:6;16679:15;16672:42;16487:234;:::o;16727:366::-;16869:3;16890:67;16954:2;16949:3;16890:67;:::i;:::-;16883:74;;16966:93;17055:3;16966:93;:::i;:::-;17084:2;17079:3;17075:12;17068:19;;16727:366;;;:::o;17099:419::-;17265:4;17303:2;17292:9;17288:18;17280:26;;17352:9;17346:4;17342:20;17338:1;17327:9;17323:17;17316:47;17380:131;17506:4;17380:131;:::i;:::-;17372:139;;17099:419;;;:::o;17524:224::-;17664:34;17660:1;17652:6;17648:14;17641:58;17733:7;17728:2;17720:6;17716:15;17709:32;17524:224;:::o;17754:366::-;17896:3;17917:67;17981:2;17976:3;17917:67;:::i;:::-;17910:74;;17993:93;18082:3;17993:93;:::i;:::-;18111:2;18106:3;18102:12;18095:19;;17754:366;;;:::o;18126:419::-;18292:4;18330:2;18319:9;18315:18;18307:26;;18379:9;18373:4;18369:20;18365:1;18354:9;18350:17;18343:47;18407:131;18533:4;18407:131;:::i;:::-;18399:139;;18126:419;;;:::o;18551:223::-;18691:34;18687:1;18679:6;18675:14;18668:58;18760:6;18755:2;18747:6;18743:15;18736:31;18551:223;:::o;18780:366::-;18922:3;18943:67;19007:2;19002:3;18943:67;:::i;:::-;18936:74;;19019:93;19108:3;19019:93;:::i;:::-;19137:2;19132:3;19128:12;19121:19;;18780:366;;;:::o;19152:419::-;19318:4;19356:2;19345:9;19341:18;19333:26;;19405:9;19399:4;19395:20;19391:1;19380:9;19376:17;19369:47;19433:131;19559:4;19433:131;:::i;:::-;19425:139;;19152:419;;;:::o;19577:175::-;19717:27;19713:1;19705:6;19701:14;19694:51;19577:175;:::o;19758:366::-;19900:3;19921:67;19985:2;19980:3;19921:67;:::i;:::-;19914:74;;19997:93;20086:3;19997:93;:::i;:::-;20115:2;20110:3;20106:12;20099:19;;19758:366;;;:::o;20130:419::-;20296:4;20334:2;20323:9;20319:18;20311:26;;20383:9;20377:4;20373:20;20369:1;20358:9;20354:17;20347:47;20411:131;20537:4;20411:131;:::i;:::-;20403:139;;20130:419;;;:::o;20555:237::-;20695:34;20691:1;20683:6;20679:14;20672:58;20764:20;20759:2;20751:6;20747:15;20740:45;20555:237;:::o;20798:366::-;20940:3;20961:67;21025:2;21020:3;20961:67;:::i;:::-;20954:74;;21037:93;21126:3;21037:93;:::i;:::-;21155:2;21150:3;21146:12;21139:19;;20798:366;;;:::o;21170:419::-;21336:4;21374:2;21363:9;21359:18;21351:26;;21423:9;21417:4;21413:20;21409:1;21398:9;21394:17;21387:47;21451:131;21577:4;21451:131;:::i;:::-;21443:139;;21170:419;;;:::o;21595:98::-;21646:6;21680:5;21674:12;21664:22;;21595:98;;;:::o;21699:168::-;21782:11;21816:6;21811:3;21804:19;21856:4;21851:3;21847:14;21832:29;;21699:168;;;;:::o;21873:373::-;21959:3;21987:38;22019:5;21987:38;:::i;:::-;22041:70;22104:6;22099:3;22041:70;:::i;:::-;22034:77;;22120:65;22178:6;22173:3;22166:4;22159:5;22155:16;22120:65;:::i;:::-;22210:29;22232:6;22210:29;:::i;:::-;22205:3;22201:39;22194:46;;21963:283;21873:373;;;;:::o;22252:640::-;22447:4;22485:3;22474:9;22470:19;22462:27;;22499:71;22567:1;22556:9;22552:17;22543:6;22499:71;:::i;:::-;22580:72;22648:2;22637:9;22633:18;22624:6;22580:72;:::i;:::-;22662;22730:2;22719:9;22715:18;22706:6;22662:72;:::i;:::-;22781:9;22775:4;22771:20;22766:2;22755:9;22751:18;22744:48;22809:76;22880:4;22871:6;22809:76;:::i;:::-;22801:84;;22252:640;;;;;;;:::o;22898:141::-;22954:5;22985:6;22979:13;22970:22;;23001:32;23027:5;23001:32;:::i;:::-;22898:141;;;;:::o;23045:349::-;23114:6;23163:2;23151:9;23142:7;23138:23;23134:32;23131:119;;;23169:79;;:::i;:::-;23131:119;23289:1;23314:63;23369:7;23360:6;23349:9;23345:22;23314:63;:::i;:::-;23304:73;;23260:127;23045:349;;;;:::o;23400:182::-;23540:34;23536:1;23528:6;23524:14;23517:58;23400:182;:::o;23588:366::-;23730:3;23751:67;23815:2;23810:3;23751:67;:::i;:::-;23744:74;;23827:93;23916:3;23827:93;:::i;:::-;23945:2;23940:3;23936:12;23929:19;;23588:366;;;:::o;23960:419::-;24126:4;24164:2;24153:9;24149:18;24141:26;;24213:9;24207:4;24203:20;24199:1;24188:9;24184:17;24177:47;24241:131;24367:4;24241:131;:::i;:::-;24233:139;;23960:419;;;:::o;24385:178::-;24525:30;24521:1;24513:6;24509:14;24502:54;24385:178;:::o;24569:366::-;24711:3;24732:67;24796:2;24791:3;24732:67;:::i;:::-;24725:74;;24808:93;24897:3;24808:93;:::i;:::-;24926:2;24921:3;24917:12;24910:19;;24569:366;;;:::o;24941:419::-;25107:4;25145:2;25134:9;25130:18;25122:26;;25194:9;25188:4;25184:20;25180:1;25169:9;25165:17;25158:47;25222:131;25348:4;25222:131;:::i;:::-;25214:139;;24941:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1844000","executionCost":"infinite","totalCost":"infinite"},"external":{"TOKEN_URI()":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2899","getApproved(uint256)":"5300","getTokenCounter()":"2526","isApprovedForAll(address,address)":"infinite","mintNft()":"infinite","name()":"infinite","ownerOf(uint256)":"3066","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"TOKEN_URI()":"78ce9035","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","mintNft()":"c2229fea","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"DogMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/BasicNft.sol\":\"BasicNft\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/test/BasicNft.sol\":{\"content\":\"// SPDX-License-Indentifier: MIT\\r\\npragma solidity ^0.8.25;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\r\\n\\r\\ncontract BasicNft is ERC721 {\\r\\n\\tstring public constant TOKEN_URI = \\\"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\\\";\\r\\n\\tuint256 private s_tokenCounter;\\r\\n\\r\\n\\tevent DogMinted(uint256 indexed tokenId);\\r\\n\\t\\r\\n  constructor() ERC721(\\\"Dogie\\\", \\\"DOG\\\") {\\r\\n  \\ts_tokenCounter = 0;\\r\\n  }\\r\\n\\r\\n\\tfunction mintNft() public {\\r\\n\\t\\t_safeMint(msg.sender, s_tokenCounter);\\r\\n\\t\\temit DogMinted(s_tokenCounter);\\r\\n\\t\\ts_tokenCounter = s_tokenCounter + 1;\\r\\n\\t}\\r\\n\\r\\n\\tfunction tokenURI(uint256 tokenId) public view override returns (string memory) {\\r\\n\\t\\trequire(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\r\\n\\t\\treturn TOKEN_URI;\\r\\n\\t}\\r\\n\\r\\n\\tfunction getTokenCounter() public view returns (uint256) {\\r\\n\\t\\treturn s_tokenCounter;\\r\\n\\t}\\r\\n}\",\"keccak256\":\"0x351f0a5c90500ccfd0b15693d859de9c9f485045fdb970ed1ab14de2399095fe\"}},\"version\":1}","storageLayout":{"storage":[{"astId":90,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":92,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":96,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":100,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":104,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":110,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":3223,"contract":"contracts/test/BasicNft.sol:BasicNft","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}